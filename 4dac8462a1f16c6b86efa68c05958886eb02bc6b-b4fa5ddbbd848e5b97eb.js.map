{"version":3,"file":"4dac8462a1f16c6b86efa68c05958886eb02bc6b-b4fa5ddbbd848e5b97eb.js","mappings":"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","sources":["webpack://react/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://react/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://react/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://react/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://react/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://react/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://react/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://react/./node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://react/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://react/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://react/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://react/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://react/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://react/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://react/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://react/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://react/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://react/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://react/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://react/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://react/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://react/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://react/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://react/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://react/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://react/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://react/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://react/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://react/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://react/./node_modules/framer-motion/dist/es/frameloop/microtask.mjs","webpack://react/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://react/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://react/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://react/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://react/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://react/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://react/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://react/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://react/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://react/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://react/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://react/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://react/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://react/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://react/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://react/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://react/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://react/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://react/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://react/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://react/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://react/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://react/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/components/create-factory.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/components/motion/create.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/mix/color.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/mix/complex.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/mix/index.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/mix/number.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","webpack://react/./node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","webpack://react/./node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","webpack://react/./node_modules/motion-dom/dist/es/animation/controls/Group.mjs","webpack://react/./node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","webpack://react/./node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","webpack://react/./node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","webpack://react/./node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","webpack://react/./node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","webpack://react/./node_modules/motion-dom/dist/es/utils/supports/flags.mjs","webpack://react/./node_modules/motion-dom/dist/es/utils/supports/memo.mjs","webpack://react/./node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","webpack://react/./node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","webpack://react/./node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","webpack://react/./node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","webpack://react/./node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","webpack://react/./node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","webpack://react/./node_modules/motion-dom/dist/es/gestures/hover.mjs","webpack://react/./node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","webpack://react/./node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","webpack://react/./node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","webpack://react/./node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","webpack://react/./node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","webpack://react/./node_modules/motion-dom/dist/es/gestures/press/index.mjs","webpack://react/./node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","webpack://react/./node_modules/motion-utils/dist/es/errors.mjs","webpack://react/./node_modules/motion-utils/dist/es/memo.mjs","webpack://react/./node_modules/motion-utils/dist/es/noop.mjs","webpack://react/./node_modules/motion-utils/dist/es/progress.mjs","webpack://react/./node_modules/motion-utils/dist/es/time-conversion.mjs"],"sourcesContent":["import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe)\n            register(id);\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from 'motion-dom';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from 'motion-utils';\nimport { setDragLock } from 'motion-dom';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { getValueTransition } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => updateSVGDimensions(current, renderState));\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                renderSVG(current, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.18.0\", `Attempting to mix Motion versions ${nextValue.version} with 11.18.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.18.0\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { progress } from 'motion-utils';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\n/**\n * Filter out events that are not pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        callback(event);\n    };\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = filterEvents((enterEvent) => {\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = filterEvents((leaveEvent) => {\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        });\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    });\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(elementOrSelector, onPressStart, options = {}) {\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = (startEvent) => {\n        const element = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\n            return;\n        isPressing.add(element);\n        const onPressEnd = onPressStart(startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n                return;\n            }\n            isPressing.delete(element);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, options.useGlobalTarget ||\n                isNodeOrChild(element, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach((element) => {\n        if (!isElementKeyboardAccessible(element) &&\n            element.getAttribute(\"tabindex\") === null) {\n            element.tabIndex = 0;\n        }\n        const target = options.useGlobalTarget ? window : element;\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","const noop = (any) => any;\n\nexport { noop };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n"],"names":["usePresence","subscribe","context","useContext","isPresent","onExitComplete","register","id","useId","useEffect","safeToRemove","useCallback","LayoutGroupContext","createContext","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","PresenceContext","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","key","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","callback","has","step","schedule","keepAlive","immediate","queue","add","cancel","delete","process","frameData","forEach","clear","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","useManualTiming","performance","now","Math","max","min","i","length","frame","cancelFrame","frameSteps","requestAnimationFrame","clearTime","undefined","time","set","newTime","queueMicrotask","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","args","get","_target","isAnimationControls","v","start","isKeyframesTarget","Array","isArray","shallowCompare","next","prev","prevLength","isVariantLabel","getValueState","visualElement","values","value","getVelocity","resolveVariantFromProps","props","definition","custom","current","velocity","variants","resolveVariant","getProps","variantPriorityOrder","variantProps","transformPropOrder","transformProps","positionalKeys","setMotionValue","hasValue","getValue","addValue","isMotionValue","Boolean","addValueToWillChange","willChange","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","instantAnimationState","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","easing","reverseEasing","backOut","backIn","backInOut","anticipate","pow","circIn","sin","acos","circOut","circInOut","isZeroValueString","test","maxDefaults","applyDefaultFilter","name","slice","split","number","match","unit","defaultValue","functionRegex","filter","complex","getAnimatableNone","functions","map","join","browserNumberValueTypes","borderWidth","px","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","y","z","perspective","transformPerspective","opacity","originX","originY","originZ","transform","round","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","color","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","isNumOrPxType","getPosFromMatrix","matrix","pos","parseFloat","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","element","transformsToRestore","removedTransforms","push","startsWith","removeNonTranslationalTransform","measureInitialState","restore","_a","measureEndState","suspendedScrollY","window","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","constructor","unresolvedKeyframes","onComplete","motionValue","isAsync","this","isComplete","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","token","fallback","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","trim","testValueType","type","dimensionValueTypes","vw","vh","parse","findDimensionValueType","find","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","target","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","isNotNull","getFinalKeyframe","keyframes","repeat","repeatType","resolvedKeyframes","index","BaseAnimation","autoplay","delay","repeatDelay","options","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","duration","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","flatten","ease","Promise","calcGeneratorVelocity","resolveValue","prevT","springDefaults","granular","default","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","clamp","undampedFreq","exponentialDecay","a","b","calcAngularFreq","c","exp","d","e","f","g","initialGuess","result","rootIterations","approximateRoot","isNaN","stiffness","damping","sqrt","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","visualDuration","restSpeed","restDelta","done","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","generator","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toString","progress","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","offset","o","convertOffsetToTimes","mapTimeToKeyframe","interpolate","splice","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","percent","MainThreadAnimation","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","teardown","onStop","KeyframeResolver$1","Object","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","pipe","mix","reverse","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","supportsWaapi","hasOwnProperty","call","Element","prototype","unsupportedEasingFunctions","AcceleratedAnimation","owner","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","animation","valueName","keyframeOptions","animate","iterations","direction","startWaapiAnimation","pendingTimeline","onfinish","playbackRate","playState","attachTimeline","timeline","sampleTime","setWithVelocity","supports","HTMLElement","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","transition","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animations","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","all","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","notify","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","isControllingVariants","parent","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","updateAnimationControlsSubscription","unmountControls","mount","prevAnimate","prevProps","unmount","arguments","prevIsPresent","prevPresenceContext","exitAnimation","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","extractEventInfo","event","point","pageX","pageY","addPointerEvent","addPointerInfo","PanSession","handlers","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","isRefObject","ref","calcLength","axis","calcAxisDelta","source","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","transformTemplate","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","template","createTransformer","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","defaultScaleCorrectors","group","didUpdate","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","L","jsx","applyTo","boxShadow","compareByDepth","FlatTree","children","isDirty","timeout","checkElapsed","resolveMotionValue","unwrappedValue","toValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","tagName","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","output","to","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","_b","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","includes","roundPoint","maxDistance","DocumentProjectionNode","document","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","handleHoverEvent","lifecycle","handlePressEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","tap","endEvent","success","useGlobalTarget","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","LazyContext","strict","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","onMount","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","lowercaseSVGElements","isSVGComponent","indexOf","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","renderState","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","vars","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createHtmlRenderState","createSvgRenderState","tag","renderHTML","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","isForcedMotionValue","newValues","charAt","substring","layoutProps","svgMotionConfig","needsMeasure","getBBox","updateSVGDimensions","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createElement","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","hasAnimated","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","unsubscribe","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","getAttribute","motion","checkStringStartsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","MotionGlobalConfig","addUniqueItem","arr","item","removeItem","input","isClamp","mixer","inputLength","isZeroDeltaRange","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","isBrowser","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","hex","rgba","hsla","asRGBA","model","hue","saturation","lightness","alpha","red","green","blue","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","originStats","targetStats","indexes","var","mixVisibility","orderedOrigin","pointers","types","originIndex","originValue","matchOrder","defaultOffset","remaining","offsetProgress","fillOffset","combineFunctions","transformers","SubscriptionManager","subscriptions","numSubscriptions","getSize","useConstant","init","useIsomorphicLayoutEffect","useLayoutEffect","velocityPerSecond","frameDuration","collectMotionValues","MotionValue","version","canTrackVelocity","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","prevFrameValue","prevUpdatedAt","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","r","parseInt","alpha$1","rgbUnit","clampRgbUnit","singleColorRegex","isColorString","testProp","isNullish","splitColor","aName","bName","cName","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","parsedValue","parseComplexValue","numSections","sanitize","convertNumbersToZero","parsed","transformer","createUnitType","endsWith","degrees","progressPercentage","floatRegex","supportsScrollTimeline","memo","ScrollTimeline","runAll","finished","getAll","propName","setAll","newValue","methodName","GroupPlaybackControls","onResolve","onReject","catch","maxGeneratorDuration","calcGeneratorDuration","isBezierDefinition","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","supportsLinearEasing","generateLinearEasing","resolution","points","numPoints","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","segmentEasing","isDragActive","resolveElements","elementOrSelector","scope","selectorCache","elements","querySelectorAll","setupGesture","gestureAbortController","AbortController","signal","abort","filterEvents","pointerType","onHoverStart","eventOptions","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","isNodeOrChild","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","isPressing","firePointerEvent","dispatchEvent","PointerEvent","bubbles","enableKeyboardPress","focusEvent","currentTarget","handleKeydown","handleKeyup","isValidPressEvent","press","onPressStart","cancelEvents","startPress","onPressEnd","onPointerEnd","onPointerUp","onPointerCancel","upEvent","cancelEvent","isElementKeyboardAccessible","setDragLock","warning","invariant","any","toFromDifference","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds"],"sourceRoot":""}