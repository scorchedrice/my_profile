{"version":3,"file":"dbdd2fc2213658675e48ed2ec0b8463eb56eaa1b-c4f8f1a7ef6740650d44.js","mappings":"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","sources":["webpack://react/./src/shared/isMobile.ts","webpack://react/./node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/resize/handle-element.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/resize/handle-window.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/scroll/info.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/scroll/offsets/edge.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/scroll/offsets/offset.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/scroll/offsets/presets.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/scroll/offsets/index.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/scroll/offsets/inset.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/scroll/on-scroll-handler.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/scroll/track.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/resize/index.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/scroll/index.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/use-scroll.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/transform.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/use-combine-values.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/use-motion-value.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/use-transform.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/use-computed.mjs","webpack://react/./src/feature/animation/opacity.ts","webpack://react/./src/pages/IntroPage.tsx"],"sourcesContent":["export const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","import { resolveElements } from 'motion-dom';\n\nconst resizeHandlers = new WeakMap();\nlet observer;\nfunction getElementSize(target, borderBoxSize) {\n    if (borderBoxSize) {\n        const { inlineSize, blockSize } = borderBoxSize[0];\n        return { width: inlineSize, height: blockSize };\n    }\n    else if (target instanceof SVGElement && \"getBBox\" in target) {\n        return target.getBBox();\n    }\n    else {\n        return {\n            width: target.offsetWidth,\n            height: target.offsetHeight,\n        };\n    }\n}\nfunction notifyTarget({ target, contentRect, borderBoxSize, }) {\n    var _a;\n    (_a = resizeHandlers.get(target)) === null || _a === void 0 ? void 0 : _a.forEach((handler) => {\n        handler({\n            target,\n            contentSize: contentRect,\n            get size() {\n                return getElementSize(target, borderBoxSize);\n            },\n        });\n    });\n}\nfunction notifyAll(entries) {\n    entries.forEach(notifyTarget);\n}\nfunction createResizeObserver() {\n    if (typeof ResizeObserver === \"undefined\")\n        return;\n    observer = new ResizeObserver(notifyAll);\n}\nfunction resizeElement(target, handler) {\n    if (!observer)\n        createResizeObserver();\n    const elements = resolveElements(target);\n    elements.forEach((element) => {\n        let elementHandlers = resizeHandlers.get(element);\n        if (!elementHandlers) {\n            elementHandlers = new Set();\n            resizeHandlers.set(element, elementHandlers);\n        }\n        elementHandlers.add(handler);\n        observer === null || observer === void 0 ? void 0 : observer.observe(element);\n    });\n    return () => {\n        elements.forEach((element) => {\n            const elementHandlers = resizeHandlers.get(element);\n            elementHandlers === null || elementHandlers === void 0 ? void 0 : elementHandlers.delete(handler);\n            if (!(elementHandlers === null || elementHandlers === void 0 ? void 0 : elementHandlers.size)) {\n                observer === null || observer === void 0 ? void 0 : observer.unobserve(element);\n            }\n        });\n    };\n}\n\nexport { resizeElement };\n","const windowCallbacks = new Set();\nlet windowResizeHandler;\nfunction createWindowResizeHandler() {\n    windowResizeHandler = () => {\n        const size = {\n            width: window.innerWidth,\n            height: window.innerHeight,\n        };\n        const info = {\n            target: window,\n            size,\n            contentSize: size,\n        };\n        windowCallbacks.forEach((callback) => callback(info));\n    };\n    window.addEventListener(\"resize\", windowResizeHandler);\n}\nfunction resizeWindow(callback) {\n    windowCallbacks.add(callback);\n    if (!windowResizeHandler)\n        createWindowResizeHandler();\n    return () => {\n        windowCallbacks.delete(callback);\n        if (!windowCallbacks.size && windowResizeHandler) {\n            windowResizeHandler = undefined;\n        }\n    };\n}\n\nexport { resizeWindow };\n","import { progress } from 'motion-utils';\nimport { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\n/**\n * A time in milliseconds, beyond which we consider the scroll velocity to be 0.\n */\nconst maxElapsed = 50;\nconst createAxisInfo = () => ({\n    current: 0,\n    offset: [],\n    progress: 0,\n    scrollLength: 0,\n    targetOffset: 0,\n    targetLength: 0,\n    containerLength: 0,\n    velocity: 0,\n});\nconst createScrollInfo = () => ({\n    time: 0,\n    x: createAxisInfo(),\n    y: createAxisInfo(),\n});\nconst keys = {\n    x: {\n        length: \"Width\",\n        position: \"Left\",\n    },\n    y: {\n        length: \"Height\",\n        position: \"Top\",\n    },\n};\nfunction updateAxisInfo(element, axisName, info, time) {\n    const axis = info[axisName];\n    const { length, position } = keys[axisName];\n    const prev = axis.current;\n    const prevTime = info.time;\n    axis.current = element[`scroll${position}`];\n    axis.scrollLength = element[`scroll${length}`] - element[`client${length}`];\n    axis.offset.length = 0;\n    axis.offset[0] = 0;\n    axis.offset[1] = axis.scrollLength;\n    axis.progress = progress(0, axis.scrollLength, axis.current);\n    const elapsed = time - prevTime;\n    axis.velocity =\n        elapsed > maxElapsed\n            ? 0\n            : velocityPerSecond(axis.current - prev, elapsed);\n}\nfunction updateScrollInfo(element, info, time) {\n    updateAxisInfo(element, \"x\", info, time);\n    updateAxisInfo(element, \"y\", info, time);\n    info.time = time;\n}\n\nexport { createScrollInfo, updateScrollInfo };\n","const namedEdges = {\n    start: 0,\n    center: 0.5,\n    end: 1,\n};\nfunction resolveEdge(edge, length, inset = 0) {\n    let delta = 0;\n    /**\n     * If we have this edge defined as a preset, replace the definition\n     * with the numerical value.\n     */\n    if (edge in namedEdges) {\n        edge = namedEdges[edge];\n    }\n    /**\n     * Handle unit values\n     */\n    if (typeof edge === \"string\") {\n        const asNumber = parseFloat(edge);\n        if (edge.endsWith(\"px\")) {\n            delta = asNumber;\n        }\n        else if (edge.endsWith(\"%\")) {\n            edge = asNumber / 100;\n        }\n        else if (edge.endsWith(\"vw\")) {\n            delta = (asNumber / 100) * document.documentElement.clientWidth;\n        }\n        else if (edge.endsWith(\"vh\")) {\n            delta = (asNumber / 100) * document.documentElement.clientHeight;\n        }\n        else {\n            edge = asNumber;\n        }\n    }\n    /**\n     * If the edge is defined as a number, handle as a progress value.\n     */\n    if (typeof edge === \"number\") {\n        delta = length * edge;\n    }\n    return inset + delta;\n}\n\nexport { namedEdges, resolveEdge };\n","import { resolveEdge, namedEdges } from './edge.mjs';\n\nconst defaultOffset = [0, 0];\nfunction resolveOffset(offset, containerLength, targetLength, targetInset) {\n    let offsetDefinition = Array.isArray(offset) ? offset : defaultOffset;\n    let targetPoint = 0;\n    let containerPoint = 0;\n    if (typeof offset === \"number\") {\n        /**\n         * If we're provided offset: [0, 0.5, 1] then each number x should become\n         * [x, x], so we default to the behaviour of mapping 0 => 0 of both target\n         * and container etc.\n         */\n        offsetDefinition = [offset, offset];\n    }\n    else if (typeof offset === \"string\") {\n        offset = offset.trim();\n        if (offset.includes(\" \")) {\n            offsetDefinition = offset.split(\" \");\n        }\n        else {\n            /**\n             * If we're provided a definition like \"100px\" then we want to apply\n             * that only to the top of the target point, leaving the container at 0.\n             * Whereas a named offset like \"end\" should be applied to both.\n             */\n            offsetDefinition = [offset, namedEdges[offset] ? offset : `0`];\n        }\n    }\n    targetPoint = resolveEdge(offsetDefinition[0], targetLength, targetInset);\n    containerPoint = resolveEdge(offsetDefinition[1], containerLength);\n    return targetPoint - containerPoint;\n}\n\nexport { resolveOffset };\n","const ScrollOffset = {\n    Enter: [\n        [0, 1],\n        [1, 1],\n    ],\n    Exit: [\n        [0, 0],\n        [1, 0],\n    ],\n    Any: [\n        [1, 0],\n        [0, 1],\n    ],\n    All: [\n        [0, 0],\n        [1, 1],\n    ],\n};\n\nexport { ScrollOffset };\n","import { clamp } from '../../../../utils/clamp.mjs';\nimport { interpolate } from '../../../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../../../utils/offsets/default.mjs';\nimport { calcInset } from './inset.mjs';\nimport { resolveOffset } from './offset.mjs';\nimport { ScrollOffset } from './presets.mjs';\n\nconst point = { x: 0, y: 0 };\nfunction getTargetSize(target) {\n    return \"getBBox\" in target && target.tagName !== \"svg\"\n        ? target.getBBox()\n        : { width: target.clientWidth, height: target.clientHeight };\n}\nfunction resolveOffsets(container, info, options) {\n    const { offset: offsetDefinition = ScrollOffset.All } = options;\n    const { target = container, axis = \"y\" } = options;\n    const lengthLabel = axis === \"y\" ? \"height\" : \"width\";\n    const inset = target !== container ? calcInset(target, container) : point;\n    /**\n     * Measure the target and container. If they're the same thing then we\n     * use the container's scrollWidth/Height as the target, from there\n     * all other calculations can remain the same.\n     */\n    const targetSize = target === container\n        ? { width: container.scrollWidth, height: container.scrollHeight }\n        : getTargetSize(target);\n    const containerSize = {\n        width: container.clientWidth,\n        height: container.clientHeight,\n    };\n    /**\n     * Reset the length of the resolved offset array rather than creating a new one.\n     * TODO: More reusable data structures for targetSize/containerSize would also be good.\n     */\n    info[axis].offset.length = 0;\n    /**\n     * Populate the offset array by resolving the user's offset definition into\n     * a list of pixel scroll offets.\n     */\n    let hasChanged = !info[axis].interpolate;\n    const numOffsets = offsetDefinition.length;\n    for (let i = 0; i < numOffsets; i++) {\n        const offset = resolveOffset(offsetDefinition[i], containerSize[lengthLabel], targetSize[lengthLabel], inset[axis]);\n        if (!hasChanged && offset !== info[axis].interpolatorOffsets[i]) {\n            hasChanged = true;\n        }\n        info[axis].offset[i] = offset;\n    }\n    /**\n     * If the pixel scroll offsets have changed, create a new interpolator function\n     * to map scroll value into a progress.\n     */\n    if (hasChanged) {\n        info[axis].interpolate = interpolate(info[axis].offset, defaultOffset(offsetDefinition), { clamp: false });\n        info[axis].interpolatorOffsets = [...info[axis].offset];\n    }\n    info[axis].progress = clamp(0, 1, info[axis].interpolate(info[axis].current));\n}\n\nexport { resolveOffsets };\n","function calcInset(element, container) {\n    const inset = { x: 0, y: 0 };\n    let current = element;\n    while (current && current !== container) {\n        if (current instanceof HTMLElement) {\n            inset.x += current.offsetLeft;\n            inset.y += current.offsetTop;\n            current = current.offsetParent;\n        }\n        else if (current.tagName === \"svg\") {\n            /**\n             * This isn't an ideal approach to measuring the offset of <svg /> tags.\n             * It would be preferable, given they behave like HTMLElements in most ways\n             * to use offsetLeft/Top. But these don't exist on <svg />. Likewise we\n             * can't use .getBBox() like most SVG elements as these provide the offset\n             * relative to the SVG itself, which for <svg /> is usually 0x0.\n             */\n            const svgBoundingBox = current.getBoundingClientRect();\n            current = current.parentElement;\n            const parentBoundingBox = current.getBoundingClientRect();\n            inset.x += svgBoundingBox.left - parentBoundingBox.left;\n            inset.y += svgBoundingBox.top - parentBoundingBox.top;\n        }\n        else if (current instanceof SVGGraphicsElement) {\n            const { x, y } = current.getBBox();\n            inset.x += x;\n            inset.y += y;\n            let svg = null;\n            let parent = current.parentNode;\n            while (!svg) {\n                if (parent.tagName === \"svg\") {\n                    svg = parent;\n                }\n                parent = current.parentNode;\n            }\n            current = svg;\n        }\n        else {\n            break;\n        }\n    }\n    return inset;\n}\n\nexport { calcInset };\n","import { warnOnce } from '../../../utils/warn-once.mjs';\nimport { updateScrollInfo } from './info.mjs';\nimport { resolveOffsets } from './offsets/index.mjs';\n\nfunction measure(container, target = container, info) {\n    /**\n     * Find inset of target within scrollable container\n     */\n    info.x.targetOffset = 0;\n    info.y.targetOffset = 0;\n    if (target !== container) {\n        let node = target;\n        while (node && node !== container) {\n            info.x.targetOffset += node.offsetLeft;\n            info.y.targetOffset += node.offsetTop;\n            node = node.offsetParent;\n        }\n    }\n    info.x.targetLength =\n        target === container ? target.scrollWidth : target.clientWidth;\n    info.y.targetLength =\n        target === container ? target.scrollHeight : target.clientHeight;\n    info.x.containerLength = container.clientWidth;\n    info.y.containerLength = container.clientHeight;\n    /**\n     * In development mode ensure scroll containers aren't position: static as this makes\n     * it difficult to measure their relative positions.\n     */\n    if (process.env.NODE_ENV !== \"production\") {\n        if (container && target && target !== container) {\n            warnOnce(getComputedStyle(container).position !== \"static\", \"Please ensure that the container has a non-static position, like 'relative', 'fixed', or 'absolute' to ensure scroll offset is calculated correctly.\");\n        }\n    }\n}\nfunction createOnScrollHandler(element, onScroll, info, options = {}) {\n    return {\n        measure: () => measure(element, options.target, info),\n        update: (time) => {\n            updateScrollInfo(element, info, time);\n            if (options.offset || options.target) {\n                resolveOffsets(element, info, options);\n            }\n        },\n        notify: () => onScroll(info),\n    };\n}\n\nexport { createOnScrollHandler };\n","import { resize } from '../resize/index.mjs';\nimport { createScrollInfo } from './info.mjs';\nimport { createOnScrollHandler } from './on-scroll-handler.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst scrollListeners = new WeakMap();\nconst resizeListeners = new WeakMap();\nconst onScrollHandlers = new WeakMap();\nconst getEventTarget = (element) => element === document.documentElement ? window : element;\nfunction scrollInfo(onScroll, { container = document.documentElement, ...options } = {}) {\n    let containerHandlers = onScrollHandlers.get(container);\n    /**\n     * Get the onScroll handlers for this container.\n     * If one isn't found, create a new one.\n     */\n    if (!containerHandlers) {\n        containerHandlers = new Set();\n        onScrollHandlers.set(container, containerHandlers);\n    }\n    /**\n     * Create a new onScroll handler for the provided callback.\n     */\n    const info = createScrollInfo();\n    const containerHandler = createOnScrollHandler(container, onScroll, info, options);\n    containerHandlers.add(containerHandler);\n    /**\n     * Check if there's a scroll event listener for this container.\n     * If not, create one.\n     */\n    if (!scrollListeners.has(container)) {\n        const measureAll = () => {\n            for (const handler of containerHandlers)\n                handler.measure();\n        };\n        const updateAll = () => {\n            for (const handler of containerHandlers) {\n                handler.update(frameData.timestamp);\n            }\n        };\n        const notifyAll = () => {\n            for (const handler of containerHandlers)\n                handler.notify();\n        };\n        const listener = () => {\n            frame.read(measureAll, false, true);\n            frame.read(updateAll, false, true);\n            frame.update(notifyAll, false, true);\n        };\n        scrollListeners.set(container, listener);\n        const target = getEventTarget(container);\n        window.addEventListener(\"resize\", listener, { passive: true });\n        if (container !== document.documentElement) {\n            resizeListeners.set(container, resize(container, listener));\n        }\n        target.addEventListener(\"scroll\", listener, { passive: true });\n    }\n    const listener = scrollListeners.get(container);\n    frame.read(listener, false, true);\n    return () => {\n        var _a;\n        cancelFrame(listener);\n        /**\n         * Check if we even have any handlers for this container.\n         */\n        const currentHandlers = onScrollHandlers.get(container);\n        if (!currentHandlers)\n            return;\n        currentHandlers.delete(containerHandler);\n        if (currentHandlers.size)\n            return;\n        /**\n         * If no more handlers, remove the scroll listener too.\n         */\n        const scrollListener = scrollListeners.get(container);\n        scrollListeners.delete(container);\n        if (scrollListener) {\n            getEventTarget(container).removeEventListener(\"scroll\", scrollListener);\n            (_a = resizeListeners.get(container)) === null || _a === void 0 ? void 0 : _a();\n            window.removeEventListener(\"resize\", scrollListener);\n        }\n    };\n}\n\nexport { scrollInfo };\n","import { resizeElement } from './handle-element.mjs';\nimport { resizeWindow } from './handle-window.mjs';\n\nfunction resize(a, b) {\n    return typeof a === \"function\" ? resizeWindow(a) : resizeElement(a, b);\n}\n\nexport { resize };\n","import { supportsScrollTimeline } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { observeTimeline } from './observe.mjs';\nimport { scrollInfo } from './track.mjs';\n\nfunction scrollTimelineFallback({ source, container, axis = \"y\", }) {\n    // Support legacy source argument. Deprecate later.\n    if (source)\n        container = source;\n    // ScrollTimeline records progress as a percentage CSSUnitValue\n    const currentTime = { value: 0 };\n    const cancel = scrollInfo((info) => {\n        currentTime.value = info[axis].progress * 100;\n    }, { container, axis });\n    return { currentTime, cancel };\n}\nconst timelineCache = new Map();\nfunction getTimeline({ source, container = document.documentElement, axis = \"y\", } = {}) {\n    // Support legacy source argument. Deprecate later.\n    if (source)\n        container = source;\n    if (!timelineCache.has(container)) {\n        timelineCache.set(container, {});\n    }\n    const elementCache = timelineCache.get(container);\n    if (!elementCache[axis]) {\n        elementCache[axis] = supportsScrollTimeline()\n            ? new ScrollTimeline({ source: container, axis })\n            : scrollTimelineFallback({ source: container, axis });\n    }\n    return elementCache[axis];\n}\n/**\n * If the onScroll function has two arguments, it's expecting\n * more specific information about the scroll from scrollInfo.\n */\nfunction isOnScrollWithInfo(onScroll) {\n    return onScroll.length === 2;\n}\n/**\n * Currently, we only support element tracking with `scrollInfo`, though in\n * the future we can also offer ViewTimeline support.\n */\nfunction needsElementTracking(options) {\n    return options && (options.target || options.offset);\n}\nfunction scrollFunction(onScroll, options) {\n    if (isOnScrollWithInfo(onScroll) || needsElementTracking(options)) {\n        return scrollInfo((info) => {\n            onScroll(info[options.axis].progress, info);\n        }, options);\n    }\n    else {\n        return observeTimeline(onScroll, getTimeline(options));\n    }\n}\nfunction scrollAnimation(animation, options) {\n    animation.flatten();\n    if (needsElementTracking(options)) {\n        animation.pause();\n        return scrollInfo((info) => {\n            animation.time = animation.duration * info[options.axis].progress;\n        }, options);\n    }\n    else {\n        const timeline = getTimeline(options);\n        if (animation.attachTimeline) {\n            return animation.attachTimeline(timeline, (valueAnimation) => {\n                valueAnimation.pause();\n                return observeTimeline((progress) => {\n                    valueAnimation.time = valueAnimation.duration * progress;\n                }, timeline);\n            });\n        }\n        else {\n            return noop;\n        }\n    }\n}\nfunction scroll(onScroll, { axis = \"y\", ...options } = {}) {\n    const optionsWithDefaults = { axis, ...options };\n    return typeof onScroll === \"function\"\n        ? scrollFunction(onScroll, optionsWithDefaults)\n        : scrollAnimation(onScroll, optionsWithDefaults);\n}\n\nexport { scroll };\n","import { motionValue } from './index.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\nimport { useEffect } from 'react';\nimport { warning } from 'motion-utils';\nimport { scroll } from '../render/dom/scroll/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\n\nfunction refWarning(name, ref) {\n    warning(Boolean(!ref || ref.current), `You have defined a ${name} options but the provided ref is not yet hydrated, probably because it's defined higher up the tree. Try calling useScroll() in the same component as the ref, or setting its \\`layoutEffect: false\\` option.`);\n}\nconst createScrollMotionValues = () => ({\n    scrollX: motionValue(0),\n    scrollY: motionValue(0),\n    scrollXProgress: motionValue(0),\n    scrollYProgress: motionValue(0),\n});\nfunction useScroll({ container, target, layoutEffect = true, ...options } = {}) {\n    const values = useConstant(createScrollMotionValues);\n    const useLifecycleEffect = layoutEffect\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useLifecycleEffect(() => {\n        refWarning(\"target\", target);\n        refWarning(\"container\", container);\n        return scroll((_progress, { x, y }) => {\n            values.scrollX.set(x.current);\n            values.scrollXProgress.set(x.progress);\n            values.scrollY.set(y.current);\n            values.scrollYProgress.set(y.progress);\n        }, {\n            ...options,\n            container: (container === null || container === void 0 ? void 0 : container.current) || undefined,\n            target: (target === null || target === void 0 ? void 0 : target.current) || undefined,\n        });\n    }, [container, target, JSON.stringify(options.offset)]);\n    return values;\n}\n\nexport { useScroll };\n","import { interpolate } from './interpolate.mjs';\n\nconst isCustomValueType = (v) => {\n    return v && typeof v === \"object\" && v.mix;\n};\nconst getMixer = (v) => (isCustomValueType(v) ? v.mix : undefined);\nfunction transform(...args) {\n    const useImmediate = !Array.isArray(args[0]);\n    const argOffset = useImmediate ? 0 : -1;\n    const inputValue = args[0 + argOffset];\n    const inputRange = args[1 + argOffset];\n    const outputRange = args[2 + argOffset];\n    const options = args[3 + argOffset];\n    const interpolator = interpolate(inputRange, outputRange, {\n        mixer: getMixer(outputRange[0]),\n        ...options,\n    });\n    return useImmediate ? interpolator(inputValue) : interpolator;\n}\n\nexport { transform };\n","import { useMotionValue } from './use-motion-value.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\nimport { cancelFrame, frame } from '../frameloop/frame.mjs';\n\nfunction useCombineMotionValues(values, combineValues) {\n    /**\n     * Initialise the returned motion value. This remains the same between renders.\n     */\n    const value = useMotionValue(combineValues());\n    /**\n     * Create a function that will update the template motion value with the latest values.\n     * This is pre-bound so whenever a motion value updates it can schedule its\n     * execution in Framesync. If it's already been scheduled it won't be fired twice\n     * in a single frame.\n     */\n    const updateValue = () => value.set(combineValues());\n    /**\n     * Synchronously update the motion value with the latest values during the render.\n     * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n     */\n    updateValue();\n    /**\n     * Subscribe to all motion values found within the template. Whenever any of them change,\n     * schedule an update.\n     */\n    useIsomorphicLayoutEffect(() => {\n        const scheduleUpdate = () => frame.preRender(updateValue, false, true);\n        const subscriptions = values.map((v) => v.on(\"change\", scheduleUpdate));\n        return () => {\n            subscriptions.forEach((unsubscribe) => unsubscribe());\n            cancelFrame(updateValue);\n        };\n    });\n    return value;\n}\n\nexport { useCombineMotionValues };\n","import { useContext, useState, useEffect } from 'react';\nimport { motionValue } from './index.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    const value = useConstant(() => motionValue(initial));\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    const { isStatic } = useContext(MotionConfigContext);\n    if (isStatic) {\n        const [, setLatest] = useState(initial);\n        useEffect(() => value.on(\"change\", setLatest), []);\n    }\n    return value;\n}\n\nexport { useMotionValue };\n","import { transform } from '../utils/transform.mjs';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\nimport { useComputed } from './use-computed.mjs';\n\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\n    if (typeof input === \"function\") {\n        return useComputed(input);\n    }\n    const transformer = typeof inputRangeOrTransformer === \"function\"\n        ? inputRangeOrTransformer\n        : transform(inputRangeOrTransformer, outputRange, options);\n    return Array.isArray(input)\n        ? useListTransform(input, transformer)\n        : useListTransform([input], ([latest]) => transformer(latest));\n}\nfunction useListTransform(values, transformer) {\n    const latest = useConstant(() => []);\n    return useCombineMotionValues(values, () => {\n        latest.length = 0;\n        const numValues = values.length;\n        for (let i = 0; i < numValues; i++) {\n            latest[i] = values[i].get();\n        }\n        return transformer(latest);\n    });\n}\n\nexport { useTransform };\n","import { collectMotionValues } from './index.mjs';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\n\nfunction useComputed(compute) {\n    /**\n     * Open session of collectMotionValues. Any MotionValue that calls get()\n     * will be saved into this array.\n     */\n    collectMotionValues.current = [];\n    compute();\n    const value = useCombineMotionValues(collectMotionValues.current, compute);\n    /**\n     * Synchronously close session of collectMotionValues.\n     */\n    collectMotionValues.current = undefined;\n    return value;\n}\n\nexport { useComputed };\n","import {useScroll, useTransform} from \"framer-motion\";\n\nexport default function useScrollAnimations() {\n  const { scrollYProgress } = useScroll();\n  return {\n    text1Opacity : useTransform(scrollYProgress, [0, 0.1, 0.15], [1, 1, 0]),\n    text2Opacity : useTransform(scrollYProgress, [0.15, 0.2, 0.25, 0.3], [0, 1, 1, 0]),\n    text3Opacity : useTransform(scrollYProgress, [0.3, 0.35], [0, 1]),\n    bgOpacity : useTransform(scrollYProgress, [0, 0.9, 1], [1, 1, 0]),\n  }\n}","// @ts-ignore\nimport * as React from 'react';\nimport {motion} from \"framer-motion\"\nimport { MdKeyboardDoubleArrowDown } from \"react-icons/md\";\nimport { useEffect, useRef } from 'react';\nimport { isMobile } from \"../shared/isMobile.ts\"\nimport useScrollAnimations from \"../feature/animation/opacity.ts\";\n\n// 데이터 다뤄본 경험 이런게 있으면 도움이 많이 되었다.\n// 백엔드면 일 경력이 있냐 이런거\n// 프로젝트 위주도 좋지만 학습 내용 적어보자.\n// 외주 담당하게 된다면 관련 증빙을 받을 수 있냐\n// 싸피때 구직 동시에 진행할 것. (하나하나 하기보단 투트랙 쓰리트랙)\n// 인터렉티브 외에도 인프라, DB .. 이런것 강조할 수 있냐.\n// 코드 작성 + 포장 잘 할 수 있냐.\n// 색상 깔끔하게 가로형 pdf화 된 포트폴리오도 필요하다. (대기업의 경우 접근 제한 있는 경우 있음)\n// 멘트 => 수정해야함. 왜 집중해? 목표가 보이는게 좋을 것 같다(풀스택 지향). 개발자가 봤을 때 뭐가 좋을 것 같냐.\n// Skill 클릭하면 뭐가 나오게하면 좋을 것 같다.\n// Education => 싸피 공홈에 들어가면 잘 나와있음.\n// 정보처리기사 (base) 1월 4월 시험봐서 따보자.\n\nexport default function IntroPage() {\n  const vhRef = useRef(0);\n\n  // 모바일에서 실제 viewport height 계산\n  useEffect(() => {\n    const setVh = () => {\n      if (isMobile) {\n        vhRef.current = window.innerHeight * 0.01;\n        document.documentElement.style.setProperty('--vh', `${vhRef.current}px`);\n      }\n    };\n\n    setVh();\n\n    window.addEventListener('resize', setVh);\n    return () => window.removeEventListener('resize', setVh);\n  }, []);\n\n  const { text1Opacity, text2Opacity, text3Opacity, bgOpacity } = useScrollAnimations()\n\n  const scrollTextAnimation = {\n    y: [0, -20, 0],\n    transition: {\n      duration: 2,\n      repeat: Infinity,\n      ease: \"easeInOut\",\n    }\n  }\n\n  return (\n    <div\n      className=\"h-[400vh]\"\n      id=\"Intro\"\n    >\n      <div\n        className=\"sticky top-0 w-full\"\n        style={{ height: isMobile ? 'calc(var(--vh, 1vh) * 100)' : '100vh' }}\n      >\n        {/*배경*/}\n        <motion.div\n          style={{ opacity: bgOpacity }}\n          className=\"absolute inset-0 bg-gradient-to-br from-purple-300 via-purple-200 to-pink-200\"\n        />\n\n        <motion.div className=\"relative w-full h-full flex flex-col justify-center items-center px-4\">\n          <div className=\"text-xl sm:text-3xl text-purple-900 mb-8 text-center\">\n            프론트엔드 개발자 <span className=\"font-bold\">한지웅</span>입니다.\n          </div>\n\n          <div className=\"relative h-32 w-full\">\n            <motion.div\n              style={{opacity: text1Opacity}}\n              className=\"absolute left-1/2 -translate-x-1/2 sm:text-2xl text-purple-900 flex flex-col w-full items-center text-center\"\n            >\n              <div className=\"my-1\">\n                \"팀의 성공이 곧 나의 성공\"이라는 가치관으로\n              </div>\n              <div>\n                <span className=\"font-bold\">팀과 함께 성장</span>하는 것을 추구하고\n              </div>\n            </motion.div>\n\n            <motion.div\n              style={{opacity: text2Opacity}}\n              className=\"absolute left-1/2 -translate-x-1/2 sm:text-2xl text-purple-900 flex flex-col w-full items-center text-center\"\n            >\n              <div className=\"my-1\">\n                다양한 기술들을 학습하며\n              </div>\n              <div className=\"mb-1\">\n                <span>전반적인 개발 프로세스를 이해하는</span>\n              </div>\n              <div>\n              <span className=\"font-bold\">풀스택 개발</span>을 추구합니다.\n              </div>\n            </motion.div>\n\n            <motion.div\n              style={{opacity: text3Opacity}}\n              className=\"absolute left-1/2 -translate-x-1/2 sm:text-2xl text-purple-900 flex flex-col w-full items-center text-center\"\n            >\n              <div className=\"my-1\">\n                아래로 스크롤하여\n              </div>\n              <div>\n                <span className=\"font-bold\">저에 대해 더 알아보세요</span>\n              </div>\n            </motion.div>\n          </div>\n\n          <motion.div\n            animate={scrollTextAnimation}\n            className=\"absolute bottom-10 text-[50px] text-purple-900\"\n          >\n            <MdKeyboardDoubleArrowDown/>\n          </motion.div>\n        </motion.div>\n      </div>\n    </div>\n  );\n}\n\n"],"names":["isMobile","test","navigator","userAgent","observeTimeline","update","timeline","prevProgress","onFrame","currentTime","progress","value","resizeHandlers","WeakMap","observer","notifyTarget","target","contentRect","borderBoxSize","_a","get","forEach","handler","contentSize","size","inlineSize","blockSize","width","height","SVGElement","getBBox","offsetWidth","offsetHeight","getElementSize","notifyAll","entries","resizeElement","ResizeObserver","elements","element","elementHandlers","Set","set","add","observe","delete","unobserve","windowCallbacks","windowResizeHandler","resizeWindow","callback","window","innerWidth","innerHeight","info","addEventListener","undefined","maxElapsed","createScrollInfo","time","x","current","offset","scrollLength","targetOffset","targetLength","containerLength","velocity","y","keys","length","position","updateAxisInfo","axisName","axis","prev","prevTime","elapsed","namedEdges","start","center","end","resolveEdge","edge","inset","delta","asNumber","parseFloat","endsWith","document","documentElement","clientWidth","clientHeight","defaultOffset","resolveOffset","targetInset","offsetDefinition","Array","isArray","targetPoint","containerPoint","trim","includes","split","ScrollOffset","Enter","Exit","Any","All","point","resolveOffsets","container","options","lengthLabel","HTMLElement","offsetLeft","offsetTop","offsetParent","tagName","svgBoundingBox","getBoundingClientRect","parentElement","parentBoundingBox","left","top","SVGGraphicsElement","svg","parent","parentNode","calcInset","targetSize","scrollWidth","scrollHeight","getTargetSize","containerSize","hasChanged","interpolate","numOffsets","i","interpolatorOffsets","clamp","createOnScrollHandler","onScroll","measure","node","updateScrollInfo","notify","scrollListeners","resizeListeners","onScrollHandlers","getEventTarget","scrollInfo","containerHandlers","containerHandler","has","measureAll","updateAll","timestamp","listener","read","passive","b","a","currentHandlers","scrollListener","removeEventListener","timelineCache","Map","getTimeline","source","elementCache","ScrollTimeline","cancel","scrollTimelineFallback","needsElementTracking","optionsWithDefaults","isOnScrollWithInfo","scrollFunction","animation","flatten","pause","duration","attachTimeline","valueAnimation","noop","scrollAnimation","refWarning","name","ref","Boolean","createScrollMotionValues","scrollX","scrollY","scrollXProgress","scrollYProgress","getMixer","v","mix","isCustomValueType","useCombineMotionValues","values","combineValues","initial","isStatic","useContext","MotionConfigContext","setLatest","useState","useEffect","on","useMotionValue","updateValue","scheduleUpdate","preRender","subscriptions","map","unsubscribe","useTransform","input","inputRangeOrTransformer","outputRange","compute","useComputed","transformer","args","useImmediate","argOffset","inputValue","inputRange","interpolator","mixer","transform","useListTransform","latest","numValues","useScrollAnimations","layoutEffect","_progress","JSON","stringify","useScroll","text1Opacity","text2Opacity","text3Opacity","bgOpacity","IntroPage","vhRef","useRef","setVh","style","setProperty","scrollTextAnimation","transition","repeat","Infinity","ease","React","className","id","motion","div","opacity","animate","MdKeyboardDoubleArrowDown"],"sourceRoot":""}