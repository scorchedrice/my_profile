{"version":3,"file":"b3b130ab680e6cc12dbb4eb3cf38081dbe3f2a07-c4ddaf5b3ea34798ad0a.js","mappings":"iOAGA,MAAQA,SAAUC,EAAOC,OAAQC,EAAaC,MAAOC,EAAWC,MAAOC,IAAgB,OAAqD,oBAA1BC,sBAAwCA,sBAAwB,KAAM,E,6ECHxL,MAAMC,EAAyBC,GAAWC,GAAuB,iBAARA,GAAoBA,EAAIC,WAAWF,GACtFG,EACQJ,EAAsB,MAC9BK,EACQL,EAAsB,UAC9BM,EAAsBC,KACAF,EAAsBE,IAIvCC,EAAuBC,KAAKF,EAAMG,MAAM,MAAM,GAAGC,QAEtDH,EAAyB,qF,sDCZ/B,MAAMI,EAAa,6B,uDCOnB,MAAMC,EAAmB,CAACC,EAAGC,IAAOC,GAAMD,EAAED,EAAEE,IACxCC,EAAO,IAAIC,IAAiBA,EAAaC,OAAON,E,uDCPtD,MAAMO,EAAQC,GAAQA,C,mGCItB,MAAMC,EAAO,CACTb,MAAoB,OAAc,MAAO,OACzCc,OAAqB,OAAW,MAAO,aAAc,aACrDC,UAAW,EAAGC,MAAKC,aAAYC,YAAWC,MAAOC,EAAU,KAC/C,QACJC,KAAKC,MAAMN,GACX,KACA,KAAQD,WAAU,OAASE,IAC3B,KACA,KAAQF,WAAU,OAASG,IAC3B,MACA,OAAS,KAAMH,UAAUK,IACzB,I,uBCjBZ,SAASG,EAAcC,EAAKC,IACG,IAAvBD,EAAIE,QAAQD,IACZD,EAAIG,KAAKF,EACjB,CACA,SAASG,EAAWJ,EAAKC,GACrB,MAAMI,EAAQL,EAAIE,QAAQD,GACtBI,GAAS,GACTL,EAAIM,OAAOD,EAAO,EAC1B,C,+GCRA,MAAME,EAAQ,CAACC,EAAKC,EAAK1B,IACjBA,EAAI0B,EACGA,EACP1B,EAAIyB,EACGA,EACJzB,C,qECHX,MAAM2B,EACF,WAAAC,GACIC,KAAKC,cAAgB,EACzB,CACA,GAAAC,CAAIC,GAEA,OADA,QAAcH,KAAKC,cAAeE,GAC3B,KAAM,QAAWH,KAAKC,cAAeE,EAChD,CACA,MAAAC,CAAOnC,EAAGC,EAAGmC,GACT,MAAMC,EAAmBN,KAAKC,cAAcM,OAC5C,GAAKD,EAEL,GAAyB,IAArBA,EAIAN,KAAKC,cAAc,GAAGhC,EAAGC,EAAGmC,QAG5B,IAAK,IAAIG,EAAI,EAAGA,EAAIF,EAAkBE,IAAK,CAKvC,MAAML,EAAUH,KAAKC,cAAcO,GACnCL,GAAWA,EAAQlC,EAAGC,EAAGmC,EAC7B,CAER,CACA,OAAAI,GACI,OAAOT,KAAKC,cAAcM,MAC9B,CACA,KAAAG,GACIV,KAAKC,cAAcM,OAAS,CAChC,E,sHClCJ,MAAMI,EAAS,CACX/C,KAAOO,GAAmB,iBAANA,EACpBO,MAAOkC,WACPjC,UAAYR,GAAMA,GAEhBY,EAAQ,IACP4B,EACHhC,UAAYR,IAAM,OAAM,EAAG,EAAGA,IAE5B0C,EAAQ,IACPF,EACHG,QAAS,E,2FCbb,MAAMC,EAAmB,sHCQnBC,EAAgB,CAACC,EAAMC,IAAc/C,GAChCgD,QAAsB,iBAANhD,GACnB4C,EAAiBnD,KAAKO,IACtBA,EAAEb,WAAW2D,IACZC,ICZT,SAAmB/C,GACf,OAAY,MAALA,CACX,CDWaiD,CAAUjD,IACXkD,OAAOC,UAAUC,eAAeC,KAAKrD,EAAG+C,IAE9CO,EAAa,CAACC,EAAOC,EAAOC,IAAWzD,IACzC,GAAiB,iBAANA,EACP,OAAOA,EACX,MAAOF,EAAGC,EAAGmC,EAAGtB,GAASZ,EAAE0D,MAAM,KACjC,MAAO,CACH,CAACH,GAAQd,WAAW3C,GACpB,CAAC0D,GAAQf,WAAW1C,GACpB,CAAC0D,GAAQhB,WAAWP,GACpBtB,WAAiB+C,IAAV/C,EAAsB6B,WAAW7B,GAAS,EACpD,C,+EEvBL,SAASgD,EAAc3C,GACnB,MAAM4C,EAAS,CAAC,GAEhB,OCFJ,SAAoBA,EAAQC,GACxB,MAAMrC,EAAMoC,EAAOA,EAAOzB,OAAS,GACnC,IAAK,IAAIC,EAAI,EAAGA,GAAKyB,EAAWzB,IAAK,CACjC,MAAM0B,GAAiB,EAAAC,EAAA,GAAS,EAAGF,EAAWzB,GAC9CwB,EAAOzC,MAAK,OAAUK,EAAK,EAAGsC,GAClC,CACJ,CDLIE,CAAWJ,EAAQ5C,EAAImB,OAAS,GACzByB,CACX,C,mGEDA,MACMK,EAAU,IACT,KACH1D,UAAYR,GAAMc,KAAKC,MAHN,CAACf,IAAM,OAAM,EAAG,IAAKA,GAGTmE,CAAanE,KAExCoE,EAAO,CACT3E,MAAoB,OAAc,MAAO,OACzCc,OAAqB,OAAW,MAAO,QAAS,QAChDC,UAAW,EAAG6D,MAAKC,QAAOC,OAAM3D,MAAOC,EAAU,KAAQ,QACrDqD,EAAQ1D,UAAU6D,GAClB,KACAH,EAAQ1D,UAAU8D,GAClB,KACAJ,EAAQ1D,UAAU+D,GAClB,MACA,OAAS,KAAM/D,UAAUK,IACzB,I,uBCpBR,SAAS2D,EAAKC,GACV,IAAIC,EACJ,MAAO,UACYf,IAAXe,IACAA,EAASD,KACNC,EAEf,C,2HCRA,MAAMC,EAAa,qH,uBCanB,MAAMC,EAAe,SACfC,EAAc,QACdC,EAAY,MACZC,EAAqB,OACrBC,EAAc,MAEdC,EAAe,kOACrB,SAASC,EAAoB3F,GACzB,MAAM4F,EAAgB5F,EAAM6F,WACtBC,EAAS,GACTC,EAAU,CACZC,MAAO,GACP/C,OAAQ,GACRgD,IAAK,IAEHC,EAAQ,GACd,IAAIpD,EAAI,EACR,MAmBM3C,EAnBYyF,EAAcO,QAAQT,GAAeU,IAC/CJ,EAAA,EAAM9F,KAAKkG,IACXL,EAAQC,MAAMnE,KAAKiB,GACnBoD,EAAMrE,KAAKyD,GACXQ,EAAOjE,KAAKmE,EAAA,EAAMhF,MAAMoF,KAEnBA,EAAYxG,WAAW4F,IAC5BO,EAAQE,IAAIpE,KAAKiB,GACjBoD,EAAMrE,KAAK0D,GACXO,EAAOjE,KAAKuE,KAGZL,EAAQ9C,OAAOpB,KAAKiB,GACpBoD,EAAMrE,KAAKwD,GACXS,EAAOjE,KAAKqB,WAAWkD,OAEzBtD,EACK2C,KAEatF,MAAMsF,GAC9B,MAAO,CAAEK,SAAQ3F,QAAO4F,UAASG,QACrC,CACA,SAASG,EAAkB5F,GACvB,OAAOkF,EAAoBlF,GAAGqF,MAClC,CACA,SAASQ,EAAkBC,GACvB,MAAM,MAAEpG,EAAK,MAAE+F,GAAUP,EAAoBY,GACvCC,EAAcrG,EAAM0C,OAC1B,OAAQpC,IACJ,IAAIgG,EAAS,GACb,IAAK,IAAI3D,EAAI,EAAGA,EAAI0D,EAAa1D,IAE7B,GADA2D,GAAUtG,EAAM2C,QACHsB,IAAT3D,EAAEqC,GAAkB,CACpB,MAAMS,EAAO2C,EAAMpD,GAEf2D,GADAlD,IAAS8B,GACC,EAAAqB,EAAA,GAASjG,EAAEqC,IAEhBS,IAAS+B,EACJU,EAAA,EAAM/E,UAAUR,EAAEqC,IAGlBrC,EAAEqC,EAEpB,CAEJ,OAAO2D,CAAM,CAErB,CACA,MAAME,EAAwBlG,GAAmB,iBAANA,EAAiB,EAAIA,EAMhE,MAAMmG,EAAU,CACZ1G,KAhFJ,SAAcO,GACV,IAAIoG,EAAIC,EACR,OAAQC,MAAMtG,IACG,iBAANA,KAC0B,QAA9BoG,EAAKpG,EAAE0D,MAAM,YAAgC,IAAP0C,OAAgB,EAASA,EAAGhE,SAAW,KAC3C,QAA9BiE,EAAKrG,EAAE0D,MAAMiB,UAAgC,IAAP0B,OAAgB,EAASA,EAAGjE,SAAW,GAChF,CACZ,EA0EI7B,MAAOqF,EACPC,oBACAU,kBATJ,SAA2BvG,GACvB,MAAMwG,EAASZ,EAAkB5F,GAEjC,OADoB6F,EAAkB7F,EAC/ByG,CAAYD,EAAOE,IAAIR,GAClC,E,8EChFA,IAAIS,EACJ,SAASC,IACLD,OAAMhD,CACV,CASA,MAAMkD,EAAO,CACTF,IAAK,UACWhD,IAARgD,GACAE,EAAKC,IAAI,KAAUC,cAAgB,IAAmBC,gBAChD,KAAUC,UACVC,YAAYP,OAEfA,GAEXG,IAAMK,IACFR,EAAMQ,EACNC,eAAeR,EAAU,E,uDC1BjC,MAAMS,EAAqB,CACvBC,gBAAgB,EAChBN,iBAAiB,E,2HCQrB,MAIMO,EAAsB,CACxBC,aAAS7D,GAOb,MAAM8D,EASF,WAAA7F,CAAY8F,EAAMC,EAAU,CAAC,GAKzB9F,KAAK+F,QAAU,UAQf/F,KAAKgG,iBAAmB,KAIxBhG,KAAKiG,OAAS,CAAC,EACfjG,KAAKkG,gBAAkB,CAAC/H,EAAGgI,GAAS,KAChC,MAAMC,EAAc,IAAKtB,MAMrB9E,KAAKqG,YAAcD,GACnBpG,KAAKsG,oBAETtG,KAAKuG,KAAOvG,KAAK2F,QACjB3F,KAAKwG,WAAWrI,GAEZ6B,KAAK2F,UAAY3F,KAAKuG,MAAQvG,KAAKiG,OAAOQ,QAC1CzG,KAAKiG,OAAOQ,OAAOrG,OAAOJ,KAAK2F,SAG/BQ,GAAUnG,KAAKiG,OAAOS,eACtB1G,KAAKiG,OAAOS,cAActG,OAAOJ,KAAK2F,QAC1C,EAEJ3F,KAAK2G,aAAc,EACnB3G,KAAKwG,WAAWX,GAChB7F,KAAK4G,MAAQd,EAAQc,KACzB,CACA,UAAAJ,CAAWb,GA/DC,IAACjI,EAgETsC,KAAK2F,QAAUA,EACf3F,KAAKqG,UAAY,IAAKvB,MACQ,OAA1B9E,KAAKgG,uBAAyClE,IAAZ6D,IAClC3F,KAAKgG,kBAnEAtI,EAmE2BsC,KAAK2F,SAlErClB,MAAM7D,WAAWlD,KAoEzB,CACA,iBAAA4I,CAAkBO,EAAiB7G,KAAK2F,SACpC3F,KAAK6G,eAAiBA,EACtB7G,KAAK8G,cAAgB9G,KAAKqG,SAC9B,CAyCA,QAAAU,CAASC,GAIL,OAAOhH,KAAKiH,GAAG,SAAUD,EAC7B,CACA,EAAAC,CAAGC,EAAWtE,GACL5C,KAAKiG,OAAOiB,KACblH,KAAKiG,OAAOiB,GAAa,IAAI,KAEjC,MAAMC,EAAcnH,KAAKiG,OAAOiB,GAAWhH,IAAI0C,GAC/C,MAAkB,WAAdsE,EACO,KACHC,IAKA,KAAMC,MAAK,KACFpH,KAAKiG,OAAOQ,OAAOhG,WACpBT,KAAKqH,MACT,GACF,EAGHF,CACX,CACA,cAAAG,GACI,IAAK,MAAMC,KAAiBvH,KAAKiG,OAC7BjG,KAAKiG,OAAOsB,GAAe7G,OAEnC,CAMA,MAAA8G,CAAOC,EAAeC,GAClB1H,KAAKyH,cAAgBA,EACrBzH,KAAK0H,kBAAoBA,CAC7B,CAgBA,GAAAzC,CAAI9G,EAAGgI,GAAS,GACPA,GAAWnG,KAAKyH,cAIjBzH,KAAKyH,cAActJ,EAAG6B,KAAKkG,iBAH3BlG,KAAKkG,gBAAgB/H,EAAGgI,EAKhC,CACA,eAAAwB,CAAgBpB,EAAMZ,EAASiC,GAC3B5H,KAAKiF,IAAIU,GACT3F,KAAKuG,UAAOzE,EACZ9B,KAAK6G,eAAiBN,EACtBvG,KAAK8G,cAAgB9G,KAAKqG,UAAYuB,CAC1C,CAKA,IAAAC,CAAK1J,EAAG2J,GAAe,GACnB9H,KAAKkG,gBAAgB/H,GACrB6B,KAAKuG,KAAOpI,EACZ6B,KAAK8G,cAAgB9G,KAAK6G,oBAAiB/E,EAC3CgG,GAAgB9H,KAAKqH,OACjBrH,KAAK0H,mBACL1H,KAAK0H,mBACb,CAQA,GAAAK,GAII,OAHIrC,EAAoBC,SACpBD,EAAoBC,QAAQpG,KAAKS,MAE9BA,KAAK2F,OAChB,CAIA,WAAAqC,GACI,OAAOhI,KAAKuG,IAChB,CAQA,WAAA0B,GACI,MAAM7B,EAAc,IAAKtB,MACzB,IAAK9E,KAAKgG,uBACkBlE,IAAxB9B,KAAK6G,gBACLT,EAAcpG,KAAKqG,UAnOJ,GAoOf,OAAO,EAEX,MAAMuB,EAAQ3I,KAAKW,IAAII,KAAKqG,UAAYrG,KAAK8G,cAtO1B,IAwOnB,OAAO,OAAkBlG,WAAWZ,KAAK2F,SACrC/E,WAAWZ,KAAK6G,gBAAiBe,EACzC,CAaA,KAAAM,CAAMC,GAEF,OADAnI,KAAKqH,OACE,IAAIe,SAASC,IAChBrI,KAAK2G,aAAc,EACnB3G,KAAKsI,UAAYH,EAAeE,GAC5BrI,KAAKiG,OAAOsC,gBACZvI,KAAKiG,OAAOsC,eAAenI,QAC/B,IACDoI,MAAK,KACAxI,KAAKiG,OAAOwC,mBACZzI,KAAKiG,OAAOwC,kBAAkBrI,SAElCJ,KAAK0I,gBAAgB,GAE7B,CAMA,IAAArB,GACQrH,KAAKsI,YACLtI,KAAKsI,UAAUjB,OACXrH,KAAKiG,OAAO0C,iBACZ3I,KAAKiG,OAAO0C,gBAAgBvI,UAGpCJ,KAAK0I,gBACT,CAMA,WAAAE,GACI,QAAS5I,KAAKsI,SAClB,CACA,cAAAI,UACW1I,KAAKsI,SAChB,CAUA,OAAAO,GACI7I,KAAKsH,iBACLtH,KAAKqH,OACDrH,KAAK0H,mBACL1H,KAAK0H,mBAEb,EAEJ,SAASoB,EAAYjD,EAAMC,GACvB,OAAO,IAAIF,EAAYC,EAAMC,EACjC,C,scC1TA,MAAMiD,GAAyB,EAAApG,EAAA,IAAK,SAAgCb,IAA1BkH,OAAOC,iBCAjD,MAAM,EACF,WAAAlJ,CAAYmJ,GAERlJ,KAAKqH,KAAO,IAAMrH,KAAKmJ,OAAO,QAC9BnJ,KAAKkJ,WAAaA,EAAWE,OAAOjI,QACxC,CACA,YAAIkI,GAEA,OAAOjB,QAAQkB,IAAItJ,KAAKkJ,WAAWrE,KAAKyD,GAAc,aAAcA,EAAYA,EAAUe,SAAWf,IACzG,CAIA,MAAAiB,CAAOC,GACH,OAAOxJ,KAAKkJ,WAAW,GAAGM,EAC9B,CACA,MAAAC,CAAOD,EAAUE,GACb,IAAK,IAAIlJ,EAAI,EAAGA,EAAIR,KAAKkJ,WAAW3I,OAAQC,IACxCR,KAAKkJ,WAAW1I,GAAGgJ,GAAYE,CAEvC,CACA,cAAAC,CAAeC,EAAUC,GACrB,MAAM5J,EAAgBD,KAAKkJ,WAAWrE,KAAKyD,GACnCS,KAA4BT,EAAUqB,eAC/BrB,EAAUqB,eAAeC,GAEP,mBAAbC,EACLA,EAASvB,QADf,IAIT,MAAO,KACHrI,EAAc6J,SAAQ,CAAClN,EAAQ4D,KAC3B5D,GAAUA,IACVoD,KAAKkJ,WAAW1I,GAAG6G,MAAM,GAC3B,CAEV,CACA,QAAIrC,GACA,OAAOhF,KAAKuJ,OAAO,OACvB,CACA,QAAIvE,CAAKA,GACLhF,KAAKyJ,OAAO,OAAQzE,EACxB,CACA,SAAI+E,GACA,OAAO/J,KAAKuJ,OAAO,QACvB,CACA,SAAIQ,CAAMA,GACN/J,KAAKyJ,OAAO,QAASM,EACzB,CACA,aAAIC,GACA,OAAOhK,KAAKuJ,OAAO,YACvB,CACA,YAAIU,GACA,IAAIpK,EAAM,EACV,IAAK,IAAIW,EAAI,EAAGA,EAAIR,KAAKkJ,WAAW3I,OAAQC,IACxCX,EAAMZ,KAAKY,IAAIA,EAAKG,KAAKkJ,WAAW1I,GAAGyJ,UAE3C,OAAOpK,CACX,CACA,MAAAsJ,CAAOe,GACHlK,KAAKkJ,WAAWY,SAASK,GAAaA,EAASD,MACnD,CACA,OAAAE,GACIpK,KAAKmJ,OAAO,UAChB,CACA,IAAAkB,GACIrK,KAAKmJ,OAAO,OAChB,CACA,KAAAmB,GACItK,KAAKmJ,OAAO,QAChB,CACA,MAAAvM,GACIoD,KAAKmJ,OAAO,SAChB,CACA,QAAAoB,GACIvK,KAAKmJ,OAAO,WAChB,ECxEJ,MAAMqB,UAA8B,EAChC,IAAAhC,CAAKiC,EAAWC,GACZ,OAAOtC,QAAQkB,IAAItJ,KAAKkJ,YAAYV,KAAKiC,GAAWE,MAAMD,EAC9D,ECTJ,SAAS,EAAmBE,EAAYvN,GACpC,OAAOuN,EACDA,EAAWvN,IACTuN,EAAoB,SACpBA,OACF9I,CACV,CCFA,MAAM+I,EAAuB,IAC7B,SAASC,EAAsBC,GAC3B,IAAId,EAAW,EAEf,IAAInN,EAAQiO,EAAUC,KAAKf,GAC3B,MAAQnN,EAAMmO,MAAQhB,EAAWY,GAC7BZ,GAHa,GAIbnN,EAAQiO,EAAUC,KAAKf,GAE3B,OAAOA,GAAYY,EAAuBK,IAAWjB,CACzD,CCdA,SAASkB,EAAYlK,GACjB,MAAuB,mBAATA,CAClB,CCFA,SAAS0I,EAAerB,EAAWsB,GAC/BtB,EAAUsB,SAAWA,EACrBtB,EAAU8C,SAAW,IACzB,CCHA,MAAMC,EAAsBC,GAAWC,MAAMC,QAAQF,IAAgC,iBAAdA,EAAO,GCIxEG,EAAgB,CAClBC,kBAAc5J,GCFlB,SAAS6J,EAAa/I,EAAUgJ,GAC5B,MAAMC,GAAW,EAAAlJ,EAAA,GAAKC,GACtB,MAAO,KAAQ,IAAI2B,EAAI,OAA8C,QAAtCA,EAAKkH,EAAcG,UAAkC,IAAPrH,EAAgBA,EAAKsH,GAAU,CAChH,CCJA,MAAMC,EAAqCH,GAAa,KACpD,IACII,SACKC,cAAc,OACdC,QAAQ,CAAEC,QAAS,GAAK,CAAEZ,OAAQ,gBAC3C,CACA,MAAOa,GACH,OAAO,CACX,CACA,OAAO,CAAI,GACZ,gB,cCVH,MAAMC,EAAuB,CAACd,EAAQrB,EACtCoC,EAAa,MAET,IAAIC,EAAS,GACb,MAAMC,EAAYtN,KAAKY,IAAIZ,KAAKC,MAAM+K,EAAWoC,GAAa,GAC9D,IAAK,IAAI7L,EAAI,EAAGA,EAAI+L,EAAW/L,IAC3B8L,GAAUhB,GAAO,EAAAnJ,EAAA,GAAS,EAAGoK,EAAY,EAAG/L,IAAM,KAEtD,MAAO,UAAU8L,EAAOE,UAAU,EAAGF,EAAO/L,OAAS,KAAK,ECN9D,SAASkM,EAAuBnB,GAC5B,OAAOnK,QAA2B,mBAAXmK,GAAyBQ,MAC3CR,GACkB,iBAAXA,IACHA,KAAUoB,GAAwBZ,MACvCT,EAAmBC,IAClBC,MAAMC,QAAQF,IAAWA,EAAOqB,MAAMF,GAC/C,CACA,MAAMG,EAAsB,EAAE3O,EAAGC,EAAGmC,EAAGwM,KAAO,gBAAgB5O,MAAMC,MAAMmC,MAAMwM,KAC1EH,EAAuB,CACzBI,OAAQ,SACRC,KAAM,OACNC,OAAQ,UACRC,QAAS,WACTC,UAAW,cACXC,OAAsBP,EAAoB,CAAC,EAAG,IAAM,IAAM,IAC1DQ,QAAuBR,EAAoB,CAAC,IAAM,EAAG,EAAG,MACxDS,OAAsBT,EAAoB,CAAC,IAAM,IAAM,KAAO,MAC9DU,QAAuBV,EAAoB,CAAC,IAAM,KAAM,IAAM,OAElE,SAAS,EAAwBtB,EAAQrB,GACrC,OAAKqB,EAGsB,mBAAXA,GAAyBQ,IAC9BM,EAAqBd,EAAQrB,GAE/BoB,EAAmBC,GACjBsB,EAAoBtB,GAEtBC,MAAMC,QAAQF,GACZA,EAAOzG,KAAK0I,GAAkB,EAAwBA,EAAetD,IACxEyC,EAAqBO,UAGlBP,EAAqBpB,QAb5B,CAeR,CCzCA,MAAMkC,EAAa,CACfC,GAAG,EACHC,GAAG,GAEP,SAASC,IACL,OAAOH,EAAWC,GAAKD,EAAWE,CACtC,CCNA,SAASE,EAAgBC,EAAmBC,EAAOC,GAC/C,IAAIxJ,EACJ,GAAIsJ,aAA6BG,QAC7B,MAAO,CAACH,GAEP,GAAiC,iBAAtBA,EAAgC,CAC5C,IAAII,EAAOlC,SACP+B,IAMAG,EAAOH,EAAMnI,SAEjB,MAAMuI,EAAqH,QAAzG3J,EAAKwJ,aAAqD,EAASA,EAAcF,UAAuC,IAAPtJ,EAAgBA,EAAK0J,EAAKE,iBAAiBN,GAC9K,OAAOK,EAAW3C,MAAM6C,KAAKF,GAAY,EAC7C,CACA,OAAO3C,MAAM6C,KAAKP,EACtB,CCjBA,SAASQ,EAAaR,EAAmB/H,GACrC,MAAMoI,EAAWN,EAAgBC,GAC3BS,EAAyB,IAAIC,gBAOnC,MAAO,CAACL,EANa,CACjBM,SAAS,KACN1I,EACH2I,OAAQH,EAAuBG,QAEpB,IAAMH,EAAuBI,QAEhD,CCLA,SAASC,EAAa/L,GAClB,OAAQgM,IACsB,UAAtBA,EAAMC,aAA2BlB,KAErC/K,EAASgM,EAAM,CAEvB,CAQA,SAASE,EAAMjB,EAAmBkB,EAAcjJ,EAAU,CAAC,GACvD,MAAOoI,EAAUc,EAAcpS,GAAUyR,EAAaR,EAAmB/H,GACnEmJ,EAAiBN,GAAcO,IACjC,MAAM,OAAEC,GAAWD,EACbE,EAAaL,EAAaG,GAChC,GAA0B,mBAAfE,IAA8BD,EACrC,OACJ,MAAME,EAAiBV,GAAcW,IACjCF,EAAWE,GACXH,EAAOI,oBAAoB,eAAgBF,EAAe,IAE9DF,EAAOK,iBAAiB,eAAgBH,EAAgBL,EAAa,IAKzE,OAHAd,EAASpE,SAAS2F,IACdA,EAAQD,iBAAiB,eAAgBP,EAAgBD,EAAa,IAEnEpS,CACX,CC/BA,MAAM8S,EAAgB,CAACC,EAAQC,MACtBA,IAGID,IAAWC,GAITF,EAAcC,EAAQC,EAAMC,gBCfrCC,EAAoBlB,GACI,UAAtBA,EAAMC,YACyB,iBAAjBD,EAAMmB,QAAuBnB,EAAMmB,QAAU,GAWhC,IAApBnB,EAAMoB,UCbfC,EAAoB,IAAIC,IAAI,CAC9B,SACA,QACA,SACA,WACA,MCLJ,MAAMC,EAAa,IAAIC,QCKvB,SAAS,EAAaxN,GAClB,OAAQgM,IACc,UAAdA,EAAMvR,KAEVuF,EAASgM,EAAM,CAEvB,CACA,SAASyB,EAAiBlB,EAAQlO,GAC9BkO,EAAOmB,cAAc,IAAIC,aAAa,UAAYtP,EAAM,CAAE+O,WAAW,EAAMQ,SAAS,IACxF,CACA,MAAMC,EAAsB,CAACC,EAAY1B,KACrC,MAAMS,EAAUiB,EAAWC,cAC3B,IAAKlB,EACD,OACJ,MAAMmB,EAAgB,GAAa,KAC/B,GAAIT,EAAWU,IAAIpB,GACf,OACJY,EAAiBZ,EAAS,QAC1B,MAAMqB,EAAc,GAAa,KAC7BT,EAAiBZ,EAAS,KAAK,IAGnCA,EAAQD,iBAAiB,QAASsB,EAAa9B,GAC/CS,EAAQD,iBAAiB,QAFN,IAAMa,EAAiBZ,EAAS,WAENT,EAAa,IAE9DS,EAAQD,iBAAiB,UAAWoB,EAAe5B,GAInDS,EAAQD,iBAAiB,QAAQ,IAAMC,EAAQF,oBAAoB,UAAWqB,IAAgB5B,EAAa,ECtB/G,SAAS+B,EAAkBnC,GACvB,OAAOkB,EAAiBlB,KAAWjB,GACvC,CAoBA,SAASqD,EAAMnD,EAAmBoD,EAAcnL,EAAU,CAAC,GACvD,MAAOoI,EAAUc,EAAckC,GAAgB7C,EAAaR,EAAmB/H,GACzEqL,EAAcC,IAChB,MAAM3B,EAAU2B,EAAWT,cAC3B,IAAKI,EAAkBK,IAAejB,EAAWU,IAAIpB,GACjD,OACJU,EAAWjQ,IAAIuP,GACf,MAAM4B,EAAaJ,EAAaG,GAC1BE,EAAe,CAACC,EAAUC,KAC5BxI,OAAOuG,oBAAoB,YAAakC,GACxCzI,OAAOuG,oBAAoB,gBAAiBmC,GACvCX,EAAkBQ,IAAcpB,EAAWU,IAAIpB,KAGpDU,EAAWwB,OAAOlC,GACQ,mBAAf4B,GACPA,EAAWE,EAAU,CAAEC,YAC3B,EAEEC,EAAeG,IACjBN,EAAaM,EAAS9L,EAAQ+L,iBAC1BnC,EAAcD,EAASmC,EAAQzC,QAAQ,EAEzCuC,EAAmBI,IACrBR,EAAaQ,GAAa,EAAM,EAEpC9I,OAAOwG,iBAAiB,YAAaiC,EAAazC,GAClDhG,OAAOwG,iBAAiB,gBAAiBkC,EAAiB1C,EAAa,EAW3E,OATAd,EAASpE,SAAS2F,KHxDtB,SAAqCA,GACjC,OAAQQ,EAAkBY,IAAIpB,EAAQsC,WACZ,IAAtBtC,EAAQuC,QAChB,EGsDaC,CAA4BxC,IACQ,OAArCA,EAAQyC,aAAa,cACrBzC,EAAQuC,SAAW,IAERlM,EAAQ+L,gBAAkB7I,OAASyG,GAC3CD,iBAAiB,cAAe2B,EAAYnC,GACnDS,EAAQD,iBAAiB,SAAUZ,GAAU6B,EAAoB7B,EAAOI,IAAeA,EAAa,IAEjGkC,CACX,C,gBCvEA,SAASiB,EAAYC,GACjB,MAAa,MAATA,GAAyB,MAATA,EACZ5E,EAAW4E,GACJ,MAGP5E,EAAW4E,IAAQ,EACZ,KACH5E,EAAW4E,IAAQ,CAAK,GAK5B5E,EAAWC,GAAKD,EAAWE,EACpB,MAGPF,EAAWC,EAAID,EAAWE,GAAI,EACvB,KACHF,EAAWC,EAAID,EAAWE,GAAI,CAAK,EAInD,C,qECtBA,MAAM2E,E,QAA4B,EAAY,EAAAC,gBAAkB,EAAAC,S,uBCDhE,SAASC,EAA8BC,GACnC,GAAqB,oBAAVC,MACP,OAAOD,EAMX,MAAME,EAAiB,IAAIC,IAO3B,OAAO,IAAIF,OANuB,IAAIG,IAI3BJ,KAAoBI,IAEa,CAMxC9K,IAAK,CAAC+K,EAASzV,IACC,WAARA,EACOoV,GAINE,EAAe9B,IAAIxT,IACpBsV,EAAe1N,IAAI5H,EAAKoV,EAAiBpV,IAEtCsV,EAAe5K,IAAI1K,KAGtC,CCnCA,SAAS0V,EAAoB5U,GACzB,OAAc,OAANA,GACS,iBAANA,GACY,mBAAZA,EAAE+J,KACjB,C,iCCJA,MAAM8K,EAAqB7U,GAChBoN,MAAMC,QAAQrN,GCDzB,SAAS8U,EAAejI,EAAMzE,GAC1B,IAAKgF,MAAMC,QAAQjF,GACf,OAAO,EACX,MAAM2M,EAAa3M,EAAKhG,OACxB,GAAI2S,IAAelI,EAAKzK,OACpB,OAAO,EACX,IAAK,IAAIC,EAAI,EAAGA,EAAI0S,EAAY1S,IAC5B,GAAI+F,EAAK/F,KAAOwK,EAAKxK,GACjB,OAAO,EAEf,OAAO,CACX,CCRA,SAAS2S,EAAehV,GACpB,MAAoB,iBAANA,GAAkBoN,MAAMC,QAAQrN,EAClD,CCLA,SAASiV,EAAcC,GACnB,MAAMvW,EAAQ,CAAC,CAAC,EAAG,CAAC,GAKpB,OAJAuW,SAA8DA,EAAc7P,OAAOsG,SAAQ,CAACpM,EAAOL,KAC/FP,EAAM,GAAGO,GAAOK,EAAMqK,MACtBjL,EAAM,GAAGO,GAAOK,EAAMuK,aAAa,IAEhCnL,CACX,CACA,SAASwW,EAAwBC,EAAOC,EAAYC,EAAQJ,GAIxD,GAA0B,mBAAfG,EAA2B,CAClC,MAAO7N,EAAS+N,GAAYN,EAAcC,GAC1CG,EAAaA,OAAsB1R,IAAX2R,EAAuBA,EAASF,EAAME,OAAQ9N,EAAS+N,EACnF,CAaA,GAR0B,iBAAfF,IACPA,EAAaD,EAAMI,UAAYJ,EAAMI,SAASH,IAOxB,mBAAfA,EAA2B,CAClC,MAAO7N,EAAS+N,GAAYN,EAAcC,GAC1CG,EAAaA,OAAsB1R,IAAX2R,EAAuBA,EAASF,EAAME,OAAQ9N,EAAS+N,EACnF,CACA,OAAOF,CACX,CC/BA,SAASI,EAAeP,EAAeG,EAAYC,GAC/C,MAAMF,EAAQF,EAAcQ,WAC5B,OAAOP,EAAwBC,EAAOC,OAAuB1R,IAAX2R,EAAuBA,EAASF,EAAME,OAAQJ,EACpG,CCLA,MAAMS,EAAuB,CACzB,UACA,cACA,aACA,aACA,WACA,YACA,QAEEC,EAAe,CAAC,aAAcD,G,cCNpC,MAAME,EAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKEC,EAAiB,IAAI/D,IAAI8D,GCvBzBE,EAAiB,IAAIhE,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,YACG8D,I,cCDP,SAASG,EAAed,EAAehW,EAAKK,GACpC2V,EAAce,SAAS/W,GACvBgW,EAAcgB,SAAShX,GAAK4H,IAAIvH,GAGhC2V,EAAciB,SAASjX,GAAK,QAAYK,GAEhD,CCfA,MAAM6W,EAAiB7W,GAAUyD,QAAQzD,GAASA,EAAMuK,aCExD,SAASuM,EAAqBnB,EAAehW,GACzC,MAAMoX,EAAapB,EAAcgB,SAAS,cAK1C,GCN6B3W,EDMD+W,ECLrBtT,QAAQoT,EAAc7W,IAAUA,EAAMwC,KDMzC,OAAOuU,EAAWvU,IAAI7C,GCP9B,IAAiCK,CDSjC,CERA,MAAMgX,EAAeC,GAAQA,EAAI9Q,QAAQ,mBAAoB,SAAS+Q,cCAhEC,EAA+B,QAAUH,EADjB,kBCA9B,SAASI,EAAqBzB,GAC1B,OAAOA,EAAcE,MAAMsB,EAC/B,C,iCCJA,MAAME,GACO,E,cCmBb,MAAMC,EAAa,CAACC,EAAGC,EAAIC,OAAU,EAAM,EAAMA,EAAK,EAAMD,GAAMD,GAAK,EAAME,EAAK,EAAMD,IAAOD,EAAI,EAAMC,GACrGD,EAoBJ,SAASG,EAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAOjX,EAAA,EACX,MAAMkX,EAAYC,GArBtB,SAAyBjI,EAAGkI,EAAYC,EAAYP,EAAKE,GACrD,IAAIM,EACAC,EACAtV,EAAI,EACR,GACIsV,EAAWH,GAAcC,EAAaD,GAAc,EACpDE,EAAWb,EAAWc,EAAUT,EAAKE,GAAO9H,EACxCoI,EAAW,EACXD,EAAaE,EAGbH,EAAaG,QAEZ7W,KAAK8W,IAAIF,GAfO,QAgBnBrV,EAfuB,IAgB7B,OAAOsV,CACX,CAK6BE,CAAgBN,EAAI,EAAG,EAAGL,EAAKE,GAExD,OAAQN,GAAY,IAANA,GAAiB,IAANA,EAAUA,EAAID,EAAWS,EAASR,GAAIK,EAAKE,EACxE,CC9CA,MAAMS,EAAgB3K,GAAY4K,GAAMA,GAAK,GAAM5K,EAAO,EAAI4K,GAAK,GAAK,EAAI5K,EAAO,GAAK,EAAI4K,KAAO,ECA7FC,EAAiB7K,GAAY4K,GAAM,EAAI5K,EAAO,EAAI4K,GCElD5I,EAAwB8H,EAAY,IAAM,KAAM,IAAM,KACtD/H,EAAuB8I,EAAc7I,GACrC8I,EAA0BH,EAAa5I,GCJvCgJ,EAAcH,IAAOA,GAAK,GAAK,EAAI,GAAM7I,EAAO6I,GAAK,IAAO,EAAIjX,KAAKqX,IAAI,GAAI,IAAMJ,EAAI,KCCvF/I,EAAU+I,GAAM,EAAIjX,KAAKsX,IAAItX,KAAKuX,KAAKN,IACvC9I,EAAU+I,EAAchJ,GACxBsJ,EAAYR,EAAa9I,GCFzBuJ,EAAqBvY,GAAM,cAAcP,KAAKO,G,uBCGpD,MAAMwY,EAAc,IAAIzG,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAAS0G,EAAmBzY,GACxB,MAAO0Y,EAAMnZ,GAASS,EAAE2Y,MAAM,GAAI,GAAGjZ,MAAM,KAC3C,GAAa,gBAATgZ,EACA,OAAO1Y,EACX,MAAOwC,GAAUjD,EAAMmE,MAAM,MAAe,GAC5C,IAAKlB,EACD,OAAOxC,EACX,MAAM4Y,EAAOrZ,EAAMmG,QAAQlD,EAAQ,IACnC,IAAIqW,EAAeL,EAAY9F,IAAIgG,GAAQ,EAAI,EAG/C,OAFIlW,IAAWjD,IACXsZ,GAAgB,KACbH,EAAO,IAAMG,EAAeD,EAAO,GAC9C,CACA,MAAME,EAAgB,uBAChB7N,EAAS,IACR9E,EAAA,EACHI,kBAAoBvG,IAChB,MAAM+Y,EAAY/Y,EAAE0D,MAAMoV,GAC1B,OAAOC,EAAYA,EAAUrS,IAAI+R,GAAoBO,KAAK,KAAOhZ,CAAC,G,kCCvB1E,MAAMiZ,EAA0B,CAE5BC,YAAa,EAAAC,GACbC,eAAgB,EAAAD,GAChBE,iBAAkB,EAAAF,GAClBG,kBAAmB,EAAAH,GACnBI,gBAAiB,EAAAJ,GACjBK,aAAc,EAAAL,GACdM,OAAQ,EAAAN,GACRO,oBAAqB,EAAAP,GACrBQ,qBAAsB,EAAAR,GACtBS,wBAAyB,EAAAT,GACzBU,uBAAwB,EAAAV,GAExBW,MAAO,EAAAX,GACPY,SAAU,EAAAZ,GACVa,OAAQ,EAAAb,GACRc,UAAW,EAAAd,GACXe,IAAK,EAAAf,GACLgB,MAAO,EAAAhB,GACPiB,OAAQ,EAAAjB,GACRkB,KAAM,EAAAlB,GAENmB,QAAS,EAAAnB,GACToB,WAAY,EAAApB,GACZqB,aAAc,EAAArB,GACdsB,cAAe,EAAAtB,GACfuB,YAAa,EAAAvB,GACbwB,OAAQ,EAAAxB,GACRyB,UAAW,EAAAzB,GACX0B,YAAa,EAAA1B,GACb2B,aAAc,EAAA3B,GACd4B,WAAY,EAAA5B,GAEZ6B,oBAAqB,EAAA7B,GACrB8B,oBAAqB,EAAA9B,IClCnB+B,EAAsB,CACxBC,OAAQ,KACRC,QAAS,KACTC,QAAS,KACTC,QAAS,KACT5Y,MAAK,KACL6Y,OAAQ,KACRC,OAAQ,KACRC,OAAQ,KACRC,KAAM,KACNC,MAAO,KACPC,MAAO,KACPC,SAAU,EAAA1C,GACV2C,WAAY,EAAA3C,GACZ4C,WAAY,EAAA5C,GACZ6C,WAAY,EAAA7C,GACZ7J,EAAG,EAAA6J,GACH5J,EAAG,EAAA4J,GACH8C,EAAG,EAAA9C,GACH+C,YAAa,EAAA/C,GACbgD,qBAAsB,EAAAhD,GACtBpL,QAAS,KACTqO,QAAS,KACTC,QAAS,KACTC,QAAS,EAAAnD,ICzBP,EAAM,IACL,KACH3Y,UAAWM,KAAKC,OCEdwb,EAAmB,IAClBtD,KACAiC,EACHsB,OAAQ,EACRC,KAAM,EAAAtD,GAENuD,YAAa,KACbC,cAAe,KACfC,WAAY,GCPVC,GAAoB,IACnBN,EAEHhX,MAAK,IACLuX,gBAAiBvX,EAAA,EACjBwX,aAAcxX,EAAA,EACdyX,KAAMzX,EAAA,EACN0X,OAAQ1X,EAAA,EAER2X,YAAa3X,EAAA,EACb4X,eAAgB5X,EAAA,EAChB6X,iBAAkB7X,EAAA,EAClB8X,kBAAmB9X,EAAA,EACnB+X,gBAAiB/X,EAAA,EACjB0F,OAAM,EACNsS,aAActS,GAKZuS,GAAuBte,GAAQ2d,GAAkB3d,GCvBvD,SAASqH,GAAkBrH,EAAKK,GAC5B,IAAIke,EAAmBD,GAAoBte,GAI3C,OAHIue,IAAqBxS,IACrBwS,EAAmBtX,EAAA,GAEhBsX,EAAiBlX,kBAClBkX,EAAiBlX,kBAAkBhH,QACnCoE,CACV,CCHA,MAAM+Z,GAAmB,IAAI3L,IAAI,CAAC,OAAQ,OAAQ,MCLlD,MAAM4L,GAAiB3d,GAAMA,IAAM,MAAUA,IAAM,EAAAmZ,GAC7CyE,GAAmB,CAACC,EAAQC,IAAQrb,WAAWob,EAAOne,MAAM,MAAMoe,IAClEC,GAAyB,CAACC,EAAMC,IAAS,CAACC,GAAS1d,gBACrD,GAAkB,SAAdA,IAAyBA,EACzB,OAAO,EACX,MAAM2d,EAAW3d,EAAUkD,MAAM,uBACjC,GAAIya,EACA,OAAOP,GAAiBO,EAAS,GAAIF,GAEpC,CACD,MAAMJ,EAASrd,EAAUkD,MAAM,qBAC/B,OAAIma,EACOD,GAAiBC,EAAO,GAAIG,GAG5B,CAEf,GAEEI,GAAgB,IAAIrM,IAAI,CAAC,IAAK,IAAK,MACnCsM,GAAgCxI,EAAmB5K,QAAQ/L,IAASkf,GAAc1L,IAAIxT,KAY5F,MAAMof,GAAmB,CAErBxE,MAAO,EAAGxK,MAAOoL,cAAc,IAAKF,eAAe,OAAUlL,EAAE5N,IAAM4N,EAAE7N,IAAMgB,WAAWiY,GAAejY,WAAW+X,GAClHR,OAAQ,EAAGzK,MAAOgL,aAAa,IAAKE,gBAAgB,OAAUlL,EAAE7N,IAAM6N,EAAE9N,IAAMgB,WAAW8X,GAAc9X,WAAWgY,GAClHP,IAAK,CAACgE,GAAShE,SAAUzX,WAAWyX,GACpCG,KAAM,CAAC6D,GAAS7D,UAAW5X,WAAW4X,GACtCD,OAAQ,EAAG7K,MAAO2K,SAAUzX,WAAWyX,IAAQ3K,EAAE7N,IAAM6N,EAAE9N,KACzD0Y,MAAO,EAAG7K,MAAO+K,UAAW5X,WAAW4X,IAAS/K,EAAE5N,IAAM4N,EAAE7N,KAE1D6N,EAAGyO,GAAuB,EAAG,IAC7BxO,EAAGwO,GAAuB,EAAG,KAGjCO,GAAiBxC,WAAawC,GAAiBhP,EAC/CgP,GAAiBvC,WAAauC,GAAiB/O,EC/C/C,MAAMgP,GAAY,IAAIxM,IACtB,IAAIyM,IAAc,EACdC,IAAsB,EAC1B,SAASC,KACL,GAAID,GAAqB,CACrB,MAAME,EAAqBvR,MAAM6C,KAAKsO,IAAWtT,QAAQ2T,GAAaA,EAASC,mBACzEC,EAAoB,IAAI/M,IAAI4M,EAAmBjY,KAAKkY,GAAaA,EAAStN,WAC1EyN,EAAsB,IAAItK,IAKhCqK,EAAkBnT,SAAS2F,IACvB,MAAM0N,EDSlB,SAAyC9J,GACrC,MAAM8J,EAAoB,GAQ1B,OAPAX,GAA8B1S,SAASzM,IACnC,MAAMK,EAAQ2V,EAAcgB,SAAShX,QACvByE,IAAVpE,IACAyf,EAAkB5d,KAAK,CAAClC,EAAKK,EAAMqK,QACnCrK,EAAMuH,IAAI5H,EAAIC,WAAW,SAAW,EAAI,GAC5C,IAEG6f,CACX,CCnBsCC,CAAgC3N,GACrD0N,EAAkB5c,SAEvB2c,EAAoBjY,IAAIwK,EAAS0N,GACjC1N,EAAQtJ,SAAQ,IAGpB2W,EAAmBhT,SAASiT,GAAaA,EAASM,wBAElDJ,EAAkBnT,SAAS2F,IACvBA,EAAQtJ,SACR,MAAMmX,EAAUJ,EAAoBnV,IAAI0H,GACpC6N,GACAA,EAAQxT,SAAQ,EAAEzM,EAAKK,MACnB,IAAI6G,EAC6B,QAAhCA,EAAKkL,EAAQ4E,SAAShX,UAAyB,IAAPkH,GAAyBA,EAAGU,IAAIvH,EAAM,GAEvF,IAGJof,EAAmBhT,SAASiT,GAAaA,EAASQ,oBAElDT,EAAmBhT,SAASiT,SACUjb,IAA9Bib,EAASS,kBACTxU,OAAOyU,SAAS,EAAGV,EAASS,iBAChC,GAER,CACAZ,IAAsB,EACtBD,IAAc,EACdD,GAAU5S,SAASiT,GAAaA,EAASxS,aACzCmS,GAAUhc,OACd,CACA,SAASgd,KACLhB,GAAU5S,SAASiT,IACfA,EAASY,gBACLZ,EAASC,mBACTJ,IAAsB,EAC1B,GAER,CAKA,MAAMgB,GACF,WAAA7d,CAAY8d,EAAqBC,EAAYjH,EAAM/N,EAAa2G,EAASsO,GAAU,GAK/E/d,KAAKge,YAAa,EAMlBhe,KAAK+d,SAAU,EAKf/d,KAAKgd,kBAAmB,EAKxBhd,KAAK2c,aAAc,EACnB3c,KAAK6d,oBAAsB,IAAIA,GAC/B7d,KAAK8d,WAAaA,EAClB9d,KAAK6W,KAAOA,EACZ7W,KAAK8I,YAAcA,EACnB9I,KAAKyP,QAAUA,EACfzP,KAAK+d,QAAUA,CACnB,CACA,eAAAE,GACIje,KAAK2c,aAAc,EACf3c,KAAK+d,SACLrB,GAAUxc,IAAIF,MACT2c,KACDA,IAAc,EACd,KAAMvV,KAAKsW,IACX,KAAMQ,iBAAiBrB,OAI3B7c,KAAK2d,gBACL3d,KAAKuK,WAEb,CACA,aAAAoT,GACI,MAAM,oBAAEE,EAAmB,KAAEhH,EAAI,QAAEpH,EAAO,YAAE3G,GAAgB9I,KAK5D,IAAK,IAAIQ,EAAI,EAAGA,EAAIqd,EAAoBtd,OAAQC,IAC5C,GAA+B,OAA3Bqd,EAAoBrd,GAIpB,GAAU,IAANA,EAAS,CACT,MAAM2d,EAAerV,aAAiD,EAASA,EAAYf,MACrFqW,EAAgBP,EAAoBA,EAAoBtd,OAAS,GACvE,QAAqBuB,IAAjBqc,EACAN,EAAoB,GAAKM,OAExB,GAAI1O,GAAWoH,EAAM,CACtB,MAAMwH,EAAc5O,EAAQ6O,UAAUzH,EAAMuH,GACxCC,UACAR,EAAoB,GAAKQ,EAEjC,MAC+Bvc,IAA3B+b,EAAoB,KACpBA,EAAoB,GAAKO,GAEzBtV,QAAgChH,IAAjBqc,GACfrV,EAAY7D,IAAI4Y,EAAoB,GAE5C,MAEIA,EAAoBrd,GAAKqd,EAAoBrd,EAAI,EAIjE,CACA,gBAAA+d,GAAqB,CACrB,mBAAAlB,GAAwB,CACxB,eAAAmB,GAAoB,CACpB,eAAAjB,GAAoB,CACpB,QAAAhT,GACIvK,KAAKge,YAAa,EAClBhe,KAAK8d,WAAW9d,KAAK6d,oBAAqB7d,KAAKoe,eAC/C1B,GAAU/K,OAAO3R,KACrB,CACA,MAAApD,GACSoD,KAAKge,aACNhe,KAAK2c,aAAc,EACnBD,GAAU/K,OAAO3R,MAEzB,CACA,MAAAye,GACSze,KAAKge,YACNhe,KAAKie,iBACb,E,eC7JJ,MAAMS,GAAqBvgB,GAAM,+BAA+BP,KAAKO,G,cCUrE,MAAMwgB,GAEN,2DASA,SAASC,GAAiBjZ,EAAS8J,EAASoP,EAAQ,IAChD,QAAUA,GAFG,EAEgB,yDAAyDlZ,yDACtF,MAAOvI,EAAOyM,GAVlB,SAA0BlE,GACtB,MAAM9D,EAAQ8c,GAAsBG,KAAKnZ,GACzC,IAAK9D,EACD,MAAO,CAAC,GACZ,MAAO,CAAEkd,EAAQC,EAAQnV,GAAYhI,EACrC,MAAO,CAAC,KAAKkd,QAAuCA,EAASC,IAAUnV,EAC3E,CAI8BoV,CAAiBtZ,GAE3C,IAAKvI,EACD,OAEJ,MAAM8hB,EAAWlW,OAAOmW,iBAAiB1P,GAAS2P,iBAAiBhiB,GACnE,GAAI8hB,EAAU,CACV,MAAMG,EAAUH,EAASphB,OACzB,OAAO4gB,GAAkBW,GAAWze,WAAWye,GAAWA,CAC9D,CACA,OAAO,QAAmBxV,GACpB+U,GAAiB/U,EAAU4F,EAASoP,EAAQ,GAC5ChV,CACV,CCpCA,MAAMyV,GAAiBnhB,GAAO8C,GAASA,EAAKrD,KAAKO,GCK3CohB,GAAsB,CAAC,KAAQ,EAAAjI,GAAI,KAAS,KAAS,EAAAkI,GAAI,EAAAC,GCLlD,CACT7hB,KAAOO,GAAY,SAANA,EACbO,MAAQP,GAAMA,IDOZuhB,GAA0BvhB,GAAMohB,GAAoBI,KAAKL,GAAcnhB,IEH7E,MAAMyhB,WAA6BhC,GAC/B,WAAA7d,CAAY8d,EAAqBC,EAAYjH,EAAM/N,EAAa2G,GAC5DoQ,MAAMhC,EAAqBC,EAAYjH,EAAM/N,EAAa2G,GAAS,EACvE,CACA,aAAAkO,GACI,MAAM,oBAAEE,EAAmB,QAAEpO,EAAO,KAAEoH,GAAS7W,KAC/C,IAAKyP,IAAYA,EAAQ9J,QACrB,OACJka,MAAMlC,gBAIN,IAAK,IAAInd,EAAI,EAAGA,EAAIqd,EAAoBtd,OAAQC,IAAK,CACjD,IAAIsf,EAAWjC,EAAoBrd,GACnC,GAAwB,iBAAbsf,IACPA,EAAWA,EAAShiB,QAChB,QAAmBgiB,IAAW,CAC9B,MAAMZ,EAAWN,GAAiBkB,EAAUrQ,EAAQ9J,cACnC7D,IAAbod,IACArB,EAAoBrd,GAAK0e,GAEzB1e,IAAMqd,EAAoBtd,OAAS,IACnCP,KAAKoe,cAAgB0B,EAE7B,CAER,CAaA,GAPA9f,KAAK+f,wBAOA7L,EAAerD,IAAIgG,IAAwC,IAA/BgH,EAAoBtd,OACjD,OAEJ,MAAOyf,EAAQ7Q,GAAU0O,EACnBoC,EAAaP,GAAuBM,GACpCE,EAAaR,GAAuBvQ,GAI1C,GAAI8Q,IAAeC,EAMnB,GAAIpE,GAAcmE,IAAenE,GAAcoE,GAC3C,IAAK,IAAI1f,EAAI,EAAGA,EAAIqd,EAAoBtd,OAAQC,IAAK,CACjD,MAAM9C,EAAQmgB,EAAoBrd,GACb,iBAAV9C,IACPmgB,EAAoBrd,GAAKI,WAAWlD,GAE5C,MAMAsC,KAAKgd,kBAAmB,CAEhC,CACA,oBAAA+C,GACI,MAAM,oBAAElC,EAAmB,KAAEhH,GAAS7W,KAChCmgB,EAAsB,GAC5B,IAAK,IAAI3f,EAAI,EAAGA,EAAIqd,EAAoBtd,OAAQC,KC9E/B,iBADT9C,EDgFOmgB,EAAoBrd,IC9ElB,IAAV9C,EAEQ,OAAVA,GACY,SAAVA,GAA8B,MAAVA,GAAiBgZ,EAAkBhZ,KD4EtDyiB,EAAoB5gB,KAAKiB,GCjFzC,IAAgB9C,EDoFJyiB,EAAoB5f,QR5EhC,SAAqCsd,EAAqBsC,EAAqBtJ,GAC3E,IACIuJ,EADA5f,EAAI,EAER,KAAOA,EAAIqd,EAAoBtd,SAAW6f,GAAoB,CAC1D,MAAMN,EAAWjC,EAAoBrd,GACb,iBAAbsf,IACNjE,GAAiBhL,IAAIiP,KACtB,OAAoBA,GAAUtc,OAAOjD,SACrC6f,EAAqBvC,EAAoBrd,IAE7CA,GACJ,CACA,GAAI4f,GAAsBvJ,EACtB,IAAK,MAAMwJ,KAAaF,EACpBtC,EAAoBwC,GAAa3b,GAAkBmS,EAAMuJ,EAGrE,CQ4DYE,CAA4BzC,EAAqBsC,EAAqBtJ,EAE9E,CACA,mBAAAwG,GACI,MAAM,QAAE5N,EAAO,oBAAEoO,EAAmB,KAAEhH,GAAS7W,KAC/C,IAAKyP,IAAYA,EAAQ9J,QACrB,OACS,WAATkR,IACA7W,KAAKwd,iBAAmBxU,OAAOuX,aAEnCvgB,KAAKwgB,eAAiB/D,GAAiB5F,GAAMpH,EAAQgR,qBAAsBzX,OAAOmW,iBAAiB1P,EAAQ9J,UAC3GkY,EAAoB,GAAK7d,KAAKwgB,eAE9B,MAAME,EAAkB7C,EAAoBA,EAAoBtd,OAAS,QACjDuB,IAApB4e,GACAjR,EAAQ4E,SAASwC,EAAM6J,GAAiB7Y,KAAK6Y,GAAiB,EAEtE,CACA,eAAAnD,GACI,IAAIhZ,EACJ,MAAM,QAAEkL,EAAO,KAAEoH,EAAI,oBAAEgH,GAAwB7d,KAC/C,IAAKyP,IAAYA,EAAQ9J,QACrB,OACJ,MAAMjI,EAAQ+R,EAAQ4E,SAASwC,GAC/BnZ,GAASA,EAAMmK,KAAK7H,KAAKwgB,gBAAgB,GACzC,MAAMG,EAAqB9C,EAAoBtd,OAAS,EAClD6d,EAAgBP,EAAoB8C,GAC1C9C,EAAoB8C,GAAsBlE,GAAiB5F,GAAMpH,EAAQgR,qBAAsBzX,OAAOmW,iBAAiB1P,EAAQ9J,UACzG,OAAlByY,QAAiDtc,IAAvB9B,KAAKoe,gBAC/Bpe,KAAKoe,cAAgBA,IAGa,QAAjC7Z,EAAKvE,KAAKmd,yBAAsC,IAAP5Y,OAAgB,EAASA,EAAGhE,SACtEP,KAAKmd,kBAAkBrT,SAAQ,EAAE8W,EAAoBC,MACjDpR,EACK4E,SAASuM,GACT3b,IAAI4b,EAAoB,IAGrC7gB,KAAK+f,sBACT,E,eEpHJ,MAAMe,GAAe,CAACpjB,EAAOmZ,IAEZ,WAATA,MAKiB,iBAAVnZ,IAAsB6N,MAAMC,QAAQ9N,OAE1B,iBAAVA,IACN4G,EAAA,EAAQ1G,KAAKF,IAAoB,MAAVA,GACvBA,EAAMJ,WAAW,UCtB1B,MAAMyjB,GAAarjB,GAAoB,OAAVA,EAC7B,SAASsjB,GAAiBC,GAAW,OAAEC,EAAM,WAAEC,EAAa,QAAU/C,GAClE,MAAMgD,EAAoBH,EAAU7X,OAAO2X,IACrCthB,EAAQyhB,GAAyB,SAAfC,GAAyBD,EAAS,GAAM,EAC1D,EACAE,EAAkB7gB,OAAS,EACjC,OAAQd,QAA2BqC,IAAlBsc,EAEXA,EADAgD,EAAkB3hB,EAE5B,CCMA,MAAM4hB,GACF,WAAAthB,EAAY,SAAEuhB,GAAW,EAAI,MAAEC,EAAQ,EAAC,KAAEtgB,EAAO,YAAW,OAAEigB,EAAS,EAAC,YAAEM,EAAc,EAAC,WAAEL,EAAa,UAAWrb,IAE/G9F,KAAKyhB,WAAY,EACjBzhB,KAAK0hB,qBAAsB,EAC3B1hB,KAAK2hB,UAAY,KAAK7c,MACtB9E,KAAK8F,QAAU,CACXwb,WACAC,QACAtgB,OACAigB,SACAM,cACAL,gBACGrb,GAEP9F,KAAK4hB,uBACT,CAWA,aAAAC,GACI,OAAK7hB,KAAK8hB,YAEH9hB,KAAK8hB,WAAa9hB,KAAK2hB,UA/BZ,GAgCZ3hB,KAAK8hB,WAFA9hB,KAAK2hB,SAIpB,CAMA,YAAIzC,GAIA,OAHKlf,KAAK+hB,WAAc/hB,KAAK0hB,sBVGjChE,KACAb,MUDW7c,KAAK+hB,SAChB,CAMA,mBAAAC,CAAoBf,EAAW7C,GAC3Bpe,KAAK8hB,WAAa,KAAKhd,MACvB9E,KAAK0hB,qBAAsB,EAC3B,MAAM,KAAE7K,EAAI,KAAE5V,EAAI,SAAEyS,EAAQ,MAAE6N,EAAK,WAAEzD,EAAU,SAAEmE,EAAQ,YAAE9W,GAAiBnL,KAAK8F,QAKjF,IAAKqF,IC5Db,SAAoB8V,EAAWpK,EAAM5V,EAAMyS,GAMvC,MAAMwO,EAAiBjB,EAAU,GACjC,GAAuB,OAAnBiB,EACA,OAAO,EAMX,GAAa,YAATrL,GAA+B,eAATA,EACtB,OAAO,EACX,MAAMsL,EAAiBlB,EAAUA,EAAU1gB,OAAS,GAC9C6hB,EAAqBtB,GAAaoB,EAAgBrL,GAClDwL,EAAqBvB,GAAaqB,EAAgBtL,GAGxD,OAFA,QAAQuL,IAAuBC,EAAoB,6BAA6BxL,WAAcqL,UAAuBC,OAAoBD,+DAA4EA,8BAA2CC,oCAE3PC,IAAuBC,KA9BhC,SAA6BpB,GACzB,MAAMtb,EAAUsb,EAAU,GAC1B,GAAyB,IAArBA,EAAU1gB,OACV,OAAO,EACX,IAAK,IAAIC,EAAI,EAAGA,EAAIygB,EAAU1gB,OAAQC,IAClC,GAAIygB,EAAUzgB,KAAOmF,EACjB,OAAO,CAEnB,CAyBY2c,CAAoBrB,KACb,WAAThgB,IAAqB,QAAYA,KAAUyS,EACrD,CDkC6B6O,CAAWtB,EAAWpK,EAAM5V,EAAMyS,GAAW,CAE9D,GAAIqB,IAAkCwM,EAKlC,OAJAU,GACIA,EAASjB,GAAiBC,EAAWjhB,KAAK8F,QAASsY,IACvDN,GAAcA,SACd9d,KAAKwiB,yBAKLxiB,KAAK8F,QAAQmE,SAAW,CAEhC,CACA,MAAMwY,EAAoBziB,KAAK0iB,aAAazB,EAAW7C,IAC7B,IAAtBqE,IAEJziB,KAAK+hB,UAAY,CACbd,YACA7C,mBACGqE,GAEPziB,KAAK2iB,iBACT,CACA,cAAAA,GAAmB,CAMnB,IAAAna,CAAKH,EAASua,GACV,OAAO5iB,KAAK6iB,uBAAuBra,KAAKH,EAASua,EACrD,CACA,OAAAxY,GACIpK,KAAK8F,QAAQ7E,KAAO,YACpBjB,KAAK8F,QAAQiH,KAAO,QACxB,CACA,qBAAA6U,GACI5hB,KAAK6iB,uBAAyB,IAAIza,SAASC,IACvCrI,KAAKwiB,uBAAyBna,CAAO,GAE7C,E,gDE/GJ,SAASya,GAAsBC,EAAc9N,EAAGtP,GAC5C,MAAMqd,EAAQ/jB,KAAKY,IAAIoV,EAFI,EAEwB,GACnD,OAAO,QAAkBtP,EAAUod,EAAaC,GAAQ/N,EAAI+N,EAChE,CCNA,MAAMC,GAES,IAFTA,GAGO,GAHPA,GAII,EAJJA,GAKQ,EALRA,GAOQ,IAPRA,GAQM,GARNA,GASc,GATdA,GAWS,CACPC,SAAU,IACVpiB,QAAS,GAbXmiB,GAeS,CACPC,SAAU,KACVpiB,QAAS,IAjBXmiB,GAoBW,IApBXA,GAqBW,GArBXA,GAsBU,IAtBVA,GAuBU,ECnBVE,GAAU,KAChB,SAASC,IAAW,SAAEnZ,EAAWgZ,GAAuB,OAAEI,EAASJ,GAAqB,SAAEvP,EAAWuP,GAAuB,KAAEK,EAAOL,KACjI,IAAIM,EACAC,GACJ,QAAQvZ,IAAY,OAAsBgZ,IAA6B,8CACvE,IAAIQ,EAAe,EAAIJ,EAIvBI,GAAe,EAAA9jB,GAAA,GAAMsjB,GAA2BA,GAA2BQ,GAC3ExZ,GAAW,EAAAtK,GAAA,GAAMsjB,GAA4BA,IAA4B,OAAsBhZ,IAC3FwZ,EAAe,GAIfF,EAAYG,IACR,MAAMC,EAAmBD,EAAeD,EAClC7b,EAAQ+b,EAAmB1Z,EAC3BhM,EAAI0lB,EAAmBjQ,EACvBxV,EAAI0lB,GAAgBF,EAAcD,GAClCpjB,EAAIpB,KAAK4kB,KAAKjc,GACpB,OAAOub,GAAWllB,EAAIC,EAAKmC,CAAC,EAEhCmjB,EAAcE,IACV,MACM9b,EADmB8b,EAAeD,EACPxZ,EAC3B4C,EAAIjF,EAAQ8L,EAAWA,EACvBvH,EAAIlN,KAAKqX,IAAImN,EAAc,GAAKxkB,KAAKqX,IAAIoN,EAAc,GAAKzZ,EAC5D6Z,EAAI7kB,KAAK4kB,KAAKjc,GACdmc,EAAIH,GAAgB3kB,KAAKqX,IAAIoN,EAAc,GAAID,GAErD,QADgBF,EAASG,GAAgBP,GAAU,GAAK,EAAI,KACzCtW,EAAIV,GAAK2X,GAAMC,CAAC,IAOvCR,EAAYG,GACEzkB,KAAK4kB,KAAKH,EAAezZ,KACxByZ,EAAehQ,GAAYzJ,EAAW,GAC1C,KAEXuZ,EAAcE,GACAzkB,KAAK4kB,KAAKH,EAAezZ,IACIA,EAAWA,GAAvCyJ,EAAWgQ,KAI9B,MACMA,EAmBV,SAAyBH,EAAUC,EAAYQ,GAC3C,IAAInhB,EAASmhB,EACb,IAAK,IAAIxjB,EAAI,EAAGA,EAAIyjB,GAAgBzjB,IAChCqC,GAAkB0gB,EAAS1gB,GAAU2gB,EAAW3gB,GAEpD,OAAOA,CACX,CAzByBqhB,CAAgBX,EAAUC,EAD1B,EAAIvZ,GAGzB,GADAA,GAAW,OAAsBA,GAC7BxF,MAAMif,GACN,MAAO,CACHS,UAAWlB,GACXmB,QAASnB,GACThZ,YAGH,CACD,MAAMka,EAAYllB,KAAKqX,IAAIoN,EAAc,GAAKJ,EAC9C,MAAO,CACHa,YACAC,QAAwB,EAAfX,EAAmBxkB,KAAKolB,KAAKf,EAAOa,GAC7Cla,WAER,CACJ,CACA,MAAMga,GAAiB,GAQvB,SAASL,GAAgBF,EAAcD,GACnC,OAAOC,EAAezkB,KAAKolB,KAAK,EAAIZ,EAAeA,EACvD,CC3EA,MAAMa,GAAe,CAAC,WAAY,UAC5BC,GAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,GAAa1e,EAAS2e,GAC3B,OAAOA,EAAKC,MAAMrnB,QAAyByE,IAAjBgE,EAAQzI,IACtC,CAuCA,SAASsnB,GAAOC,EAA0B3B,GAA+BI,EAASJ,IAC9E,MAAMnd,EAA6C,iBAA5B8e,EACjB,CACEC,eAAgBD,EAChB3D,UAAW,CAAC,EAAG,GACfoC,UAEFuB,EACN,IAAI,UAAEE,EAAS,UAAEC,GAAcjf,EAC/B,MAAMka,EAASla,EAAQmb,UAAU,GAC3B9R,EAASrJ,EAAQmb,UAAUnb,EAAQmb,UAAU1gB,OAAS,GAKtDzD,EAAQ,CAAEmO,MAAM,EAAOvN,MAAOsiB,IAC9B,UAAEmE,EAAS,QAAEC,EAAO,KAAEd,EAAI,SAAErZ,EAAQ,SAAEyJ,EAAQ,uBAAEsR,GAtD1D,SAA0Blf,GACtB,IAAImf,EAAgB,CAChBvR,SAAUuP,GACVkB,UAAWlB,GACXmB,QAASnB,GACTK,KAAML,GACN+B,wBAAwB,KACrBlf,GAGP,IAAK0e,GAAa1e,EAASye,KACvBC,GAAa1e,EAASwe,IACtB,GAAIxe,EAAQ+e,eAAgB,CACxB,MAAMA,EAAiB/e,EAAQ+e,eACzB5W,EAAQ,EAAIhP,KAAKimB,IAAwB,IAAjBL,GACxBV,EAAYlW,EAAOA,EACnBmW,EAAU,GACZ,EAAAzkB,GAAA,GAAM,IAAM,EAAG,GAAKmG,EAAQud,QAAU,IACtCpkB,KAAKolB,KAAKF,GACdc,EAAgB,IACTA,EACH3B,KAAML,GACNkB,YACAC,UAER,KACK,CACD,MAAMe,EAAU/B,GAAWtd,GAC3Bmf,EAAgB,IACTA,KACAE,EACH7B,KAAML,IAEVgC,EAAcD,wBAAyB,CAC3C,CAEJ,OAAOC,CACX,CAiBsFG,CAAiB,IAC5Ftf,EACH4N,WAAW,OAAsB5N,EAAQ4N,UAAY,KAEnD2R,EAAkB3R,GAAY,EAC9B+P,EAAeW,GAAW,EAAInlB,KAAKolB,KAAKF,EAAYb,IACpDgC,EAAenW,EAAS6Q,EACxBuF,GAAsB,OAAsBtmB,KAAKolB,KAAKF,EAAYb,IAQlEkC,EAAkBvmB,KAAK8W,IAAIuP,GAAgB,EAOjD,IAAIG,EACJ,GAPAX,IAAcA,EAAYU,EACpBvC,GAAyBC,SACzBD,GAAyBniB,SAC/BikB,IAAcA,EAAYS,EACpBvC,GAAyBC,SACzBD,GAAyBniB,SAE3B2iB,EAAe,EAAG,CAClB,MAAMiC,EAAc9B,GAAgB2B,EAAqB9B,GAEzDgC,EAAiBxQ,IACb,MAAMsO,EAAWtkB,KAAK4kB,KAAKJ,EAAe8B,EAAsBtQ,GAChE,OAAQ9F,EACJoU,IACO8B,EACC5B,EAAe8B,EAAsBD,GACrCI,EACAzmB,KAAKsX,IAAImP,EAAczQ,GACvBqQ,EAAermB,KAAK0mB,IAAID,EAAczQ,GAAI,CAE9D,MACK,GAAqB,IAAjBwO,EAELgC,EAAiBxQ,GAAM9F,EACnBlQ,KAAK4kB,KAAK0B,EAAsBtQ,IAC3BqQ,GACID,EAAkBE,EAAsBD,GAAgBrQ,OAEpE,CAED,MAAM2Q,EAAoBL,EAAsBtmB,KAAKolB,KAAKZ,EAAeA,EAAe,GACxFgC,EAAiBxQ,IACb,MAAMsO,EAAWtkB,KAAK4kB,KAAKJ,EAAe8B,EAAsBtQ,GAE1D4Q,EAAW5mB,KAAKW,IAAIgmB,EAAoB3Q,EAAG,KACjD,OAAQ9F,EACHoU,IACK8B,EACE5B,EAAe8B,EAAsBD,GACrCrmB,KAAK6mB,KAAKD,GACVD,EACIN,EACArmB,KAAK8mB,KAAKF,IAClBD,CAAkB,CAElC,CACA,MAAM7a,EAAY,CACdib,mBAAoBhB,GAAyB/a,GAAmB,KAChEe,KAAOiK,IACH,MAAMtP,EAAU8f,EAAcxQ,GAC9B,GAAK+P,EAmBDloB,EAAMmO,KAAOgK,GAAKhL,MAnBO,CACzB,IAAIgc,EAAkB,EAMlBxC,EAAe,IACfwC,EACU,IAANhR,GACM,OAAsBoQ,GACtBvC,GAAsB2C,EAAexQ,EAAGtP,IAEtD,MAAMugB,EAA2BjnB,KAAK8W,IAAIkQ,IAAoBnB,EACxDqB,EAA+BlnB,KAAK8W,IAAI5G,EAASxJ,IAAYof,EACnEjoB,EAAMmO,KACFib,GAA4BC,CACpC,CAKA,OADArpB,EAAMY,MAAQZ,EAAMmO,KAAOkE,EAASxJ,EAC7B7I,CAAK,EAEhByG,SAAU,KACN,MAAMyiB,EAAqB/mB,KAAKW,KAAI,QAAsBmL,GAAY,MAChEO,GAAS,SAAsBnJ,GAAa4I,EAAUC,KAAKgb,EAAqB7jB,GAAUzE,OAAOsoB,EAAoB,IAC3H,OAAOA,EAAqB,MAAQ1a,CAAM,GAGlD,OAAOP,CACX,CChKA,SAASqb,IAAQ,UAAEnF,EAAS,SAAEvN,EAAW,EAAG,MAAE2S,EAAQ,GAAG,aAAEC,EAAe,IAAG,cAAEC,EAAgB,GAAE,gBAAEC,EAAkB,IAAG,aAAEC,EAAY,IAAE7mB,EAAG,IAAEC,EAAG,UAAEklB,EAAY,GAAG,UAAED,IAC/J,MAAM9E,EAASiB,EAAU,GACnBnkB,EAAQ,CACVmO,MAAM,EACNvN,MAAOsiB,GAGL0G,EAAmBvoB,QACT2D,IAARlC,EACOC,OACCiC,IAARjC,GAEGZ,KAAK8W,IAAInW,EAAMzB,GAAKc,KAAK8W,IAAIlW,EAAM1B,GAD/ByB,EAC0CC,EAEzD,IAAI8mB,EAAYN,EAAQ3S,EACxB,MAAMkT,EAAQ5G,EAAS2G,EACjBxX,OAA0BrN,IAAjB2kB,EAA6BG,EAAQH,EAAaG,GAK7DzX,IAAWyX,IACXD,EAAYxX,EAAS6Q,GACzB,MAAM6G,EAAa5R,IAAO0R,EAAY1nB,KAAK4kB,KAAK5O,EAAIqR,GAC9CQ,EAAc7R,GAAM9F,EAAS0X,EAAU5R,GACvC8R,EAAiB9R,IACnB,MAAMrN,EAAQif,EAAU5R,GAClB+R,EAASF,EAAW7R,GAC1BnY,EAAMmO,KAAOhM,KAAK8W,IAAInO,IAAUmd,EAChCjoB,EAAMY,MAAQZ,EAAMmO,KAAOkE,EAAS6X,CAAM,EAQ9C,IAAIC,EACAC,EACJ,MAAMC,EAAsBlS,IAjCN,IAAC9W,KAkCArB,EAAMY,WAlCSoE,IAARlC,GAAqBzB,EAAIyB,QAAiBkC,IAARjC,GAAqB1B,EAAI0B,KAoCrFonB,EAAsBhS,EACtBiS,EAAWvC,GAAO,CACd1D,UAAW,CAACnkB,EAAMY,MAAOgpB,EAAgB5pB,EAAMY,QAC/CgW,SAAUoP,GAAsBgE,EAAY7R,EAAGnY,EAAMY,OACrD0mB,QAASmC,EACTpC,UAAWqC,EACXzB,YACAD,cACF,EAGN,OADAqC,EAAmB,GACZ,CACHnB,mBAAoB,KACpBhb,KAAOiK,IAOH,IAAImS,GAAkB,EAUtB,OATKF,QAAoCplB,IAAxBmlB,IACbG,GAAkB,EAClBL,EAAc9R,GACdkS,EAAmBlS,SAMKnT,IAAxBmlB,GAAqChS,GAAKgS,EACnCC,EAASlc,KAAKiK,EAAIgS,KAGxBG,GAAmBL,EAAc9R,GAC3BnY,EACX,EAGZ,CClFA,MAAMkQ,GAAuBoI,EAAY,IAAM,EAAG,EAAG,GAC/CnI,GAAwBmI,EAAY,EAAG,EAAG,IAAM,GAChDlI,GAA0BkI,EAAY,IAAM,EAAG,IAAM,GCIrDiS,GAAe,CACjBva,OAAQvO,EAAA,EACRyO,OAAM,GACNE,UAAS,GACTD,QAAO,GACPE,OAAM,EACNsJ,UAAS,EACTrJ,QAAO,EACPC,OAAM,EACN+I,UAAS,EACT9I,QAAO,EACP+I,WAAU,GAERiR,GAA8B9T,IAChC,IAAI,QAAmBA,GAAa,EAEhC,QAAgC,IAAtBA,EAAWjT,OAAc,2DACnC,MAAOgnB,EAAIC,EAAIC,EAAIC,GAAMlU,EACzB,OAAO4B,EAAYmS,EAAIC,EAAIC,EAAIC,EACnC,CACK,MAA0B,iBAAflU,IAEZ,aAAuC1R,IAA7BulB,GAAa7T,GAA2B,wBAAwBA,MACnE6T,GAAa7T,IAEjBA,CAAU,E,0BCvBrB,SAASyN,IAAU,SAAEhX,EAAW,IAAKgX,UAAW0G,EAAc,MAAEC,EAAK,KAAE7a,EAAO,cAK1E,MAAM8a,ECfY,CAAC9a,GACZxB,MAAMC,QAAQuB,IAA4B,iBAAZA,EAAK,GDclB+a,CAAc/a,GAChCA,EAAKlI,IAAIyiB,IACTA,GAA2Bva,GAK3BjQ,EAAQ,CACVmO,MAAM,EACNvN,MAAOiqB,EAAe,IAKpBI,EE7BV,SAA8B/lB,EAAQiI,GAClC,OAAOjI,EAAO6C,KAAKmjB,GAAMA,EAAI/d,GACjC,CF2B0Bge,CAGtBL,GAASA,EAAMrnB,SAAWonB,EAAepnB,OACnCqnB,GACA,QAAcD,GAAiB1d,GAC/Bie,GAAoB,EAAAC,GAAA,GAAYJ,EAAeJ,EAAgB,CACjE5a,KAAMxB,MAAMC,QAAQqc,GACdA,GA9BSrkB,EA+BKmkB,EA/BGrc,EA+Bauc,EA9BjCrkB,EAAOqB,KAAI,IAAMyG,GAAU4B,KAAWxN,OAAO,EAAG8D,EAAOjD,OAAS,MAD3E,IAAuBiD,EAAQ8H,EAiC3B,MAAO,CACH0a,mBAAoB/b,EACpBe,KAAOiK,IACHnY,EAAMY,MAAQwqB,EAAkBjT,GAChCnY,EAAMmO,KAAOgK,GAAKhL,EACXnN,GAGnB,CG7CA,MAAMsrB,GAAmBC,IACrB,MAAMC,EAAgB,EAAGljB,eAAgBijB,EAAOjjB,GAChD,MAAO,CACH8C,MAAO,IAAM,KAAMmgB,OAAOC,GAAe,GACzCjhB,KAAM,KAAM,QAAYihB,GAKxBxjB,IAAK,IAAO,KAAUI,aAAe,KAAUE,UAAY,KAAKN,MACnE,ECACyjB,GAAa,CACfC,MAAOpC,GACPA,QAAO,GACPqC,MAAOxH,GACPA,UAAWA,GACX0D,OAAM,IAEJ+D,GAAqBC,GAAYA,EAAU,IAMjD,MAAMC,WAA4BvH,GAC9B,WAAAthB,CAAY+F,GACR+Z,MAAM/Z,GAIN9F,KAAK6oB,SAAW,KAIhB7oB,KAAK8oB,WAAa,KAIlB9oB,KAAKoG,YAAc,EAInBpG,KAAK+oB,cAAgB,EAMrB/oB,KAAKgpB,iBAAmB,UAIxBhpB,KAAKgK,UAAY,KACjBhK,KAAKlD,MAAQ,OAKbkD,KAAKqH,KAAO,KAGR,GAFArH,KAAK+c,SAASngB,SACdoD,KAAKyhB,WAAY,EACE,SAAfzhB,KAAKlD,MACL,OACJkD,KAAKipB,WACL,MAAM,OAAEC,GAAWlpB,KAAK8F,QACxBojB,GAAUA,GAAQ,EAEtB,MAAM,KAAErS,EAAI,YAAE/N,EAAW,QAAE2G,EAAO,UAAEwR,GAAcjhB,KAAK8F,QACjDqjB,GAAsB1Z,aAAyC,EAASA,EAAQmO,mBAAqBA,GAE3G5d,KAAK+c,SAAW,IAAIoM,EAAmBlI,GADpB,CAACG,EAAmBhD,IAAkBpe,KAAKgiB,oBAAoBZ,EAAmBhD,IACvCvH,EAAM/N,EAAa2G,GACjFzP,KAAK+c,SAASkB,iBAClB,CACA,OAAA7T,GACIyV,MAAMzV,UAEFpK,KAAK+hB,WACL1gB,OAAO+nB,OAAOppB,KAAK+hB,UAAW/hB,KAAK0iB,aAAa1iB,KAAK+hB,UAAUd,WAEvE,CACA,YAAAyB,CAAa2G,GACT,MAAM,KAAEpoB,EAAO,YAAW,OAAEigB,EAAS,EAAC,YAAEM,EAAc,EAAC,WAAEL,EAAU,SAAEzN,EAAW,GAAO1T,KAAK8F,QACtFwjB,GAAmB,QAAYroB,GAC/BA,EACAsnB,GAAWtnB,IAASggB,GAO1B,IAAIsI,EACAC,EACAF,IAAqBrI,IACK,iBAAnBoI,EAAY,KAInBE,GAAwB,EAAAnrB,GAAA,GAAKsqB,IAAmB,EAAAe,GAAA,GAAIJ,EAAY,GAAIA,EAAY,KAChFA,EAAc,CAAC,EAAG,MAEtB,MAAMte,EAAYue,EAAiB,IAAKtpB,KAAK8F,QAASmb,UAAWoI,IAK9C,WAAflI,IACAqI,EAAoBF,EAAiB,IAC9BtpB,KAAK8F,QACRmb,UAAW,IAAIoI,GAAaK,UAC5BhW,UAAWA,KAWkB,OAAjC3I,EAAUib,qBACVjb,EAAUib,oBAAqB,QAAsBjb,IAEzD,MAAM,mBAAEib,GAAuBjb,EACzB4e,EAAmB3D,EAAqBxE,EAE9C,MAAO,CACHzW,YACAye,oBACAD,wBACAvD,qBACA2D,mBACAC,cAPkBD,GAAoBzI,EAAS,GAAKM,EAS5D,CACA,cAAAmB,GACI,MAAM,SAAErB,GAAW,GAASthB,KAAK8F,QACjC9F,KAAKqK,OACyB,WAA1BrK,KAAKgpB,kBAAkC1H,EAIvCthB,KAAKlD,MAAQkD,KAAKgpB,iBAHlBhpB,KAAKsK,OAKb,CACA,IAAAuf,CAAKzkB,EAAW0kB,GAAS,GACrB,MAAM,SAAE5K,GAAalf,KAErB,IAAKkf,EAAU,CACX,MAAM,UAAE+B,GAAcjhB,KAAK8F,QAC3B,MAAO,CAAEmF,MAAM,EAAMvN,MAAOujB,EAAUA,EAAU1gB,OAAS,GAC7D,CACA,MAAM,cAAE6d,EAAa,UAAErT,EAAS,kBAAEye,EAAiB,sBAAED,EAAqB,UAAEtI,EAAS,mBAAE+E,EAAkB,cAAE4D,EAAa,iBAAED,GAAsBzK,EAChJ,GAAuB,OAAnBlf,KAAKgK,UACL,OAAOe,EAAUC,KAAK,GAC1B,MAAM,MAAEuW,EAAK,OAAEL,EAAM,WAAEC,EAAU,YAAEK,EAAW,SAAES,GAAajiB,KAAK8F,QAO9D9F,KAAK+J,MAAQ,EACb/J,KAAKgK,UAAY/K,KAAKW,IAAII,KAAKgK,UAAW5E,GAErCpF,KAAK+J,MAAQ,IAClB/J,KAAKgK,UAAY/K,KAAKW,IAAIwF,EAAYwkB,EAAgB5pB,KAAK+J,MAAO/J,KAAKgK,YAGvE8f,EACA9pB,KAAKoG,YAAchB,EAEI,OAAlBpF,KAAK6oB,SACV7oB,KAAKoG,YAAcpG,KAAK6oB,SAMxB7oB,KAAKoG,YACDnH,KAAKC,MAAMkG,EAAYpF,KAAKgK,WAAahK,KAAK+J,MAGtD,MAAMggB,EAAmB/pB,KAAKoG,YAAcmb,GAASvhB,KAAK+J,OAAS,EAAI,GAAK,GACtEigB,EAAiBhqB,KAAK+J,OAAS,EAC/BggB,EAAmB,EACnBA,EAAmBH,EACzB5pB,KAAKoG,YAAcnH,KAAKY,IAAIkqB,EAAkB,GAE3B,aAAf/pB,KAAKlD,OAA0C,OAAlBkD,KAAK6oB,WAClC7oB,KAAKoG,YAAcwjB,GAEvB,IAAIK,EAAUjqB,KAAKoG,YACf8jB,EAAiBnf,EACrB,GAAImW,EAAQ,CAMR,MAAM/e,EAAWlD,KAAKW,IAAII,KAAKoG,YAAawjB,GAAiBD,EAK7D,IAAIQ,EAAmBlrB,KAAKmrB,MAAMjoB,GAK9BkoB,EAAoBloB,EAAW,GAK9BkoB,GAAqBloB,GAAY,IAClCkoB,EAAoB,GAEF,IAAtBA,GAA2BF,IAC3BA,EAAmBlrB,KAAKW,IAAIuqB,EAAkBjJ,EAAS,GAIhC/f,QAAQgpB,EAAmB,KAE3B,YAAfhJ,GACAkJ,EAAoB,EAAIA,EACpB7I,IACA6I,GAAqB7I,EAAcmI,IAGnB,WAAfxI,IACL+I,EAAiBV,IAGzBS,GAAU,EAAAtqB,GAAA,GAAM,EAAG,EAAG0qB,GAAqBV,CAC/C,CAMA,MAAM7sB,EAAQktB,EACR,CAAE/e,MAAM,EAAOvN,MAAOujB,EAAU,IAChCiJ,EAAelf,KAAKif,GACtBV,IACAzsB,EAAMY,MAAQ6rB,EAAsBzsB,EAAMY,QAE9C,IAAI,KAAEuN,GAASnO,EACVktB,GAAyC,OAAvBhE,IACnB/a,EACIjL,KAAK+J,OAAS,EACR/J,KAAKoG,aAAewjB,EACpB5pB,KAAKoG,aAAe,GAElC,MAAMkkB,EAAwC,OAAlBtqB,KAAK6oB,WACb,aAAf7oB,KAAKlD,OAAwC,YAAfkD,KAAKlD,OAAuBmO,GAU/D,OATIqf,QAAyCxoB,IAAlBsc,IACvBthB,EAAMY,MAAQsjB,GAAiBC,EAAWjhB,KAAK8F,QAASsY,IAExD6D,GACAA,EAASnlB,EAAMY,OAEf4sB,GACAtqB,KAAKuqB,SAEFztB,CACX,CACA,YAAImN,GACA,MAAM,SAAEiV,GAAalf,KACrB,OAAOkf,GAAW,OAAsBA,EAAS8G,oBAAsB,CAC3E,CACA,QAAIhhB,GACA,OAAO,OAAsBhF,KAAKoG,YACtC,CACA,QAAIpB,CAAKM,GACLA,GAAU,OAAsBA,GAChCtF,KAAKoG,YAAcd,EACG,OAAlBtF,KAAK6oB,UAAoC,IAAf7oB,KAAK+J,MAC/B/J,KAAK6oB,SAAWvjB,EAEXtF,KAAKwqB,SACVxqB,KAAKgK,UAAYhK,KAAKwqB,OAAO1lB,MAAQQ,EAAUtF,KAAK+J,MAE5D,CACA,SAAIA,GACA,OAAO/J,KAAK+oB,aAChB,CACA,SAAIhf,CAAM0gB,GACN,MAAMC,EAAa1qB,KAAK+oB,gBAAkB0B,EAC1CzqB,KAAK+oB,cAAgB0B,EACjBC,IACA1qB,KAAKgF,MAAO,OAAsBhF,KAAKoG,aAE/C,CACA,IAAAiE,GAII,GAHKrK,KAAK+c,SAASJ,aACf3c,KAAK+c,SAAS0B,UAEbze,KAAK+hB,UAEN,YADA/hB,KAAKgpB,iBAAmB,WAG5B,GAAIhpB,KAAKyhB,UACL,OACJ,MAAM,OAAE+I,EAASpC,GAAe,OAAEuC,EAAM,UAAE3gB,GAAchK,KAAK8F,QACxD9F,KAAKwqB,SACNxqB,KAAKwqB,OAASA,GAAQplB,GAAcpF,KAAK6pB,KAAKzkB,MAElDulB,GAAUA,IACV,MAAM7lB,EAAM9E,KAAKwqB,OAAO1lB,MACF,OAAlB9E,KAAK6oB,SACL7oB,KAAKgK,UAAYlF,EAAM9E,KAAK6oB,SAEtB7oB,KAAKgK,UAGS,aAAfhK,KAAKlD,QACVkD,KAAKgK,UAAYlF,GAHjB9E,KAAKgK,UAAYA,QAA6CA,EAAYhK,KAAK6hB,gBAKhE,aAAf7hB,KAAKlD,OACLkD,KAAK4hB,wBAET5hB,KAAK8oB,WAAa9oB,KAAKgK,UACvBhK,KAAK6oB,SAAW,KAKhB7oB,KAAKlD,MAAQ,UACbkD,KAAKwqB,OAAOtiB,OAChB,CACA,KAAAoC,GACI,IAAI/F,EACCvE,KAAK+hB,WAIV/hB,KAAKlD,MAAQ,SACbkD,KAAK6oB,SAAuC,QAA3BtkB,EAAKvE,KAAKoG,mBAAgC,IAAP7B,EAAgBA,EAAK,GAJrEvE,KAAKgpB,iBAAmB,QAKhC,CACA,QAAAze,GACuB,YAAfvK,KAAKlD,OACLkD,KAAKqK,OAETrK,KAAKgpB,iBAAmBhpB,KAAKlD,MAAQ,WACrCkD,KAAK6oB,SAAW,IACpB,CACA,MAAA0B,GACIvqB,KAAKipB,WACLjpB,KAAKlD,MAAQ,WACb,MAAM,WAAEghB,GAAe9d,KAAK8F,QAC5BgY,GAAcA,GAClB,CACA,MAAAlhB,GAC4B,OAApBoD,KAAK8oB,YACL9oB,KAAK6pB,KAAK7pB,KAAK8oB,YAEnB9oB,KAAKipB,WACLjpB,KAAK4hB,uBACT,CACA,QAAAqH,GACIjpB,KAAKlD,MAAQ,OACbkD,KAAK4qB,aACL5qB,KAAKwiB,yBACLxiB,KAAK4hB,wBACL5hB,KAAKgK,UAAYhK,KAAK8oB,WAAa,KACnC9oB,KAAK+c,SAASngB,QAClB,CACA,UAAAguB,GACS5qB,KAAKwqB,SAEVxqB,KAAKwqB,OAAOnjB,OACZrH,KAAKwqB,YAAS1oB,EAClB,CACA,MAAAgoB,CAAO9kB,GAEH,OADAhF,KAAKgK,UAAY,EACVhK,KAAK6pB,KAAK7kB,GAAM,EAC3B,EC1XJ,MAAM6lB,GAAoB,IAAI3a,IAAI,CAC9B,UACA,WACA,SACA,cCLJ,MAAM4a,IAA8B,E,QAAA,IAAK,IAAMzpB,OAAOE,eAAeC,KAAKwM,QAAQ1M,UAAW,aCgE7F,MAAMypB,GAA6B,CAC/B1U,WAAU,EACVD,UAAS,EACTK,UAAS,GAKb,MAAMuU,WAA6B3J,GAC/B,WAAAthB,CAAY+F,GACR+Z,MAAM/Z,GACN,MAAM,KAAE+Q,EAAI,YAAE/N,EAAW,QAAE2G,EAAO,UAAEwR,GAAcjhB,KAAK8F,QACvD9F,KAAK+c,SAAW,IAAI6C,GAAqBqB,GAAW,CAACG,EAAmBhD,IAAkBpe,KAAKgiB,oBAAoBZ,EAAmBhD,IAAgBvH,EAAM/N,EAAa2G,GACzKzP,KAAK+c,SAASkB,iBAClB,CACA,YAAAyE,CAAazB,EAAW7C,GACpB,IAAI,SAAEnU,EAAW,IAAG,MAAE2d,EAAK,KAAE7a,EAAI,KAAE9L,EAAI,YAAE6H,EAAW,KAAE+N,EAAI,UAAE7M,GAAehK,KAAK8F,QAKhF,IAAKgD,EAAYlC,QAAUkC,EAAYlC,MAAMjB,QACzC,OAAO,EAjBnB,IA1CuCG,EA0E/B,GARoB,iBAATiH,IACP,WACkBA,KAzBZge,KA0BNhe,EAAOge,GAA2Bhe,IArEPjH,EA0EG9F,KAAK8F,SAzEnC,QAAYA,EAAQ7E,OACP,WAAjB6E,EAAQ7E,QACP,QAAuB6E,EAAQiH,MAuEiB,CAC7C,MAAM,WAAE+Q,EAAU,SAAEmE,EAAQ,YAAEnZ,EAAW,QAAE2G,KAAY3J,GAAY9F,KAAK8F,QAClEmlB,EAvElB,SAA8BhK,EAAWnb,GAMrC,MAAMolB,EAAkB,IAAItC,GAAoB,IACzC9iB,EACHmb,YACAC,OAAQ,EACRK,MAAO,EACPpW,aAAa,IAEjB,IAAIrO,EAAQ,CAAEmO,MAAM,EAAOvN,MAAOujB,EAAU,IAC5C,MAAMkK,EAAwB,GAK9B,IAAIlW,EAAI,EACR,MAAQnY,EAAMmO,MAAQgK,EA/BN,KAgCZnY,EAAQouB,EAAgBpB,OAAO7U,GAC/BkW,EAAsB5rB,KAAKzC,EAAMY,OACjCuX,GAvCY,GAyChB,MAAO,CACH2S,WAAO9lB,EACPmf,UAAWkK,EACXlhB,SAAUgL,EA5CE,GA6CZlI,KAAM,SAEd,CAwC0Cqe,CAAqBnK,EAAWnb,GAKrC,KAJzBmb,EAAYgK,EAAsBhK,WAIpB1gB,SACV0gB,EAAU,GAAKA,EAAU,IAE7BhX,EAAWghB,EAAsBhhB,SACjC2d,EAAQqD,EAAsBrD,MAC9B7a,EAAOke,EAAsBle,KAC7B9L,EAAO,WACX,CACA,MAAMqH,ECpHd,SAA6BmH,EAAS4b,EAAWpK,GAAW,MAAEM,EAAQ,EAAC,SAAEtX,EAAW,IAAG,OAAEiX,EAAS,EAAC,WAAEC,EAAa,OAAM,KAAEpU,EAAO,YAAW,MAAE6a,GAAW,CAAC,GACtJ,MAAM0D,EAAkB,CAAE,CAACD,GAAYpK,GACnC2G,IACA0D,EAAgBtpB,OAAS4lB,GAC7B,MAAMtc,GAAS,QAAwByB,EAAM9C,GAM7C,OAFIsB,MAAMC,QAAQF,KACdggB,EAAgBhgB,OAASA,GACtBmE,EAAQxD,QAAQqf,EAAiB,CACpC/J,QACAtX,WACAqB,OAASC,MAAMC,QAAQF,GAAmB,SAATA,EACjC6P,KAAM,OACNoQ,WAAYrK,EAAS,EACrBsK,UAA0B,YAAfrK,EAA2B,YAAc,UAE5D,CDkG0BsK,CAAoB3iB,EAAYlC,MAAMjB,QAASkR,EAAMoK,EAAW,IAAKjhB,KAAK8F,QAASmE,WAAU2d,QAAO7a,SAyBtH,OAtBAzE,EAAU0B,UAAYA,QAA6CA,EAAYhK,KAAK6hB,gBAChF7hB,KAAK0rB,kBACL,QAAepjB,EAAWtI,KAAK0rB,iBAC/B1rB,KAAK0rB,qBAAkB5pB,GAWvBwG,EAAU8C,SAAW,KACjB,MAAM,WAAE0S,GAAe9d,KAAK8F,QAC5BgD,EAAY7D,IAAI+b,GAAiBC,EAAWjhB,KAAK8F,QAASsY,IAC1DN,GAAcA,IACd9d,KAAKpD,SACLoD,KAAKwiB,wBAAwB,EAG9B,CACHla,YACA2B,WACA2d,QACA3mB,OACA8L,OACAkU,UAAWA,EAEnB,CACA,YAAIhX,GACA,MAAM,SAAEiV,GAAalf,KACrB,IAAKkf,EACD,OAAO,EACX,MAAM,SAAEjV,GAAaiV,EACrB,OAAO,OAAsBjV,EACjC,CACA,QAAIjF,GACA,MAAM,SAAEka,GAAalf,KACrB,IAAKkf,EACD,OAAO,EACX,MAAM,UAAE5W,GAAc4W,EACtB,OAAO,OAAsB5W,EAAUlC,aAAe,EAC1D,CACA,QAAIpB,CAAKM,GACL,MAAM,SAAE4Z,GAAalf,KACrB,IAAKkf,EACD,OACJ,MAAM,UAAE5W,GAAc4W,EACtB5W,EAAUlC,aAAc,OAAsBd,EAClD,CACA,SAAIyE,GACA,MAAM,SAAEmV,GAAalf,KACrB,IAAKkf,EACD,OAAO,EACX,MAAM,UAAE5W,GAAc4W,EACtB,OAAO5W,EAAUqjB,YACrB,CACA,SAAI5hB,CAAM0gB,GACN,MAAM,SAAEvL,GAAalf,KACrB,IAAKkf,EACD,OACJ,MAAM,UAAE5W,GAAc4W,EACtB5W,EAAUqjB,aAAelB,CAC7B,CACA,SAAI3tB,GACA,MAAM,SAAEoiB,GAAalf,KACrB,IAAKkf,EACD,MAAO,OACX,MAAM,UAAE5W,GAAc4W,EACtB,OAAO5W,EAAUsjB,SACrB,CACA,aAAI5hB,GACA,MAAM,SAAEkV,GAAalf,KACrB,IAAKkf,EACD,OAAO,KACX,MAAM,UAAE5W,GAAc4W,EAGtB,OAAO5W,EAAU0B,SACrB,CAKA,cAAAL,CAAeC,GACX,GAAK5J,KAAK+hB,UAGL,CACD,MAAM,SAAE7C,GAAalf,KACrB,IAAKkf,EACD,OAAO3gB,EAAA,EACX,MAAM,UAAE+J,GAAc4W,GACtB,QAAe5W,EAAWsB,EAC9B,MARI5J,KAAK0rB,gBAAkB9hB,EAS3B,OAAOrL,EAAA,CACX,CACA,IAAA8L,GACI,GAAIrK,KAAKyhB,UACL,OACJ,MAAM,SAAEvC,GAAalf,KACrB,IAAKkf,EACD,OACJ,MAAM,UAAE5W,GAAc4W,EACM,aAAxB5W,EAAUsjB,WACV5rB,KAAK4hB,wBAETtZ,EAAU+B,MACd,CACA,KAAAC,GACI,MAAM,SAAE4U,GAAalf,KACrB,IAAKkf,EACD,OACJ,MAAM,UAAE5W,GAAc4W,EACtB5W,EAAUgC,OACd,CACA,IAAAjD,GAGI,GAFArH,KAAK+c,SAASngB,SACdoD,KAAKyhB,WAAY,EACE,SAAfzhB,KAAKlD,MACL,OACJkD,KAAKwiB,yBACLxiB,KAAK4hB,wBACL,MAAM,SAAE1C,GAAalf,KACrB,IAAKkf,EACD,OACJ,MAAM,UAAE5W,EAAS,UAAE2Y,EAAS,SAAEhX,EAAQ,KAAEhJ,EAAI,KAAE8L,EAAI,MAAE6a,GAAU1I,EAC9D,GAA4B,SAAxB5W,EAAUsjB,WACc,aAAxBtjB,EAAUsjB,UACV,OAUJ,GAAI5rB,KAAKgF,KAAM,CACX,MAAM,YAAE8D,EAAW,SAAEmZ,EAAQ,WAAEnE,EAAU,QAAErO,KAAY3J,GAAY9F,KAAK8F,QAClEolB,EAAkB,IAAItC,GAAoB,IACzC9iB,EACHmb,YACAhX,WACAhJ,OACA8L,OACA6a,QACAzc,aAAa,IAEX0gB,GAAa,OAAsB7rB,KAAKgF,MAC9C8D,EAAYnB,gBAAgBujB,EAAgBpB,OAAO+B,EAhQ3C,IAgQqEnuB,MAAOwtB,EAAgBpB,OAAO+B,GAAYnuB,MAhQ/G,GAiQZ,CACA,MAAM,OAAEwrB,GAAWlpB,KAAK8F,QACxBojB,GAAUA,IACVlpB,KAAKpD,QACT,CACA,QAAA2N,GACI,MAAM,SAAE2U,GAAalf,KAChBkf,GAELA,EAAS5W,UAAUiiB,QACvB,CACA,MAAA3tB,GACI,MAAM,SAAEsiB,GAAalf,KAChBkf,GAELA,EAAS5W,UAAU1L,QACvB,CACA,eAAOkvB,CAAShmB,GACZ,MAAM,YAAEgD,EAAW,KAAE+N,EAAI,YAAE2K,EAAW,WAAEL,EAAU,QAAEiD,EAAO,KAAEnjB,GAAS6E,EACtE,KAAKgD,GACAA,EAAYlC,OACXkC,EAAYlC,MAAMjB,mBAAmBomB,aACvC,OAAO,EAEX,MAAM,SAAE9J,EAAQ,kBAAE+J,GAAsBljB,EAAYlC,MAAMiN,WAC1D,OAAQiX,MACJjU,GACAgU,GAAkBha,IAAIgG,KAKrBoL,IACA+J,IACAxK,GACc,WAAfL,GACY,IAAZiD,GACS,YAATnjB,CACR,EEvTJ,MAAMgrB,GAAoB,CACtBhrB,KAAM,SACNkjB,UAAW,IACXC,QAAS,GACTU,UAAW,IAQToH,GAAsB,CACxBjrB,KAAM,YACNgJ,SAAU,IAMR8C,GAAO,CACT9L,KAAM,YACN8L,KAAM,CAAC,IAAM,GAAK,IAAM,GACxB9C,SAAU,IAERkiB,GAAuB,CAACC,GAAYnL,eAClCA,EAAU1gB,OAAS,EACZ2rB,GAEFjY,EAAepD,IAAIub,GACjBA,EAAS9uB,WAAW,SAxBQ,CACvC2D,KAAM,SACNkjB,UAAW,IACXC,QAAoB,IAsBanD,EAAU,GAtBnB,EAAIhiB,KAAKolB,KAAK,KAAO,GAC7CS,UAAW,IAsBDmH,GAEHlf,GCzBX,MAAMsf,GAAqB,CAACxV,EAAMnZ,EAAOyR,EAAQvE,EAAa,CAAC,EAAG6E,EAAS6c,IAAexO,IACtF,MAAMyO,GAAkB,QAAmB3hB,EAAYiM,IAAS,CAAC,EAM3D0K,EAAQgL,EAAgBhL,OAAS3W,EAAW2W,OAAS,EAK3D,IAAI,QAAE0I,EAAU,GAAMrf,EACtBqf,IAAoB,OAAsB1I,GAC1C,IAAIzb,EAAU,CACVmb,UAAW1V,MAAMC,QAAQ2D,GAAUA,EAAS,CAAC,KAAMA,GACnDpC,KAAM,UACN2G,SAAUhW,EAAMuK,iBACbskB,EACHhL,OAAQ0I,EACRhI,SAAW9jB,IACPT,EAAMuH,IAAI9G,GACVouB,EAAgBtK,UAAYsK,EAAgBtK,SAAS9jB,EAAE,EAE3D2f,WAAY,KACRA,IACAyO,EAAgBzO,YAAcyO,EAAgBzO,YAAY,EAE9DjH,OACA/N,YAAapL,EACb+R,QAAS6c,OAAYxqB,EAAY2N,ICpCzC,UAA6B,KAAE+c,EAAMjL,MAAOkL,EAAM,cAAEC,EAAa,gBAAEC,EAAe,iBAAEC,EAAgB,OAAE1L,EAAM,WAAEC,EAAU,YAAEK,EAAW,KAAEpT,EAAI,QAAE6b,KAAYrf,IACrJ,QAASvJ,OAAOojB,KAAK7Z,GAAYrK,MACrC,EDwCSssB,CAAoBN,KACrBzmB,EAAU,IACHA,KACAqmB,GAAqBtV,EAAM/Q,KAQlCA,EAAQmE,WACRnE,EAAQmE,UAAW,OAAsBnE,EAAQmE,WAEjDnE,EAAQ0b,cACR1b,EAAQ0b,aAAc,OAAsB1b,EAAQ0b,mBAEnC1f,IAAjBgE,EAAQsI,OACRtI,EAAQmb,UAAU,GAAKnb,EAAQsI,MAEnC,IAAI0e,GAAa,EAmBjB,KAlBqB,IAAjBhnB,EAAQ7E,MACc,IAArB6E,EAAQmE,WAAmBnE,EAAQ0b,eACpC1b,EAAQmE,SAAW,EACG,IAAlBnE,EAAQyb,QACRuL,GAAa,KAGjB/X,GACA,IAAmBtP,kBACnBqnB,GAAa,EACbhnB,EAAQmE,SAAW,EACnBnE,EAAQyb,MAAQ,GAOhBuL,IAAeR,QAA6BxqB,IAAhBpE,EAAMqK,MAAqB,CACvD,MAAMqW,EAAgB4C,GAAiBlb,EAAQmb,UAAWsL,GAC1D,QAAsBzqB,IAAlBsc,EAOA,OANA,KAAMiK,QAAO,KACTviB,EAAQmc,SAAS7D,GACjBtY,EAAQgY,YAAY,IAIjB,IAAI,KAAsB,GAEzC,CAMA,OAAKwO,GAAatB,GAAqBc,SAAShmB,GACrC,IAAIklB,GAAqBllB,GAGzB,IAAI8iB,GAAoB9iB,EACnC,EE9FJ,SAASinB,IAAqB,cAAEC,EAAa,eAAEC,GAAkB5vB,GAC7D,MAAM6vB,EAAcF,EAAczrB,eAAelE,KAAgC,IAAxB4vB,EAAe5vB,GAExE,OADA4vB,EAAe5vB,IAAO,EACf6vB,CACX,CACA,SAASC,GAAc9Z,EAAe+Z,GAAqB,MAAE7L,EAAQ,EAAC,mBAAE8L,EAAkB,KAAEpsB,GAAS,CAAC,GAClG,IAAIsD,EACJ,IAAI,WAAEqG,EAAayI,EAAc8Y,uBAAsB,cAAEmB,KAAkBne,GAAWie,EAClFC,IACAziB,EAAayiB,GACjB,MAAMnkB,EAAa,GACbqkB,EAAqBtsB,GACvBoS,EAAcma,gBACdna,EAAcma,eAAeC,WAAWxsB,GAC5C,IAAK,MAAM5D,KAAO8R,EAAQ,CACtB,MAAMzR,EAAQ2V,EAAcgB,SAAShX,EAAgD,QAA1CkH,EAAK8O,EAAcqa,aAAarwB,UAAyB,IAAPkH,EAAgBA,EAAK,MAC5GopB,EAAcxe,EAAO9R,GAC3B,QAAoByE,IAAhB6rB,GACCJ,GACGR,GAAqBQ,EAAoBlwB,GAC7C,SAEJ,MAAMkvB,EAAkB,CACpBhL,YACG,QAAmB3W,GAAc,CAAC,EAAGvN,IAM5C,IAAIivB,GAAY,EAChB,GAAItjB,OAAO4kB,uBAAwB,CAC/B,MAAMC,EAAW/Y,EAAqBzB,GACtC,GAAIwa,EAAU,CACV,MAAM7jB,EAAYhB,OAAO4kB,uBAAuBC,EAAUxwB,EAAK,MAC7C,OAAd2M,IACAuiB,EAAgBviB,UAAYA,EAC5BsiB,GAAY,EAEpB,CACJ,CACA9X,EAAqBnB,EAAehW,GACpCK,EAAMwK,MAAMmkB,GAAmBhvB,EAAKK,EAAOiwB,EAAata,EAAcya,oBAAsB5Z,EAAerD,IAAIxT,GACzG,CAAE4D,MAAM,GACRsrB,EAAiBlZ,EAAeiZ,IACtC,MAAMhkB,EAAY5K,EAAM4K,UACpBA,GACAY,EAAW3J,KAAK+I,EAExB,CAQA,OAPIglB,GACAllB,QAAQkB,IAAIJ,GAAYV,MAAK,KACzB,KAAM6f,QAAO,KACTiF,GvDnDhB,SAAmBja,EAAeG,GAC9B,MAAM0L,EAAWtL,EAAeP,EAAeG,GAC/C,IAAI,cAAE8Z,EAAgB,CAAC,EAAC,WAAE1iB,EAAa,CAAC,KAAMuE,GAAW+P,GAAY,CAAC,EACtE/P,EAAS,IAAKA,KAAWme,GACzB,IAAK,MAAMjwB,KAAO8R,EAEdgF,EAAed,EAAehW,GwDjBAc,ExDgBagR,EAAO9R,GwDd/C2V,EAAkB7U,GAAKA,EAAEA,EAAEoC,OAAS,IAAM,EAAIpC,IAFpB,IAACA,CxDmBtC,CuD2CiC4vB,CAAU1a,EAAeia,EAAc,GAC1D,IAGHpkB,CACX,CErEA,SAAS8kB,GAAe3a,EAAe4a,EAASnoB,EAAU,CAAC,GACvD,IAAIvB,EACJ,MAAM2a,EAAWtL,EAAeP,EAAe4a,EAA0B,SAAjBnoB,EAAQ7E,KACjB,QAAxCsD,EAAK8O,EAAc6a,uBAAoC,IAAP3pB,OAAgB,EAASA,EAAGkP,YAC7E3R,GACN,IAAI,WAAE8I,EAAayI,EAAc8Y,wBAA0B,CAAC,GAAMjN,GAAY,CAAC,EAC3EpZ,EAAQunB,qBACRziB,EAAa9E,EAAQunB,oBAMzB,MAAMc,EAAejP,EACf,IAAM9W,QAAQkB,IAAI6jB,GAAc9Z,EAAe6L,EAAUpZ,IACzD,IAAMsC,QAAQC,UAKd+lB,EAAqB/a,EAAcgb,iBAAmBhb,EAAcgb,gBAAgBzT,KACpF,CAAC0T,EAAe,KACd,MAAM,cAAE5B,EAAgB,EAAC,gBAAEC,EAAe,iBAAEC,GAAsBhiB,EAClE,OAkBZ,SAAyByI,EAAe4a,EAASvB,EAAgB,EAAGC,EAAkB,EAAGC,EAAmB,EAAG9mB,GAC3G,MAAMoD,EAAa,GACbqlB,GAAsBlb,EAAcgb,gBAAgBzT,KAAO,GAAK+R,EAChE6B,EAA+C,IAArB5B,EAC1B,CAACpsB,EAAI,IAAMA,EAAImsB,EACf,CAACnsB,EAAI,IAAM+tB,EAAqB/tB,EAAImsB,EAU1C,OATAphB,MAAM6C,KAAKiF,EAAcgb,iBACpBI,KAAKC,IACL5kB,SAAQ,CAAC8F,EAAOpP,KACjBoP,EAAMxP,OAAO,iBAAkB6tB,GAC/B/kB,EAAW3J,KAAKyuB,GAAepe,EAAOqe,EAAS,IACxCnoB,EACHyb,MAAOmL,EAAgB8B,EAAwBhuB,KAChDgI,MAAK,IAAMoH,EAAMxP,OAAO,oBAAqB6tB,KAAU,IAEvD7lB,QAAQkB,IAAIJ,EACvB,CAlCmBylB,CAAgBtb,EAAe4a,EAASvB,EAAgB4B,EAAc3B,EAAiBC,EAAkB9mB,EAAQ,EAE1H,IAAMsC,QAAQC,WAKd,KAAEmkB,GAAS5hB,EACjB,GAAI4hB,EAAM,CACN,MAAOoC,EAAOC,GAAiB,mBAATrC,EAChB,CAAC2B,EAAcC,GACf,CAACA,EAAoBD,GAC3B,OAAOS,IAAQpmB,MAAK,IAAMqmB,KAC9B,CAEI,OAAOzmB,QAAQkB,IAAI,CAAC6kB,IAAgBC,EAAmBtoB,EAAQyb,QAEvE,CAkBA,SAASmN,GAAgBzwB,EAAGC,GACxB,OAAOD,EAAE6wB,iBAAiB5wB,EAC9B,CC5DA,MAAM6wB,GAAkBhb,EAAaxT,OACrC,SAASyuB,GAAkB3b,GACvB,IAAKA,EACD,OACJ,IAAKA,EAAc4b,sBAAuB,CACtC,MAAMC,EAAU7b,EAAc1D,QACxBqf,GAAkB3b,EAAc1D,SAChC,CAAC,EAIP,YAHoC7N,IAAhCuR,EAAcE,MAAM4b,UACpBD,EAAQC,QAAU9b,EAAcE,MAAM4b,SAEnCD,CACX,CACA,MAAMA,EAAU,CAAC,EACjB,IAAK,IAAI1uB,EAAI,EAAGA,EAAIuuB,GAAiBvuB,IAAK,CACtC,MAAMqW,EAAO9C,EAAavT,GACpB4uB,EAAO/b,EAAcE,MAAMsD,IAC7B1D,EAAeic,KAAkB,IAATA,KACxBF,EAAQrY,GAAQuY,EAExB,CACA,OAAOF,CACX,CChBA,MAAMG,GAAuB,IAAIvb,GAAsB4V,UACjD4F,GAAoBxb,EAAqBvT,OAC/C,SAASgvB,GAAYlc,GACjB,OAAQnK,GAAed,QAAQkB,IAAIJ,EAAWrE,KAAI,EAAGyD,YAAWxC,aCRpE,SAA8BuN,EAAeG,EAAY1N,EAAU,CAAC,GAEhE,IAAIwC,EACJ,GAFA+K,EAAcjT,OAAO,iBAAkBoT,GAEnCjI,MAAMC,QAAQgI,GAAa,CAC3B,MAAMtK,EAAasK,EAAW3O,KAAKopB,GAAYD,GAAe3a,EAAe4a,EAASnoB,KACtFwC,EAAYF,QAAQkB,IAAIJ,EAC5B,MACK,GAA0B,iBAAfsK,EACZlL,EAAY0lB,GAAe3a,EAAeG,EAAY1N,OAErD,CACD,MAAM0pB,EAA2C,mBAAfhc,EAC5BI,EAAeP,EAAeG,EAAY1N,EAAQ2N,QAClDD,EACNlL,EAAYF,QAAQkB,IAAI6jB,GAAc9Z,EAAemc,EAAoB1pB,GAC7E,CACA,OAAOwC,EAAUE,MAAK,KAClB6K,EAAcjT,OAAO,oBAAqBoT,EAAW,GAE7D,CDXkFic,CAAqBpc,EAAe/K,EAAWxC,KACjI,CACA,SAAS4pB,GAAqBrc,GAC1B,IAAIpH,EAAUsjB,GAAYlc,GACtBvW,EAAQ6yB,KACRC,GAAkB,EAKtB,MAAMC,EAA2B5uB,GAAS,CAAC6uB,EAAKtc,KAC5C,IAAIjP,EACJ,MAAM2a,EAAWtL,EAAeP,EAAeG,EAAqB,SAATvS,EACZ,QAAxCsD,EAAK8O,EAAc6a,uBAAoC,IAAP3pB,OAAgB,EAASA,EAAGkP,YAC7E3R,GACN,GAAIod,EAAU,CACV,MAAM,WAAEtU,EAAU,cAAE0iB,KAAkBne,GAAW+P,EACjD4Q,EAAM,IAAKA,KAAQ3gB,KAAWme,EAClC,CACA,OAAOwC,CAAG,EAmBd,SAASC,EAAeC,GACpB,MAAM,MAAEzc,GAAUF,EACZ6b,EAAUF,GAAkB3b,EAAc1D,SAAW,CAAC,EAKtDzG,EAAa,GAKb+mB,EAAc,IAAI/f,IAMxB,IAAIggB,EAAkB,CAAC,EAKnBC,EAAsBjlB,IAO1B,IAAK,IAAI1K,EAAI,EAAGA,EAAI8uB,GAAmB9uB,IAAK,CACxC,MAAMS,EAAOouB,GAAqB7uB,GAC5B4vB,EAAYtzB,EAAMmE,GAClBmuB,OAAuBttB,IAAhByR,EAAMtS,GACbsS,EAAMtS,GACNiuB,EAAQjuB,GACRovB,EAAgBld,EAAeic,GAK/BkB,EAAcrvB,IAAS+uB,EAAoBI,EAAUG,SAAW,MAClD,IAAhBD,IACAH,EAAsB3vB,GAO1B,IAAIgwB,EAAcpB,IAASF,EAAQjuB,IAC/BmuB,IAAS7b,EAAMtS,IACfovB,EAeJ,GAXIG,GACAZ,GACAvc,EAAcod,yBACdD,GAAc,GAMlBJ,EAAUpD,cAAgB,IAAKkD,IAI7BE,EAAUG,UAA4B,OAAhBD,IAElBlB,IAASgB,EAAUM,UAErB3d,EAAoBqc,IACJ,kBAATA,EACP,SAOJ,MAAMuB,EAAmBC,GAAuBR,EAAUM,SAAUtB,GACpE,IAAIyB,EAAoBF,GAEnB1vB,IAAS+uB,GACNI,EAAUG,WACTC,GACDH,GAEH7vB,EAAI2vB,GAAuBE,EAC5BS,GAAuB,EAK3B,MAAMC,EAAiBxlB,MAAMC,QAAQ4jB,GAAQA,EAAO,CAACA,GAKrD,IAAI4B,EAAiBD,EAAezyB,OAAOuxB,EAAwB5uB,GAAO,CAAC,IACvD,IAAhBqvB,IACAU,EAAiB,CAAC,GAUtB,MAAM,mBAAEC,EAAqB,CAAC,GAAMb,EAC9Bc,EAAU,IACTD,KACAD,GAEDG,EAAiB9zB,IACnBwzB,GAAoB,EAChBZ,EAAYpf,IAAIxT,KAChByzB,GAAuB,EACvBb,EAAYte,OAAOtU,IAEvB+yB,EAAUnD,eAAe5vB,IAAO,EAChC,MAAMyL,EAAcuK,EAAcgB,SAAShX,GACvCyL,IACAA,EAAYsoB,WAAY,EAAK,EAErC,IAAK,MAAM/zB,KAAO6zB,EAAS,CACvB,MAAMlmB,EAAOgmB,EAAe3zB,GACtBkJ,EAAO0qB,EAAmB5zB,GAEhC,GAAI6yB,EAAgB3uB,eAAelE,GAC/B,SAIJ,IAAIg0B,GAAkB,EAElBA,EADAre,EAAkBhI,IAASgI,EAAkBzM,IAC1B0M,EAAejI,EAAMzE,GAGtByE,IAASzE,EAE3B8qB,EACIrmB,QAEAmmB,EAAc9zB,GAId4yB,EAAY/vB,IAAI7C,QAGNyE,IAATkJ,GAAsBilB,EAAYpf,IAAIxT,GAK3C8zB,EAAc9zB,GAOd+yB,EAAUpD,cAAc3vB,IAAO,CAEvC,CAKA+yB,EAAUM,SAAWtB,EACrBgB,EAAUa,mBAAqBD,EAI3BZ,EAAUG,WACVL,EAAkB,IAAKA,KAAoBc,IAE3CpB,GAAmBvc,EAAcie,wBACjCT,GAAoB,GAQpBA,MAFyBL,GAAeG,IACIG,IAE5C5nB,EAAW3J,QAAQwxB,EAAelsB,KAAKyD,IAAc,CACjDA,UAAWA,EACXxC,QAAS,CAAE7E,YAGvB,CAMA,GAAIgvB,EAAYrV,KAAM,CAClB,MAAM2W,EAAoB,CAAC,EAC3BtB,EAAYnmB,SAASzM,IACjB,MAAMm0B,EAAiBne,EAAcoe,cAAcp0B,GAC7CyL,EAAcuK,EAAcgB,SAAShX,GACvCyL,IACAA,EAAYsoB,WAAY,GAE5BG,EAAkBl0B,GAAOm0B,QAAuDA,EAAiB,IAAI,IAEzGtoB,EAAW3J,KAAK,CAAE+I,UAAWipB,GACjC,CACA,IAAIG,EAAgBvwB,QAAQ+H,EAAW3I,QAOvC,OANIqvB,IACmB,IAAlBrc,EAAM4b,SAAqB5b,EAAM4b,UAAY5b,EAAMtH,SACnDoH,EAAcod,yBACfiB,GAAgB,GAEpB9B,GAAkB,EACX8B,EAAgBzlB,EAAQ/C,GAAcd,QAAQC,SACzD,CAkBA,MAAO,CACH0nB,iBACA4B,UAhBJ,SAAmB1wB,EAAMsvB,GACrB,IAAIhsB,EAEJ,GAAIzH,EAAMmE,GAAMsvB,WAAaA,EACzB,OAAOnoB,QAAQC,UAEsB,QAAxC9D,EAAK8O,EAAcgb,uBAAoC,IAAP9pB,GAAyBA,EAAGuF,SAAS8F,IAAY,IAAIrL,EAAI,OAAuC,QAA/BA,EAAKqL,EAAM4d,sBAAmC,IAAPjpB,OAAgB,EAASA,EAAGotB,UAAU1wB,EAAMsvB,EAAS,IAC9MzzB,EAAMmE,GAAMsvB,SAAWA,EACvB,MAAMrnB,EAAa6mB,EAAe9uB,GAClC,IAAK,MAAM5D,KAAOP,EACdA,EAAMO,GAAK2vB,cAAgB,CAAC,EAEhC,OAAO9jB,CACX,EAII0oB,mBAjQJ,SAA4BC,GACxB5lB,EAAU4lB,EAAaxe,EAC3B,EAgQIoa,SAAU,IAAM3wB,EAChBg1B,MAAO,KACHh1B,EAAQ6yB,KACRC,GAAkB,CAAI,EAGlC,CACA,SAASgB,GAAuBrqB,EAAMyE,GAClC,MAAoB,iBAATA,EACAA,IAASzE,IAEXgF,MAAMC,QAAQR,KACXiI,EAAejI,EAAMzE,EAGrC,CACA,SAASwrB,GAAgBxB,GAAW,GAChC,MAAO,CACHA,WACAvD,cAAe,CAAC,EAChBC,eAAgB,CAAC,EACjBgE,mBAAoB,CAAC,EAE7B,CACA,SAAStB,KACL,MAAO,CACH1jB,QAAS8lB,IAAgB,GACzBC,YAAaD,KACbE,WAAYF,KACZG,SAAUH,KACVI,UAAWJ,KACXK,WAAYL,KACZM,KAAMN,KAEd,CEzUA,MAAMO,GACF,WAAAvyB,CAAYwyB,GACRvyB,KAAKwyB,WAAY,EACjBxyB,KAAKuyB,KAAOA,CAChB,CACA,MAAAlK,GAAW,ECHf,IAAIoK,GAAK,ECCT,MAAMvpB,GAAa,CACfZ,UAAW,CACPgqB,QCDR,cAA+BA,GAM3B,WAAAvyB,CAAYwyB,GACR1S,MAAM0S,GACNA,EAAK/E,iBAAmB+E,EAAK/E,eAAiBkC,GAAqB6C,GACvE,CACA,mCAAAG,GACI,MAAM,QAAEzmB,GAAYjM,KAAKuyB,KAAK1e,WAC1Bd,EAAoB9G,KACpBjM,KAAK2yB,gBAAkB1mB,EAAQ2mB,UAAU5yB,KAAKuyB,MAEtD,CAIA,KAAAM,GACI7yB,KAAK0yB,qCACT,CACA,MAAArK,GACI,MAAM,QAAEpc,GAAYjM,KAAKuyB,KAAK1e,YACtB5H,QAAS6mB,GAAgB9yB,KAAKuyB,KAAKQ,WAAa,CAAC,EACrD9mB,IAAY6mB,GACZ9yB,KAAK0yB,qCAEb,CACA,OAAAM,GACI,IAAIzuB,EACJvE,KAAKuyB,KAAK/E,eAAesE,QACO,QAA/BvtB,EAAKvE,KAAK2yB,uBAAoC,IAAPpuB,GAAyBA,EAAG/C,KAAKxB,KAC7E,ID9BAqyB,KAAM,CACFC,QDLR,cAAmCA,GAC/B,WAAAvyB,GACI8f,SAASoT,WACTjzB,KAAKyyB,GAAKA,IACd,CACA,MAAApK,GACI,IAAKroB,KAAKuyB,KAAKrE,gBACX,OACJ,MAAM,UAAEgF,EAAS,eAAEC,GAAmBnzB,KAAKuyB,KAAKrE,iBACxCgF,UAAWE,GAAkBpzB,KAAKuyB,KAAKc,qBAAuB,CAAC,EACvE,IAAKrzB,KAAKuyB,KAAK/E,gBAAkB0F,IAAcE,EAC3C,OAEJ,MAAME,EAAgBtzB,KAAKuyB,KAAK/E,eAAemE,UAAU,QAASuB,GAC9DC,IAAmBD,GACnBI,EAAc9qB,MAAK,IAAM2qB,EAAenzB,KAAKyyB,KAErD,CACA,KAAAI,GACI,MAAM,SAAEU,GAAavzB,KAAKuyB,KAAKrE,iBAAmB,CAAC,EAC/CqF,IACAvzB,KAAKgzB,QAAUO,EAASvzB,KAAKyyB,IAErC,CACA,OAAAO,GAAY,KG3BhB,SAASQ,GAAYrkB,EAAQjI,EAAW/G,EAAS2F,EAAU,CAAE0I,SAAS,IAElE,OADAW,EAAOK,iBAAiBtI,EAAW/G,EAAS2F,GACrC,IAAMqJ,EAAOI,oBAAoBrI,EAAW/G,EACvD,CCDA,SAASszB,GAAiB7kB,GACtB,MAAO,CACH8kB,MAAO,CACHjmB,EAAGmB,EAAM+kB,MACTjmB,EAAGkB,EAAMglB,OAGrB,CCNA,SAASC,GAAgB1kB,EAAQjI,EAAW/G,EAAS2F,GACjD,OAAO0tB,GAAYrkB,EAAQjI,EDMR,CAAC/G,GACZyO,IAAU,QAAiBA,IAAUzO,EAAQyO,EAAO6kB,GAAiB7kB,ICPvCklB,CAAe3zB,GAAU2F,EACnE,CCLA,MAAMkU,GAAW,CAAC/b,EAAGC,IAAMe,KAAK8W,IAAI9X,EAAIC,GCWxC,MAAM61B,GACF,WAAAh0B,CAAY6O,EAAOolB,GAAU,mBAAEC,EAAkB,cAAEC,EAAa,iBAAEC,GAAmB,GAAW,CAAC,GAgE7F,GA5DAn0B,KAAKoR,WAAa,KAIlBpR,KAAKo0B,cAAgB,KAIrBp0B,KAAKq0B,kBAAoB,KAIzBr0B,KAAKg0B,SAAW,CAAC,EAIjBh0B,KAAKk0B,cAAgBlrB,OACrBhJ,KAAKs0B,YAAc,KACf,IAAMt0B,KAAKo0B,gBAAiBp0B,KAAKq0B,kBAC7B,OACJ,MAAME,EAAOC,GAAWx0B,KAAKq0B,kBAAmBr0B,KAAKy0B,SAC/CC,EAAmC,OAApB10B,KAAKoR,WAIpBujB,EDxClB,SAAoB12B,EAAGC,GAEnB,MAAM02B,EAAS5a,GAAS/b,EAAEwP,EAAGvP,EAAEuP,GACzBonB,EAAS7a,GAAS/b,EAAEyP,EAAGxP,EAAEwP,GAC/B,OAAOzO,KAAKolB,KAAKuQ,GAAU,EAAIC,GAAU,EAC7C,CCmC4CC,CAAWP,EAAKvyB,OAAQ,CAAEyL,EAAG,EAAGC,EAAG,KAAQ,EAC3E,IAAKgnB,IAAiBC,EAClB,OACJ,MAAM,MAAEjB,GAAUa,GACZ,UAAEnvB,GAAc,KACtBpF,KAAKy0B,QAAQl1B,KAAK,IAAKm0B,EAAOtuB,cAC9B,MAAM,QAAE2vB,EAAO,OAAEC,GAAWh1B,KAAKg0B,SAC5BU,IACDK,GAAWA,EAAQ/0B,KAAKo0B,cAAeG,GACvCv0B,KAAKoR,WAAapR,KAAKo0B,eAE3BY,GAAUA,EAAOh1B,KAAKo0B,cAAeG,EAAK,EAE9Cv0B,KAAKi1B,kBAAoB,CAACrmB,EAAO2lB,KAC7Bv0B,KAAKo0B,cAAgBxlB,EACrB5O,KAAKq0B,kBAAoBa,GAAeX,EAAMv0B,KAAKi0B,oBAEnD,KAAM5L,OAAOroB,KAAKs0B,aAAa,EAAK,EAExCt0B,KAAKm1B,gBAAkB,CAACvmB,EAAO2lB,KAC3Bv0B,KAAKo1B,MACL,MAAM,MAAEC,EAAK,aAAEC,EAAY,gBAAEC,GAAoBv1B,KAAKg0B,SAGtD,GAFIh0B,KAAKm0B,kBACLoB,GAAmBA,KACjBv1B,KAAKo0B,gBAAiBp0B,KAAKq0B,kBAC7B,OACJ,MAAMmB,EAAUhB,GAA0B,kBAAf5lB,EAAM3N,KAC3BjB,KAAKq0B,kBACLa,GAAeX,EAAMv0B,KAAKi0B,oBAAqBj0B,KAAKy0B,SACtDz0B,KAAKoR,YAAcikB,GACnBA,EAAMzmB,EAAO4mB,GAEjBF,GAAgBA,EAAa1mB,EAAO4mB,EAAQ,IAG3C,QAAiB5mB,GAClB,OACJ5O,KAAKm0B,iBAAmBA,EACxBn0B,KAAKg0B,SAAWA,EAChBh0B,KAAKi0B,mBAAqBA,EAC1Bj0B,KAAKk0B,cAAgBA,GAAiBlrB,OACtC,MACMysB,EAAcP,GADPzB,GAAiB7kB,GACW5O,KAAKi0B,qBACxC,MAAEP,GAAU+B,GACZ,UAAErwB,GAAc,KACtBpF,KAAKy0B,QAAU,CAAC,IAAKf,EAAOtuB,cAC5B,MAAM,eAAEswB,GAAmB1B,EAC3B0B,GACIA,EAAe9mB,EAAO4lB,GAAWiB,EAAaz1B,KAAKy0B,UACvDz0B,KAAK21B,iBAAkB,EAAAv3B,GAAA,GAAKy1B,GAAgB7zB,KAAKk0B,cAAe,cAAel0B,KAAKi1B,mBAAoBpB,GAAgB7zB,KAAKk0B,cAAe,YAAal0B,KAAKm1B,iBAAkBtB,GAAgB7zB,KAAKk0B,cAAe,gBAAiBl0B,KAAKm1B,iBAC9O,CACA,cAAAS,CAAe5B,GACXh0B,KAAKg0B,SAAWA,CACpB,CACA,GAAAoB,GACIp1B,KAAK21B,iBAAmB31B,KAAK21B,mBAC7B,QAAY31B,KAAKs0B,YACrB,EAEJ,SAASY,GAAeX,EAAMN,GAC1B,OAAOA,EAAqB,CAAEP,MAAOO,EAAmBM,EAAKb,QAAWa,CAC5E,CACA,SAASsB,GAAc53B,EAAGC,GACtB,MAAO,CAAEuP,EAAGxP,EAAEwP,EAAIvP,EAAEuP,EAAGC,EAAGzP,EAAEyP,EAAIxP,EAAEwP,EACtC,CACA,SAAS8mB,IAAW,MAAEd,GAASe,GAC3B,MAAO,CACHf,QACA9rB,MAAOiuB,GAAcnC,EAAOoC,GAAgBrB,IAC5CzyB,OAAQ6zB,GAAcnC,EAAOqC,GAAiBtB,IAC9C/gB,SAAUzL,GAAYwsB,EAAS,IAEvC,CACA,SAASsB,GAAiBtB,GACtB,OAAOA,EAAQ,EACnB,CACA,SAASqB,GAAgBrB,GACrB,OAAOA,EAAQA,EAAQl0B,OAAS,EACpC,CACA,SAAS0H,GAAYwsB,EAASuB,GAC1B,GAAIvB,EAAQl0B,OAAS,EACjB,MAAO,CAAEkN,EAAG,EAAGC,EAAG,GAEtB,IAAIlN,EAAIi0B,EAAQl0B,OAAS,EACrB01B,EAAmB,KACvB,MAAMC,EAAYJ,GAAgBrB,GAClC,KAAOj0B,GAAK,IACRy1B,EAAmBxB,EAAQj0B,KACvB01B,EAAU9wB,UAAY6wB,EAAiB7wB,WACvC,OAAsB4wB,MAG1Bx1B,IAEJ,IAAKy1B,EACD,MAAO,CAAExoB,EAAG,EAAGC,EAAG,GAEtB,MAAM1I,GAAO,OAAsBkxB,EAAU9wB,UAAY6wB,EAAiB7wB,WAC1E,GAAa,IAATJ,EACA,MAAO,CAAEyI,EAAG,EAAGC,EAAG,GAEtB,MAAMuY,EAAkB,CACpBxY,GAAIyoB,EAAUzoB,EAAIwoB,EAAiBxoB,GAAKzI,EACxC0I,GAAIwoB,EAAUxoB,EAAIuoB,EAAiBvoB,GAAK1I,GAQ5C,OANIihB,EAAgBxY,IAAMvC,MACtB+a,EAAgBxY,EAAI,GAEpBwY,EAAgBvY,IAAMxC,MACtB+a,EAAgBvY,EAAI,GAEjBuY,CACX,CCzJA,SAASkQ,GAAYC,GACjB,OAAQA,GACW,iBAARA,GACP/0B,OAAOC,UAAUC,eAAeC,KAAK40B,EAAK,UAClD,C,0BCIA,SAASC,GAAWjkB,GAChB,OAAOA,EAAKvS,IAAMuS,EAAKxS,GAC3B,CAIA,SAAS02B,GAAc1uB,EAAO3D,EAAQkL,EAAQ6Q,EAAS,IACnDpY,EAAMoY,OAASA,EACfpY,EAAM2uB,aAAc,QAAUtyB,EAAOrE,IAAKqE,EAAOpE,IAAK+H,EAAMoY,QAC5DpY,EAAM/G,MAAQw1B,GAAWlnB,GAAUknB,GAAWpyB,GAC9C2D,EAAM4uB,WACF,QAAUrnB,EAAOvP,IAAKuP,EAAOtP,IAAK+H,EAAMoY,QAAUpY,EAAM2uB,aACvD3uB,EAAM/G,OAjBG,OAiBmB+G,EAAM/G,OAhBzB,QAiBV4D,MAAMmD,EAAM/G,UACZ+G,EAAM/G,MAAQ,IAEb+G,EAAM4uB,YAlBO,KAmBd5uB,EAAM4uB,WAlBQ,KAmBd/xB,MAAMmD,EAAM4uB,cACZ5uB,EAAM4uB,UAAY,EAE1B,CACA,SAASC,GAAa7uB,EAAO3D,EAAQkL,EAAQ6Q,GACzCsW,GAAc1uB,EAAM6F,EAAGxJ,EAAOwJ,EAAG0B,EAAO1B,EAAGuS,EAASA,EAAOzF,aAAUzY,GACrEw0B,GAAc1uB,EAAM8F,EAAGzJ,EAAOyJ,EAAGyB,EAAOzB,EAAGsS,EAASA,EAAOxF,aAAU1Y,EACzE,CACA,SAAS40B,GAAiBvnB,EAAQwnB,EAAUhnB,GACxCR,EAAOvP,IAAM+P,EAAO/P,IAAM+2B,EAAS/2B,IACnCuP,EAAOtP,IAAMsP,EAAOvP,IAAMy2B,GAAWM,EACzC,CAKA,SAASC,GAAyBznB,EAAQ0nB,EAAQlnB,GAC9CR,EAAOvP,IAAMi3B,EAAOj3B,IAAM+P,EAAO/P,IACjCuP,EAAOtP,IAAMsP,EAAOvP,IAAMy2B,GAAWQ,EACzC,CACA,SAASC,GAAqB3nB,EAAQ0nB,EAAQlnB,GAC1CinB,GAAyBznB,EAAO1B,EAAGopB,EAAOppB,EAAGkC,EAAOlC,GACpDmpB,GAAyBznB,EAAOzB,EAAGmpB,EAAOnpB,EAAGiC,EAAOjC,EACxD,CCnBA,SAASqpB,GAA4B3kB,EAAMxS,EAAKC,GAC5C,MAAO,CACHD,SAAakC,IAARlC,EAAoBwS,EAAKxS,IAAMA,OAAMkC,EAC1CjC,SAAaiC,IAARjC,EACCuS,EAAKvS,IAAMA,GAAOuS,EAAKvS,IAAMuS,EAAKxS,UAClCkC,EAEd,CAcA,SAASk1B,GAA4BC,EAAYC,GAC7C,IAAIt3B,EAAMs3B,EAAgBt3B,IAAMq3B,EAAWr3B,IACvCC,EAAMq3B,EAAgBr3B,IAAMo3B,EAAWp3B,IAO3C,OAJIq3B,EAAgBr3B,IAAMq3B,EAAgBt3B,IACtCq3B,EAAWp3B,IAAMo3B,EAAWr3B,OAC3BA,EAAKC,GAAO,CAACA,EAAKD,IAEhB,CAAEA,MAAKC,MAClB,CAuCA,MAAMs3B,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACH33B,IAAK43B,GAAoBH,EAAaC,GACtCz3B,IAAK23B,GAAoBH,EAAaE,GAE9C,CACA,SAASC,GAAoBH,EAAaI,GACtC,MAA8B,iBAAhBJ,EACRA,EACAA,EAAYI,IAAU,CAChC,CC9HA,MAWMC,GAAY,KAAM,CACpBjqB,EAFqB,CAAG7N,IAAK,EAAGC,IAAK,GAGrC6N,EAHqB,CAAG9N,IAAK,EAAGC,IAAK,KCVzC,SAAS83B,GAAS/0B,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACpC,CCGA,SAASg1B,IAAwB,IAAEvf,EAAG,KAAEG,EAAI,MAAEF,EAAK,OAAEC,IACjD,MAAO,CACH9K,EAAG,CAAE7N,IAAK4Y,EAAM3Y,IAAKyY,GACrB5K,EAAG,CAAE9N,IAAKyY,EAAKxY,IAAK0Y,GAE5B,CCVA,SAASsf,GAAgBh3B,GACrB,YAAiBiB,IAAVjB,GAAiC,IAAVA,CAClC,CACA,SAASi3B,IAAS,MAAEj3B,EAAK,OAAE6Y,EAAM,OAAEC,IAC/B,OAASke,GAAgBh3B,KACpBg3B,GAAgBne,KAChBme,GAAgBle,EACzB,CACA,SAASoe,GAAav0B,GAClB,OAAQs0B,GAASt0B,IACbw0B,GAAex0B,IACfA,EAAO4W,GACP5W,EAAO8V,QACP9V,EAAO+V,SACP/V,EAAOgW,SACPhW,EAAOsW,OACPtW,EAAOuW,KACf,CACA,SAASie,GAAex0B,GACpB,OAAOy0B,GAAcz0B,EAAOiK,IAAMwqB,GAAcz0B,EAAOkK,EAC3D,CACA,SAASuqB,GAAcv6B,GACnB,OAAOA,GAAmB,OAAVA,CACpB,CCjBA,SAASw6B,GAAWxE,EAAO7yB,EAAO01B,GAG9B,OAAOA,EADQ11B,GADY6yB,EAAQ6C,EAGvC,CAIA,SAAS4B,GAAgBzE,EAAO8C,EAAW31B,EAAO01B,EAAa6B,GAI3D,YAHiBt2B,IAAbs2B,IACA1E,EAAQwE,GAAWxE,EAAO0E,EAAU7B,IAEjC2B,GAAWxE,EAAO7yB,EAAO01B,GAAeC,CACnD,CAIA,SAAS6B,GAAejmB,EAAMokB,EAAY,EAAG31B,EAAQ,EAAG01B,EAAa6B,GACjEhmB,EAAKxS,IAAMu4B,GAAgB/lB,EAAKxS,IAAK42B,EAAW31B,EAAO01B,EAAa6B,GACpEhmB,EAAKvS,IAAMs4B,GAAgB/lB,EAAKvS,IAAK22B,EAAW31B,EAAO01B,EAAa6B,EACxE,CAIA,SAASE,GAAcC,GAAK,EAAE9qB,EAAC,EAAEC,IAC7B2qB,GAAeE,EAAI9qB,EAAGA,EAAE+oB,UAAW/oB,EAAE5M,MAAO4M,EAAE8oB,aAC9C8B,GAAeE,EAAI7qB,EAAGA,EAAE8oB,UAAW9oB,EAAE7M,MAAO6M,EAAE6oB,YAClD,CACA,MAAMiC,GAAsB,cACtBC,GAAsB,gBA6D5B,SAASC,GAActmB,EAAM4H,GACzB5H,EAAKxS,IAAMwS,EAAKxS,IAAMoa,EACtB5H,EAAKvS,IAAMuS,EAAKvS,IAAMma,CAC1B,CAMA,SAAS2e,GAAcvmB,EAAMwmB,EAAeC,EAAWT,EAAUU,EAAa,IAG1ET,GAAejmB,EAAMwmB,EAAeC,GAFhB,QAAUzmB,EAAKxS,IAAKwS,EAAKvS,IAAKi5B,GAEUV,EAChE,CAIA,SAASW,GAAaR,EAAK55B,GACvBg6B,GAAcJ,EAAI9qB,EAAG9O,EAAU8O,EAAG9O,EAAU+a,OAAQ/a,EAAUkC,MAAOlC,EAAU4b,SAC/Eoe,GAAcJ,EAAI7qB,EAAG/O,EAAU+O,EAAG/O,EAAUgb,OAAQhb,EAAUkC,MAAOlC,EAAU6b,QACnF,CCjHA,SAASiG,GAAmBuY,EAAU9D,GAClC,OAAO0C,GHeX,SAA4BlE,EAAOwB,GAC/B,IAAKA,EACD,OAAOxB,EACX,MAAMuF,EAAU/D,EAAe,CAAEznB,EAAGimB,EAAMlb,KAAM9K,EAAGgmB,EAAMrb,MACnD6gB,EAAchE,EAAe,CAAEznB,EAAGimB,EAAMpb,MAAO5K,EAAGgmB,EAAMnb,SAC9D,MAAO,CACHF,IAAK4gB,EAAQvrB,EACb8K,KAAMygB,EAAQxrB,EACd8K,OAAQ2gB,EAAYxrB,EACpB4K,MAAO4gB,EAAYzrB,EAE3B,CG1BmC0rB,CAAmBH,EAASI,wBAAyBlE,GACxF,CCJA,MAAMmE,GAAmB,EAAG1zB,aACjBA,EAAUA,EAAQ2zB,cAAcC,YAAc,KCkBnDC,GAAsB,IAAIC,QAKhC,MAAMC,GACF,WAAA35B,CAAYsT,GACRrT,KAAK25B,aAAe,KACpB35B,KAAKwN,YAAa,EAClBxN,KAAK45B,iBAAmB,KACxB55B,KAAKu2B,YAAc,CAAE9oB,EAAG,EAAGC,EAAG,GAI9B1N,KAAK65B,aAAc,EACnB75B,KAAK85B,uBAAwB,EAI7B95B,KAAK+5B,QP5BW,CACpBtsB,EAFqB,CAAG7N,IAAK,EAAGC,IAAK,GAGrC6N,EAHqB,CAAG9N,IAAK,EAAGC,IAAK,IO8BjCG,KAAKqT,cAAgBA,CACzB,CACA,KAAAnL,CAAM8xB,GAAa,aAAEC,GAAe,GAAU,CAAC,GAI3C,MAAM,gBAAE/L,GAAoBluB,KAAKqT,cACjC,GAAI6a,IAAiD,IAA9BA,EAAgBgF,UACnC,OACJ,MA6FM,iBAAEiB,GAAqBn0B,KAAK6T,WAClC7T,KAAKk6B,WAAa,IAAInG,GAAWiG,EAAa,CAC1CtE,eA/FoB9mB,IACpB,MAAM,iBAAEulB,GAAqBn0B,KAAK6T,WAGlCsgB,EAAmBn0B,KAAKm6B,iBAAmBn6B,KAAKo6B,gBAC5CH,GACAj6B,KAAKi6B,aAAaxG,GAAiB7kB,GAAO8kB,MAC9C,EAyFAqB,QAvFY,CAACnmB,EAAO2lB,KAEpB,MAAM,KAAE8F,EAAI,gBAAEC,EAAe,YAAEC,GAAgBv6B,KAAK6T,WACpD,GAAIwmB,IAASC,IACLt6B,KAAK25B,cACL35B,KAAK25B,eACT35B,KAAK25B,cAAe,QAAYU,IAE3Br6B,KAAK25B,cACN,OAER35B,KAAKwN,YAAa,EAClBxN,KAAK45B,iBAAmB,KACxB55B,KAAKw6B,qBACDx6B,KAAKqT,cAAconB,aACnBz6B,KAAKqT,cAAconB,WAAWC,oBAAqB,EACnD16B,KAAKqT,cAAconB,WAAWtrB,YAASrN,GAK3C61B,IAAUvlB,IACN,IAAIzM,EAAU3F,KAAK26B,mBAAmBvoB,GAAMrK,OAAS,EAIrD,GAAI,KAAQnK,KAAK+H,GAAU,CACvB,MAAM,WAAE80B,GAAez6B,KAAKqT,cAC5B,GAAIonB,GAAcA,EAAW5D,OAAQ,CACjC,MAAM+D,EAAeH,EAAW5D,OAAOgE,UAAUzoB,GACjD,GAAIwoB,EAAc,CAEdj1B,EADe0wB,GAAWuE,IACNh6B,WAAW+E,GAAW,IAC9C,CACJ,CACJ,CACA3F,KAAKu2B,YAAYnkB,GAAQzM,CAAO,IAGhC40B,GACA,KAAMO,YAAW,IAAMP,EAAY3rB,EAAO2lB,KAE9C/f,EAAqBxU,KAAKqT,cAAe,aACzC,MAAM,eAAEma,GAAmBxtB,KAAKqT,cAChCma,GAAkBA,EAAemE,UAAU,aAAa,EAAK,EA4C7DqD,OA1CW,CAACpmB,EAAO2lB,KAEnB,MAAM,gBAAE+F,EAAe,kBAAES,EAAiB,gBAAEC,EAAe,OAAEC,GAAYj7B,KAAK6T,WAE9E,IAAKymB,IAAoBt6B,KAAK25B,aAC1B,OACJ,MAAM,OAAE33B,GAAWuyB,EAEnB,GAAIwG,GAA+C,OAA1B/6B,KAAK45B,iBAM1B,OALA55B,KAAK45B,iBAuWrB,SAA6B53B,EAAQk5B,EAAgB,IACjD,IAAI1P,EAAY,KACZvsB,KAAK8W,IAAI/T,EAAO0L,GAAKwtB,EACrB1P,EAAY,IAEPvsB,KAAK8W,IAAI/T,EAAOyL,GAAKytB,IAC1B1P,EAAY,KAEhB,OAAOA,CACX,CAhXwC2P,CAAoBn5B,QAEd,OAA1BhC,KAAK45B,kBACLoB,GAAmBA,EAAgBh7B,KAAK45B,mBAKhD55B,KAAKo7B,WAAW,IAAK7G,EAAKb,MAAO1xB,GACjChC,KAAKo7B,WAAW,IAAK7G,EAAKb,MAAO1xB,GAOjChC,KAAKqT,cAAclN,SAKnB80B,GAAUA,EAAOrsB,EAAO2lB,EAAK,EAa7Be,aAXiB,CAAC1mB,EAAO2lB,IAASv0B,KAAKqH,KAAKuH,EAAO2lB,GAYnDgB,gBAXoB,IAAMoC,IAAUvlB,IACpC,IAAI7N,EACJ,MAAwC,WAAjCvE,KAAKq7B,kBAAkBjpB,KAC0B,QAAlD7N,EAAKvE,KAAK26B,mBAAmBvoB,GAAM9J,iBAA8B,IAAP/D,OAAgB,EAASA,EAAG8F,OAAO,KASpG,CACC4pB,mBAAoBj0B,KAAKqT,cAAcioB,wBACvCnH,mBACAD,cAAemF,GAAiBr5B,KAAKqT,gBAE7C,CACA,IAAAhM,CAAKuH,EAAO2lB,GACR,MAAM/mB,EAAaxN,KAAKwN,WAExB,GADAxN,KAAKpD,UACA4Q,EACD,OACJ,MAAM,SAAEkG,GAAa6gB,EACrBv0B,KAAKmI,eAAeuL,GACpB,MAAM,UAAE6nB,GAAcv7B,KAAK6T,WACvB0nB,GACA,KAAMT,YAAW,IAAMS,EAAU3sB,EAAO2lB,IAEhD,CACA,MAAA33B,GACIoD,KAAKwN,YAAa,EAClB,MAAM,WAAEitB,EAAU,eAAEjN,GAAmBxtB,KAAKqT,cACxConB,IACAA,EAAWC,oBAAqB,GAEpC16B,KAAKk6B,YAAcl6B,KAAKk6B,WAAW9E,MACnCp1B,KAAKk6B,gBAAap4B,EAClB,MAAM,gBAAEw4B,GAAoBt6B,KAAK6T,YAC5BymB,GAAmBt6B,KAAK25B,eACzB35B,KAAK25B,eACL35B,KAAK25B,aAAe,MAExBnM,GAAkBA,EAAemE,UAAU,aAAa,EAC5D,CACA,UAAAyJ,CAAWhpB,EAAMopB,EAAQx5B,GACrB,MAAM,KAAEq4B,GAASr6B,KAAK6T,WAEtB,IAAK7R,IAAWy5B,GAAWrpB,EAAMioB,EAAMr6B,KAAK45B,kBACxC,OACJ,MAAM8B,EAAY17B,KAAK26B,mBAAmBvoB,GAC1C,IAAIpH,EAAOhL,KAAKu2B,YAAYnkB,GAAQpQ,EAAOoQ,GAEvCpS,KAAK65B,aAAe75B,KAAK65B,YAAYznB,KACrCpH,ERrLZ,SAA0B0oB,GAAO,IAAE9zB,EAAG,IAAEC,GAAOk6B,GAa3C,YAZYj4B,IAARlC,GAAqB8zB,EAAQ9zB,EAE7B8zB,EAAQqG,GACF,QAAUn6B,EAAK8zB,EAAOqG,EAAQn6B,KAC9BX,KAAKY,IAAI6zB,EAAO9zB,QAETkC,IAARjC,GAAqB6zB,EAAQ7zB,IAElC6zB,EAAQqG,GACF,QAAUl6B,EAAK6zB,EAAOqG,EAAQl6B,KAC9BZ,KAAKW,IAAI8zB,EAAO7zB,IAEnB6zB,CACX,CQuKmBiI,CAAiB3wB,EAAMhL,KAAK65B,YAAYznB,GAAOpS,KAAK+5B,QAAQ3nB,KAEvEspB,EAAUz2B,IAAI+F,EAClB,CACA,kBAAAwvB,GACI,IAAIj2B,EACJ,MAAM,gBAAEq3B,EAAe,YAAEvE,GAAgBr3B,KAAK6T,WACxCgjB,EAAS72B,KAAKqT,cAAconB,aAC7Bz6B,KAAKqT,cAAconB,WAAW5D,OAC7B72B,KAAKqT,cAAconB,WAAWoB,SAAQ,GACG,QAAxCt3B,EAAKvE,KAAKqT,cAAconB,kBAA+B,IAAPl2B,OAAgB,EAASA,EAAGsyB,OAC7EiF,EAAkB97B,KAAK65B,YACzB+B,GAAmBzF,GAAYyF,GAC1B57B,KAAK65B,cACN75B,KAAK65B,YAAc75B,KAAK+7B,yBAKxB/7B,KAAK65B,eADL+B,IAAmB/E,IRvKnC,SAAiCgE,GAAW,IAAExiB,EAAG,KAAEG,EAAI,OAAED,EAAM,MAAED,IAC7D,MAAO,CACH7K,EAAGspB,GAA4B8D,EAAUptB,EAAG+K,EAAMF,GAClD5K,EAAGqpB,GAA4B8D,EAAUntB,EAAG2K,EAAKE,GAEzD,CQmKmCyjB,CAAwBnF,EAAOgE,UAAWe,GAMrE57B,KAAK+5B,QRhHb,SAA4B1C,EAAcF,IAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,IAEX,CACH1pB,EAAG2pB,GAAmBC,EAAa,OAAQ,SAC3C3pB,EAAG0pB,GAAmBC,EAAa,MAAO,UAElD,CQqGuB4E,CAAmB5E,GAK9ByE,IAAoB97B,KAAK65B,aACzBhD,GACA72B,KAAK65B,cACJ75B,KAAK85B,uBACNnC,IAAUvlB,KACmB,IAArBpS,KAAK65B,aACL75B,KAAK26B,mBAAmBvoB,KACxBpS,KAAK65B,YAAYznB,GR1IrC,SAA+BykB,EAAQgD,GACnC,MAAMqC,EAAsB,CAAC,EAO7B,YANwBp6B,IAApB+3B,EAAYj6B,MACZs8B,EAAoBt8B,IAAMi6B,EAAYj6B,IAAMi3B,EAAOj3B,UAE/BkC,IAApB+3B,EAAYh6B,MACZq8B,EAAoBr8B,IAAMg6B,EAAYh6B,IAAMg3B,EAAOj3B,KAEhDs8B,CACX,CQiI6CC,CAAsBtF,EAAOgE,UAAUzoB,GAAOpS,KAAK65B,YAAYznB,IAC5F,GAGZ,CACA,qBAAA2pB,GACI,MAAQH,gBAAiB/B,EAAW,yBAAEuC,GAA6Bp8B,KAAK6T,WACxE,IAAKgmB,IAAgB1D,GAAY0D,GAC7B,OAAO,EACX,MAAMwC,EAAqBxC,EAAYl0B,SACvC,QAAiC,OAAvB02B,EAA6B,0GACvC,MAAM,WAAE5B,GAAez6B,KAAKqT,cAE5B,IAAKonB,IAAeA,EAAW5D,OAC3B,OAAO,EACX,MAAMyF,EF7Od,SAAwB7sB,EAAS8sB,EAAoBtI,GACjD,MAAMuI,EAAc/b,GAAmBhR,EAASwkB,IAC1C,OAAEwI,GAAWF,EAKnB,OAJIE,IACA/D,GAAc8D,EAAY/uB,EAAGgvB,EAAOz6B,OAAOyL,GAC3CirB,GAAc8D,EAAY9uB,EAAG+uB,EAAOz6B,OAAO0L,IAExC8uB,CACX,CEqO+BE,CAAeL,EAAoB5B,EAAWxsB,KAAMjO,KAAKqT,cAAcioB,yBAC9F,IAAIqB,ERnLZ,SAAiC9B,EAAWyB,GACxC,MAAO,CACH7uB,EAAGupB,GAA4B6D,EAAUptB,EAAG6uB,EAAe7uB,GAC3DC,EAAGspB,GAA4B6D,EAAUntB,EAAG4uB,EAAe5uB,GAEnE,CQ8KkCkvB,CAAwBnC,EAAW5D,OAAOgE,UAAWyB,GAK/E,GAAIF,EAA0B,CAC1B,MAAMS,EAAkBT,EL/OpC,UAAiC,EAAE3uB,EAAC,EAAEC,IAClC,MAAO,CAAE2K,IAAK3K,EAAE9N,IAAK0Y,MAAO7K,EAAE5N,IAAK0Y,OAAQ7K,EAAE7N,IAAK2Y,KAAM/K,EAAE7N,IAC9D,CK6O6Dk9B,CAAwBH,IACzE38B,KAAK85B,wBAA0B+C,EAC3BA,IACAF,EAAsB/E,GAAwBiF,GAEtD,CACA,OAAOF,CACX,CACA,cAAAx0B,CAAeuL,GACX,MAAM,KAAE2mB,EAAI,aAAE0C,EAAY,YAAE1F,EAAW,eAAE2F,EAAc,iBAAE7I,EAAgB,oBAAE8I,GAAyBj9B,KAAK6T,WACnGgmB,EAAc75B,KAAK65B,aAAe,CAAC,EACnCqD,EAAqBvF,IAAUvlB,IACjC,IAAKqpB,GAAWrpB,EAAMioB,EAAMr6B,KAAK45B,kBAC7B,OAEJ,IAAIhvB,EAAcivB,GAAeA,EAAYznB,IAAU,CAAC,EACpD+hB,IACAvpB,EAAa,CAAEhL,IAAK,EAAGC,IAAK,IAOhC,MAAM2mB,EAAkB6Q,EAAc,IAAM,IACtC9Q,EAAgB8Q,EAAc,GAAK,IACnCjR,EAAU,CACZnlB,KAAM,UACNyS,SAAUqpB,EAAerpB,EAAStB,GAAQ,EAC1CoU,kBACAD,gBACAD,aAAc,IACdvB,UAAW,EACXD,UAAW,MACRkY,KACApyB,GAKP,OAAO5K,KAAKm9B,wBAAwB/qB,EAAMgU,EAAQ,IAGtD,OAAOhe,QAAQkB,IAAI4zB,GAAoB10B,KAAKy0B,EAChD,CACA,uBAAAE,CAAwB/qB,EAAMxH,GAC1B,MAAM8wB,EAAY17B,KAAK26B,mBAAmBvoB,GAE1C,OADAoC,EAAqBxU,KAAKqT,cAAejB,GAClCspB,EAAUxzB,MAAMmkB,GAAmBja,EAAMspB,EAAW,EAAG9wB,EAAY5K,KAAKqT,eAAe,GAClG,CACA,aAAA+mB,GACIzC,IAAUvlB,GAASpS,KAAK26B,mBAAmBvoB,GAAM/K,QACrD,CACA,cAAA8yB,GACIxC,IAAUvlB,IAAW,IAAI7N,EAAI,OAA0D,QAAlDA,EAAKvE,KAAK26B,mBAAmBvoB,GAAM9J,iBAA8B,IAAP/D,OAAgB,EAASA,EAAG+F,OAAO,GACtI,CACA,iBAAA+wB,CAAkBjpB,GACd,IAAI7N,EACJ,OAA0D,QAAlDA,EAAKvE,KAAK26B,mBAAmBvoB,GAAM9J,iBAA8B,IAAP/D,OAAgB,EAASA,EAAGzH,KAClG,CAOA,kBAAA69B,CAAmBvoB,GACf,MAAMgrB,EAAU,QAAQhrB,EAAKirB,gBACvB9pB,EAAQvT,KAAKqT,cAAcQ,WAC3BypB,EAAsB/pB,EAAM6pB,GAClC,OAAOE,GAEDt9B,KAAKqT,cAAcgB,SAASjC,GAAOmB,EAAM4b,QACrC5b,EAAM4b,QAAQ/c,QACdtQ,IAAc,EAC5B,CACA,YAAAm4B,CAAavG,GACTiE,IAAUvlB,IACN,MAAM,KAAEioB,GAASr6B,KAAK6T,WAEtB,IAAK4nB,GAAWrpB,EAAMioB,EAAMr6B,KAAK45B,kBAC7B,OACJ,MAAM,WAAEa,GAAez6B,KAAKqT,cACtBqoB,EAAY17B,KAAK26B,mBAAmBvoB,GAC1C,GAAIqoB,GAAcA,EAAW5D,OAAQ,CACjC,MAAM,IAAEj3B,EAAG,IAAEC,GAAQ46B,EAAW5D,OAAOgE,UAAUzoB,GACjDspB,EAAUz2B,IAAIyuB,EAAMthB,IAAQ,QAAUxS,EAAKC,EAAK,IACpD,IAER,CAMA,8BAAA09B,GACI,IAAKv9B,KAAKqT,cAAc1N,QACpB,OACJ,MAAM,KAAE00B,EAAI,gBAAEuB,GAAoB57B,KAAK6T,YACjC,WAAE4mB,GAAez6B,KAAKqT,cAC5B,IAAK8iB,GAAYyF,KAAqBnB,IAAez6B,KAAK65B,YACtD,OAKJ75B,KAAKo6B,gBAKL,MAAMoD,EAAc,CAAE/vB,EAAG,EAAGC,EAAG,GAC/BiqB,IAAUvlB,IACN,MAAMspB,EAAY17B,KAAK26B,mBAAmBvoB,GAC1C,GAAIspB,IAAkC,IAArB17B,KAAK65B,YAAuB,CACzC,MAAM7S,EAAS0U,EAAU3zB,MACzBy1B,EAAYprB,GRnS5B,SAAoBnO,EAAQkL,GACxB,IAAI6Q,EAAS,GACb,MAAMyd,EAAepH,GAAWpyB,GAC1By5B,EAAerH,GAAWlnB,GAOhC,OANIuuB,EAAeD,EACfzd,GAAS,EAAA7d,GAAA,GAASgN,EAAOvP,IAAKuP,EAAOtP,IAAM49B,EAAcx5B,EAAOrE,KAE3D69B,EAAeC,IACpB1d,GAAS,EAAA7d,GAAA,GAAS8B,EAAOrE,IAAKqE,EAAOpE,IAAM69B,EAAcvuB,EAAOvP,OAE7D,EAAAD,GAAA,GAAM,EAAG,EAAGqgB,EACvB,CQwRoC2d,CAAW,CAAE/9B,IAAKonB,EAAQnnB,IAAKmnB,GAAUhnB,KAAK65B,YAAYznB,GAClF,KAKJ,MAAM,kBAAE4Z,GAAsBhsB,KAAKqT,cAAcQ,WACjD7T,KAAKqT,cAAc1N,QAAQi4B,MAAMj/B,UAAYqtB,EACvCA,EAAkB,CAAC,EAAG,IACtB,OACNyO,EAAWxsB,MAAQwsB,EAAWxsB,KAAK4vB,eACnCpD,EAAWqD,eACX99B,KAAKw6B,qBAKL7C,IAAUvlB,IACN,IAAKqpB,GAAWrpB,EAAMioB,EAAM,MACxB,OAIJ,MAAMqB,EAAY17B,KAAK26B,mBAAmBvoB,IACpC,IAAExS,EAAG,IAAEC,GAAQG,KAAK65B,YAAYznB,GACtCspB,EAAUz2B,KAAI,QAAUrF,EAAKC,EAAK29B,EAAYprB,IAAO,GAE7D,CACA,YAAA2rB,GACI,IAAK/9B,KAAKqT,cAAc1N,QACpB,OACJ6zB,GAAoBv0B,IAAIjF,KAAKqT,cAAerT,MAC5C,MAIMg+B,EAAsBnK,GAJZ7zB,KAAKqT,cAAc1N,QAIkB,eAAgBiJ,IACjE,MAAM,KAAEyrB,EAAI,aAAE4D,GAAe,GAASj+B,KAAK6T,WAC3CwmB,GAAQ4D,GAAgBj+B,KAAKkI,MAAM0G,EAAM,IAEvCsvB,EAAyB,KAC3B,MAAM,gBAAEtC,GAAoB57B,KAAK6T,WAC7BsiB,GAAYyF,IAAoBA,EAAgBj2B,UAChD3F,KAAK65B,YAAc75B,KAAK+7B,wBAC5B,GAEE,WAAEtB,GAAez6B,KAAKqT,cACtB8qB,EAA4B1D,EAAWjrB,iBAAiB,UAAW0uB,GACrEzD,IAAeA,EAAW5D,SAC1B4D,EAAWxsB,MAAQwsB,EAAWxsB,KAAK4vB,eACnCpD,EAAWqD,gBAEf,KAAM12B,KAAK82B,GAKX,MAAME,EAAqB5K,GAAYxqB,OAAQ,UAAU,IAAMhJ,KAAKu9B,mCAK9Dc,EAA2B5D,EAAWjrB,iBAAiB,aAAa,EAAI5H,QAAO02B,uBAC7Et+B,KAAKwN,YAAc8wB,IACnB3G,IAAUvlB,IACN,MAAMtJ,EAAc9I,KAAK26B,mBAAmBvoB,GACvCtJ,IAEL9I,KAAKu2B,YAAYnkB,IAASxK,EAAMwK,GAAMokB,UACtC1tB,EAAY7D,IAAI6D,EAAYf,MAAQH,EAAMwK,GAAMokB,WAAU,IAE9Dx2B,KAAKqT,cAAclN,SAE1B,IACD,MAAO,KACHi4B,IACAJ,IACAG,IACAE,GAA4BA,GAA0B,CAE9D,CACA,QAAAxqB,GACI,MAAMN,EAAQvT,KAAKqT,cAAcQ,YAC3B,KAAEwmB,GAAO,EAAK,kBAAEU,GAAoB,EAAK,gBAAET,GAAkB,EAAK,gBAAEsB,GAAkB,EAAK,YAAEvE,EAAcF,GAAc,aAAE4F,GAAe,GAAUxpB,EAC1J,MAAO,IACAA,EACH8mB,OACAU,oBACAT,kBACAsB,kBACAvE,cACA0F,eAER,EAEJ,SAAStB,GAAWjQ,EAAW6O,EAAMT,GACjC,SAAkB,IAATS,GAAiBA,IAAS7O,GACT,OAArBoO,GAA6BA,IAAqBpO,EAC3D,CCzcA,MAAM+S,GAAgBp+B,GAAY,CAACyO,EAAO2lB,KAClCp0B,GACA,KAAM26B,YAAW,IAAM36B,EAAQyO,EAAO2lB,IAC1C,E,gDCJJ,MAAMiK,IAA2B,KAAAC,eAAc,CAAC,GCD1CC,GAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GCbpB,SAASC,GAAgBC,EAAQ1sB,GAC7B,OAAIA,EAAKvS,MAAQuS,EAAKxS,IACX,EACHk/B,GAAU1sB,EAAKvS,IAAMuS,EAAKxS,KAAQ,GAC9C,CAQA,MAAMm/B,GAAsB,CACxBC,QAAS,CAAChY,EAAQuL,KACd,IAAKA,EAAKpjB,OACN,OAAO6X,EAKX,GAAsB,iBAAXA,EAAqB,CAC5B,IAAI,EAAA1P,GAAG1Z,KAAKopB,GAIR,OAAOA,EAHPA,EAASpmB,WAAWomB,EAK5B,CAOA,MAAO,GAFG6X,GAAgB7X,EAAQuL,EAAKpjB,OAAO1B,OACpCoxB,GAAgB7X,EAAQuL,EAAKpjB,OAAOzB,KAC1B,GCjCtBuxB,GAAmB,CACrBD,QAAS,CAAChY,GAAUkY,YAAWC,sBAC3B,MAAMC,EAAWpY,EACXqY,EAAS/6B,EAAA,EAAQ5F,MAAMsoB,GAE7B,GAAIqY,EAAO9+B,OAAS,EAChB,OAAO6+B,EACX,MAAME,EAAWh7B,EAAA,EAAQN,kBAAkBgjB,GACrChlB,EAA8B,iBAAdq9B,EAAO,GAAkB,EAAI,EAE7CE,EAASJ,EAAgB1xB,EAAE5M,MAAQq+B,EAAUzxB,EAC7C+xB,EAASL,EAAgBzxB,EAAE7M,MAAQq+B,EAAUxxB,EACnD2xB,EAAO,EAAIr9B,IAAWu9B,EACtBF,EAAO,EAAIr9B,IAAWw9B,EAOtB,MAAMC,GAAe,QAAUF,EAAQC,EAAQ,IAO/C,MALkC,iBAAvBH,EAAO,EAAIr9B,KAClBq9B,EAAO,EAAIr9B,IAAWy9B,GAEQ,iBAAvBJ,EAAO,EAAIr9B,KAClBq9B,EAAO,EAAIr9B,IAAWy9B,GACnBH,EAASD,EAAO,GC9BzBK,GAAkB,CAAC,E,eCEzB,MAAQhjC,SAAUijC,GAAW/iC,OAAQgjC,KAAoB,QAAoBr6B,gBAAgB,GCW7F,MAAMs6B,WAAiC,GAAAC,UAMnC,iBAAAC,GACI,MAAM,cAAE1sB,EAAa,YAAE2sB,EAAW,kBAAEC,EAAiB,SAAEC,GAAalgC,KAAKuT,OACnE,WAAEknB,GAAepnB,EFpB/B,IAA2B8sB,IEqBDC,GFpBtB/+B,OAAO+nB,OAAOsW,GAAiBS,GEqBvB1F,IACIuF,EAAYK,OACZL,EAAYK,MAAMngC,IAAIu6B,GACtBwF,GAAqBA,EAAkB1M,UAAY2M,GACnDD,EAAkB1M,SAASkH,GAE/BA,EAAWxsB,KAAKqyB,YAChB7F,EAAWjrB,iBAAiB,qBAAqB,KAC7CxP,KAAKugC,cAAc,IAEvB9F,EAAW+F,WAAW,IACf/F,EAAW30B,QACdqtB,eAAgB,IAAMnzB,KAAKugC,kBAGnC7B,GAAsBE,gBAAiB,CAC3C,CACA,uBAAA6B,CAAwB1N,GACpB,MAAM,iBAAE2N,EAAgB,cAAErtB,EAAa,KAAEgnB,EAAI,UAAEnH,GAAclzB,KAAKuT,MAC5DknB,EAAapnB,EAAconB,WACjC,OAAKA,GASLA,EAAWvH,UAAYA,EACnBmH,GACAtH,EAAU2N,mBAAqBA,QACV5+B,IAArB4+B,EACAjG,EAAWkG,aAGX3gC,KAAKugC,eAELxN,EAAUG,YAAcA,IACpBA,EACAuH,EAAWmG,UAELnG,EAAWoG,YAMjB,KAAM/F,YAAW,KACb,MAAMgG,EAAQrG,EAAWsG,WACpBD,GAAUA,EAAME,QAAQzgC,QACzBP,KAAKugC,cACT,KAIL,MAnCI,IAoCf,CACA,kBAAAU,GACI,MAAM,WAAExG,GAAez6B,KAAKuT,MAAMF,cAC9BonB,IACAA,EAAWxsB,KAAKqyB,YAChBX,GAAU7E,YAAW,MACZL,EAAWyG,kBAAoBzG,EAAW0G,UAC3CnhC,KAAKugC,cACT,IAGZ,CACA,oBAAAa,GACI,MAAM,cAAE/tB,EAAa,YAAE2sB,EAAaC,kBAAmBoB,GAAoBrhC,KAAKuT,OAC1E,WAAEknB,GAAepnB,EACnBonB,IACAA,EAAW6G,4BACPtB,GAAeA,EAAYK,OAC3BL,EAAYK,MAAMkB,OAAO9G,GACzB4G,GAAkBA,EAAeG,YACjCH,EAAeG,WAAW/G,GAEtC,CACA,YAAA8F,GACI,MAAM,aAAEA,GAAiBvgC,KAAKuT,MAC9BgtB,GAAgBA,GACpB,CACA,MAAAp6B,GACI,OAAO,IACX,EAEJ,SAASs7B,GAAcluB,GACnB,MAAO2f,EAAWqN,IAAgB,WAC5BP,GAAc,KAAA0B,YAAWC,GAAAC,GAC/B,OAAQ,KAAAC,KAAIhC,GAA0B,IAAKtsB,EAAOysB,YAAaA,EAAaC,mBAAmB,KAAAyB,YAAWlD,IAA2BtL,UAAWA,EAAWqN,aAAcA,GAC7K,CACA,MAAMH,GAAyB,CAC3BzoB,aAAc,IACPonB,GACH+C,QAAS,CACL,sBACA,uBACA,yBACA,4BAGRjqB,oBAAqBknB,GACrBjnB,qBAAsBinB,GACtB/mB,uBAAwB+mB,GACxBhnB,wBAAyBgnB,GACzBgD,UAAW9C,I,eClIf,MAAM+C,GAAiB,CAAC/jC,EAAGC,IAAMD,EAAE4gB,MAAQ3gB,EAAE2gB,MCG7C,MAAMojB,GACF,WAAAliC,GACIC,KAAKkiC,SAAW,GAChBliC,KAAKmiC,SAAU,CACnB,CACA,GAAAjiC,CAAI0P,IACA,SAAc5P,KAAKkiC,SAAUtyB,GAC7B5P,KAAKmiC,SAAU,CACnB,CACA,MAAAZ,CAAO3xB,IACH,SAAW5P,KAAKkiC,SAAUtyB,GAC1B5P,KAAKmiC,SAAU,CACnB,CACA,OAAAr4B,CAAQlH,GACJ5C,KAAKmiC,SAAWniC,KAAKkiC,SAASzT,KAAKuT,IACnChiC,KAAKmiC,SAAU,EACfniC,KAAKkiC,SAASp4B,QAAQlH,EAC1B,ECbJ,SAAS2e,GAAM3e,EAAUw/B,GACrB,MAAMl6B,EAAQ,KAAKpD,MACbu9B,EAAe,EAAGj9B,gBACpB,MAAM6kB,EAAU7kB,EAAY8C,EACxB+hB,GAAWmY,KACX,QAAYC,GACZz/B,EAASqnB,EAAUmY,GACvB,EAGJ,OADA,KAAMh7B,KAAKi7B,GAAc,GAClB,KAAM,QAAYA,EAC7B,C,eCVA,SAASC,GAAmB5kC,GACxB,MAAM6kC,EAAiBhuB,EAAc7W,GAASA,EAAMqK,MAAQrK,EAC5D,OpCRmBS,EoCQEokC,EpCPdphC,QAAQhD,GAAkB,iBAANA,GAAkBA,EAAEsrB,KAAOtrB,EAAEqkC,SoCQlDD,EAAeC,UACfD,EpCVY,IAACpkC,CoCWvB,CCRA,MAAMskC,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQliC,OACrBoiC,GAAYjlC,GAA2B,iBAAVA,EAAqBkD,WAAWlD,GAASA,EACtEklC,GAAQllC,GAA2B,iBAAVA,GAAsB,EAAA4Z,GAAG1Z,KAAKF,GA0C7D,SAASmlC,GAAUr/B,EAAQs/B,GACvB,YAA8BhhC,IAAvB0B,EAAOs/B,GACRt/B,EAAOs/B,GACPt/B,EAAOmU,YACjB,CAwBA,MAAMorB,GAAgCC,GAAS,EAAG,GAAK51B,GACjD61B,GAAiCD,GAAS,GAAK,IAAMzkC,EAAA,GAC3D,SAASykC,GAASpjC,EAAKC,EAAKyL,GACxB,OAAQ4K,GAEAA,EAAItW,EACG,EACPsW,EAAIrW,EACG,EACJyL,GAAO,EAAAnJ,GAAA,GAASvC,EAAKC,EAAKqW,GAEzC,CCpFA,SAASgtB,GAAa9wB,EAAM+wB,GACxB/wB,EAAKxS,IAAMujC,EAAWvjC,IACtBwS,EAAKvS,IAAMsjC,EAAWtjC,GAC1B,CAMA,SAASujC,GAAY7K,EAAK8K,GACtBH,GAAa3K,EAAI9qB,EAAG41B,EAAU51B,GAC9By1B,GAAa3K,EAAI7qB,EAAG21B,EAAU31B,EAClC,CAMA,SAAS41B,GAAkB17B,EAAO27B,GAC9B37B,EAAM4uB,UAAY+M,EAAY/M,UAC9B5uB,EAAM/G,MAAQ0iC,EAAY1iC,MAC1B+G,EAAM2uB,YAAcgN,EAAYhN,YAChC3uB,EAAMoY,OAASujB,EAAYvjB,MAC/B,CCrBA,SAASwjB,GAAiB9P,EAAO8C,EAAW31B,EAAO01B,EAAa6B,GAM5D,OAJA1E,EAAQwE,GADRxE,GAAS8C,EACiB,EAAI31B,EAAO01B,QACpBz0B,IAAbs2B,IACA1E,EAAQwE,GAAWxE,EAAO,EAAI0E,EAAU7B,IAErC7C,CACX,CAsBA,SAAS+P,GAAqBrxB,EAAMsxB,GAAarmC,EAAKsmC,EAAUC,GAAY5jB,EAAQ6jB,IAlBpF,SAAyBzxB,EAAMokB,EAAY,EAAG31B,EAAQ,EAAGmf,EAAS,GAAKoY,EAAU+K,EAAa/wB,EAAMyxB,EAAazxB,GACzG,KAAQxU,KAAK44B,KACbA,EAAY51B,WAAW41B,GAEvBA,GADyB,QAAUqN,EAAWjkC,IAAKikC,EAAWhkC,IAAK22B,EAAY,KAChDqN,EAAWjkC,KAE9C,GAAyB,iBAAd42B,EACP,OACJ,IAAID,GAAc,QAAU4M,EAAWvjC,IAAKujC,EAAWtjC,IAAKmgB,GACxD5N,IAAS+wB,IACT5M,GAAeC,GACnBpkB,EAAKxS,IAAM4jC,GAAiBpxB,EAAKxS,IAAK42B,EAAW31B,EAAO01B,EAAa6B,GACrEhmB,EAAKvS,IAAM2jC,GAAiBpxB,EAAKvS,IAAK22B,EAAW31B,EAAO01B,EAAa6B,EACzE,CAMI0L,CAAgB1xB,EAAMsxB,EAAWrmC,GAAMqmC,EAAWC,GAAWD,EAAWE,GAAYF,EAAW7iC,MAAOmf,EAAQ6jB,EAClH,CAIA,MAAME,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAASC,GAAoB1L,EAAKmL,EAAYL,EAAWa,GACrDT,GAAqBlL,EAAI9qB,EAAGi2B,EAAYK,GAAOV,EAAYA,EAAU51B,OAAI3L,EAAWoiC,EAAYA,EAAUz2B,OAAI3L,GAC9G2hC,GAAqBlL,EAAI7qB,EAAGg2B,EAAYM,GAAOX,EAAYA,EAAU31B,OAAI5L,EAAWoiC,EAAYA,EAAUx2B,OAAI5L,EAClH,CCjDA,SAASqiC,GAAgBv8B,GACrB,OAA2B,IAApBA,EAAM4uB,WAAmC,IAAhB5uB,EAAM/G,KAC1C,CACA,SAASujC,GAAYx8B,GACjB,OAAOu8B,GAAgBv8B,EAAM6F,IAAM02B,GAAgBv8B,EAAM8F,EAC7D,CACA,SAAS22B,GAAWpmC,EAAGC,GACnB,OAAOD,EAAE2B,MAAQ1B,EAAE0B,KAAO3B,EAAE4B,MAAQ3B,EAAE2B,GAC1C,CAIA,SAASykC,GAAkBrmC,EAAGC,GAC1B,OAAQe,KAAKC,MAAMjB,EAAE2B,OAASX,KAAKC,MAAMhB,EAAE0B,MACvCX,KAAKC,MAAMjB,EAAE4B,OAASZ,KAAKC,MAAMhB,EAAE2B,IAC3C,CACA,SAAS0kC,GAAiBtmC,EAAGC,GACzB,OAAOomC,GAAkBrmC,EAAEwP,EAAGvP,EAAEuP,IAAM62B,GAAkBrmC,EAAEyP,EAAGxP,EAAEwP,EACnE,CACA,SAAS82B,GAAYjM,GACjB,OAAOlC,GAAWkC,EAAI9qB,GAAK4oB,GAAWkC,EAAI7qB,EAC9C,CACA,SAAS+2B,GAAgBxmC,EAAGC,GACxB,OAAQD,EAAEu4B,YAAct4B,EAAEs4B,WACtBv4B,EAAE4C,QAAU3C,EAAE2C,OACd5C,EAAEs4B,cAAgBr4B,EAAEq4B,WAC5B,CC1BA,MAAMmO,GACF,WAAA3kC,GACIC,KAAKghC,QAAU,EACnB,CACA,GAAA9gC,CAAIqyB,IACA,SAAcvyB,KAAKghC,QAASzO,GAC5BA,EAAKoS,gBACT,CACA,MAAApD,CAAOhP,GAKH,IAJA,SAAWvyB,KAAKghC,QAASzO,GACrBA,IAASvyB,KAAK4kC,WACd5kC,KAAK4kC,cAAW9iC,GAEhBywB,IAASvyB,KAAK6kC,KAAM,CACpB,MAAMD,EAAW5kC,KAAKghC,QAAQhhC,KAAKghC,QAAQzgC,OAAS,GAChDqkC,GACA5kC,KAAK4gC,QAAQgE,EAErB,CACJ,CACA,QAAA/D,CAAStO,GACL,MAAMuS,EAAc9kC,KAAKghC,QAAQ+D,WAAWC,GAAWzS,IAASyS,IAChE,GAAoB,IAAhBF,EACA,OAAO,EAIX,IAAIF,EACJ,IAAK,IAAIpkC,EAAIskC,EAAatkC,GAAK,EAAGA,IAAK,CACnC,MAAMwkC,EAAShlC,KAAKghC,QAAQxgC,GAC5B,IAAyB,IAArBwkC,EAAO9R,UAAqB,CAC5B0R,EAAWI,EACX,KACJ,CACJ,CACA,QAAIJ,IACA5kC,KAAK4gC,QAAQgE,IACN,EAKf,CACA,OAAAhE,CAAQrO,EAAM0S,GACV,MAAML,EAAW5kC,KAAK6kC,KACtB,GAAItS,IAASqS,IAEb5kC,KAAK4kC,SAAWA,EAChB5kC,KAAK6kC,KAAOtS,EACZA,EAAK2S,OACDN,GAAU,CACVA,EAAS5L,UAAY4L,EAASD,iBAC9BpS,EAAKoS,iBACLpS,EAAK4S,WAAaP,EACdK,IACA1S,EAAK4S,WAAWC,iBAAkB,GAElCR,EAASS,WACT9S,EAAK8S,SAAWT,EAASS,SACzB9S,EAAK8S,SAAS3X,aACVkX,EAASU,iBAAmBV,EAASlX,cAEzC6E,EAAKtkB,MAAQskB,EAAKtkB,KAAKs3B,aACvBhT,EAAKiT,eAAgB,GAEzB,MAAM,UAAEC,GAAclT,EAAKzsB,SACT,IAAd2/B,GACAb,EAASc,MAcjB,CACJ,CACA,qBAAAC,GACI3lC,KAAKghC,QAAQl3B,SAASyoB,IAClB,MAAM,QAAEzsB,EAAO,aAAE8/B,GAAiBrT,EAClCzsB,EAAQqtB,gBAAkBrtB,EAAQqtB,iBAC9ByS,GACAA,EAAa9/B,QAAQqtB,gBACjByS,EAAa9/B,QAAQqtB,gBAC7B,GAER,CACA,cAAAwR,GACI3kC,KAAKghC,QAAQl3B,SAASyoB,IAClBA,EAAKyG,UAAYzG,EAAKoS,gBAAe,EAAM,GAEnD,CAKA,kBAAAkB,GACQ7lC,KAAK6kC,MAAQ7kC,KAAK6kC,KAAKQ,WACvBrlC,KAAK6kC,KAAKQ,cAAWvjC,EAE7B,EChFJ,MAAMgkC,GAAU,CACZ7kC,KAAM,kBACN8kC,WAAY,EACZC,qBAAsB,EACtBC,uBAAwB,GAEtBC,GAA4B,oBAAXl9B,aAAiDlH,IAAvBkH,OAAOm9B,YAClDC,GAAgB,CAAC,GAAI,IAAK,IAAK,KAC/BC,GAAmB,CAAEC,WAAY,UAMvC,IAAI,GAAK,EACT,SAASC,GAAyBlpC,EAAKgW,EAAe7P,EAAQgjC,GAC1D,MAAM,aAAE9Y,GAAiBra,EAErBqa,EAAarwB,KACbmG,EAAOnG,GAAOqwB,EAAarwB,GAC3BgW,EAAcozB,eAAeppC,EAAK,GAC9BmpC,IACAA,EAAsBnpC,GAAO,GAGzC,CACA,SAASqpC,GAAuCC,GAE5C,GADAA,EAAeC,2BAA4B,EACvCD,EAAe14B,OAAS04B,EACxB,OACJ,MAAM,cAAEtzB,GAAkBszB,EAAe7gC,QACzC,IAAKuN,EACD,OACJ,MAAMwa,EAAW/Y,EAAqBzB,GACtC,GAAIrK,OAAO69B,4BAA4BhZ,EAAU,aAAc,CAC3D,MAAM,OAAEgJ,EAAM,SAAEqJ,GAAayG,EAAe7gC,QAC5CkD,OAAO89B,+BAA+BjZ,EAAU,YAAa,OAASgJ,GAAUqJ,GACpF,CACA,MAAM,OAAEvwB,GAAWg3B,EACfh3B,IAAWA,EAAOi3B,2BAClBF,GAAuC/2B,EAE/C,CACA,SAASo3B,IAAqB,qBAAEC,EAAoB,cAAEC,EAAa,cAAEC,EAAa,kBAAEC,EAAiB,eAAEC,IACnG,OAAO,MACH,WAAArnC,CAAY2tB,EAAe,CAAC,EAAG/d,GAASs3B,aAAqD,EAASA,MAIlGjnC,KAAKyyB,GAAK,KAIVzyB,KAAKqnC,YAAc,EAOnBrnC,KAAKkiC,SAAW,IAAIhyB,IAKpBlQ,KAAK8F,QAAU,CAAC,EAMhB9F,KAAKsnC,iBAAkB,EACvBtnC,KAAK06B,oBAAqB,EAO1B16B,KAAKwlC,eAAgB,EAKrBxlC,KAAKunC,mBAAoB,EAKzBvnC,KAAKwnC,yBAA0B,EAK/BxnC,KAAKynC,kBAAmB,EAIxBznC,KAAK0nC,uBAAwB,EAC7B1nC,KAAK2nC,uBAAwB,EAK7B3nC,KAAKulC,YAAa,EAIlBvlC,KAAK4nC,OAAQ,EAKb5nC,KAAK6nC,YAAa,EAIlB7nC,KAAK8nC,sBAAuB,EAO5B9nC,KAAK4mC,2BAA4B,EASjC5mC,KAAKk/B,UAAY,CAAEzxB,EAAG,EAAGC,EAAG,GAI5B1N,KAAK+nC,cAAgB,IAAIn1B,IACzB5S,KAAKgoC,iBAAkB,EAEvBhoC,KAAKioC,iBAAkB,EACvBjoC,KAAKkoC,eAAiB,IAAMloC,KAAKqoB,SACjCroB,KAAKmoC,2BAA4B,EACjCnoC,KAAKooC,kBAAoB,KACjBpoC,KAAKulC,aACLvlC,KAAKulC,YAAa,EAClBvlC,KAAKqoC,oBACT,EAOJroC,KAAKsoC,iBAAmB,KACpBtoC,KAAKmoC,2BAA4B,EAK7BjC,KACAJ,GAAQC,WACJD,GAAQE,qBACJF,GAAQG,uBACJ,GAEhBjmC,KAAKuoC,MAAMz+B,QAAQ0+B,IACnBxoC,KAAKuoC,MAAMz+B,QAAQ2+B,IACnBzoC,KAAKuoC,MAAMz+B,QAAQ4+B,IACnB1oC,KAAKuoC,MAAMz+B,QAAQ6+B,IACfzC,IACAl9B,OAAOm9B,YAAYyC,OAAO9C,GAC9B,EAKJ9lC,KAAK6oC,yBAA2B,EAChC7oC,KAAK8oC,cAAe,EACpB9oC,KAAK+oC,WAAY,EACjB/oC,KAAKgpC,kBAAoB,EAKzBhpC,KAAKipC,YAAc,IAAIr2B,IACvB5S,KAAK0tB,aAAeA,EACpB1tB,KAAKiO,KAAO0B,EAASA,EAAO1B,MAAQ0B,EAAS3P,KAC7CA,KAAKkpC,KAAOv5B,EAAS,IAAIA,EAAOu5B,KAAMv5B,GAAU,GAChD3P,KAAK2P,OAASA,EACd3P,KAAK6e,MAAQlP,EAASA,EAAOkP,MAAQ,EAAI,EACzC,IAAK,IAAIre,EAAI,EAAGA,EAAIR,KAAKkpC,KAAK3oC,OAAQC,IAClCR,KAAKkpC,KAAK1oC,GAAGsnC,sBAAuB,EAEpC9nC,KAAKiO,OAASjO,OACdA,KAAKuoC,MAAQ,IAAItG,GACzB,CACA,gBAAAzyB,CAAiBqH,EAAM1W,GAInB,OAHKH,KAAK+nC,cAAcl3B,IAAIgG,IACxB7W,KAAK+nC,cAAc9iC,IAAI4R,EAAM,IAAI,MAE9B7W,KAAK+nC,cAAchgC,IAAI8O,GAAM3W,IAAIC,EAC5C,CACA,eAAAgpC,CAAgBtyB,KAAShE,GACrB,MAAMu2B,EAAsBppC,KAAK+nC,cAAchgC,IAAI8O,GACnDuyB,GAAuBA,EAAoBhpC,UAAUyS,EACzD,CACA,YAAAw2B,CAAaxyB,GACT,OAAO7W,KAAK+nC,cAAcl3B,IAAIgG,EAClC,CAIA,KAAAgc,CAAMmG,EAAUwM,EAAgBxlC,KAAKiO,KAAK+5B,iBACtC,GAAIhoC,KAAKg5B,SACL,OCnPhB,IAAsBvpB,EDoPVzP,KAAK4nC,OCpPKn4B,EDoPgBupB,aCnPRsQ,YAAkC,QAApB75B,EAAQsC,QDoPxC/R,KAAKg5B,SAAWA,EAChB,MAAM,SAAEkH,EAAQ,OAAErJ,EAAM,cAAExjB,GAAkBrT,KAAK8F,QASjD,GARIuN,IAAkBA,EAAc1N,SAChC0N,EAAcwf,MAAMmG,GAExBh5B,KAAKiO,KAAKs6B,MAAMroC,IAAIF,MACpBA,KAAK2P,QAAU3P,KAAK2P,OAAOuyB,SAAShiC,IAAIF,MACpCwlC,IAAkB3O,GAAUqJ,KAC5BlgC,KAAKwlC,eAAgB,GAErBwB,EAAsB,CACtB,IAAIuC,EACJ,MAAMC,EAAsB,IAAOxpC,KAAKiO,KAAK05B,uBAAwB,EACrEX,EAAqBhO,GAAU,KAC3Bh5B,KAAKiO,KAAK05B,uBAAwB,EAClC4B,GAAeA,IACfA,EAAchoB,GAAMioB,EAAqB,KACrC9K,GAAsBC,yBACtBD,GAAsBC,wBAAyB,EAC/C3+B,KAAKuoC,MAAMz+B,QAAQ2/B,IACvB,GAER,CACIvJ,GACAlgC,KAAKiO,KAAKy7B,mBAAmBxJ,EAAUlgC,OAGd,IAAzBA,KAAK8F,QAAQmG,SACboH,IACC6sB,GAAYrJ,IACb72B,KAAKwP,iBAAiB,aAAa,EAAG5H,QAAO02B,mBAAkBqL,2BAA0B9S,OAAQ+S,MAC7F,GAAI5pC,KAAK6pC,yBAGL,OAFA7pC,KAAKmP,YAASrN,OACd9B,KAAK8pC,oBAAiBhoC,GAI1B,MAAMioC,EAAmB/pC,KAAK8F,QAAQ8E,YAClCyI,EAAc8Y,wBACd6d,IACE,uBAAEC,EAAsB,0BAAEC,GAA+B72B,EAAcQ,WAKvEs2B,GAAiBnqC,KAAKoqC,eACvB7F,GAAiBvkC,KAAKoqC,aAAcR,IACrCD,EAMEU,GAAgC/L,GAAoBqL,EAC1D,GAAI3pC,KAAK8F,QAAQwkC,YACZtqC,KAAKmlC,YAAcnlC,KAAKmlC,WAAWnM,UACpCqR,GACC/L,IACI6L,IAAkBnqC,KAAKkhC,kBAAoB,CAC5ClhC,KAAKmlC,aACLnlC,KAAK4lC,aAAe5lC,KAAKmlC,WACzBnlC,KAAK4lC,aAAaA,kBAAe9jC,GAErC9B,KAAKuqC,mBAAmB3iC,EAAOyiC,GAC/B,MAAMG,EAAmB,KAClB,QAAmBT,EAAkB,UACxCpf,OAAQsf,EACRnsB,WAAYosB,IAEZ72B,EAAcya,oBACd9tB,KAAK8F,QAAQwkC,cACbE,EAAiBjpB,MAAQ,EACzBipB,EAAiBvpC,MAAO,GAE5BjB,KAAKmI,eAAeqiC,EACxB,MAOSlM,GACDmL,GAAgBzpC,MAEhBA,KAAKmhC,UAAYnhC,KAAK8F,QAAQqtB,gBAC9BnzB,KAAK8F,QAAQqtB,iBAGrBnzB,KAAKoqC,aAAeR,CAAS,GAGzC,CACA,OAAA5W,GACIhzB,KAAK8F,QAAQo6B,UAAYlgC,KAAK2gC,aAC9B3gC,KAAKiO,KAAKs6B,MAAMhH,OAAOvhC,MACvB,MAAM8gC,EAAQ9gC,KAAK+gC,WACnBD,GAASA,EAAMS,OAAOvhC,MACtBA,KAAK2P,QAAU3P,KAAK2P,OAAOuyB,SAASvwB,OAAO3R,MAC3CA,KAAKg5B,cAAWl3B,GAChB,QAAY9B,KAAKsoC,iBACrB,CAEA,WAAAmC,GACIzqC,KAAK0nC,uBAAwB,CACjC,CACA,aAAAgD,GACI1qC,KAAK0nC,uBAAwB,CACjC,CACA,eAAAiD,GACI,OAAO3qC,KAAK0nC,uBAAyB1nC,KAAK2nC,qBAC9C,CACA,sBAAAkC,GACI,OAAQ7pC,KAAK06B,oBACR16B,KAAK2P,QAAU3P,KAAK2P,OAAOk6B,2BAC5B,CACR,CAEA,WAAAe,GACQ5qC,KAAK2qC,oBAET3qC,KAAKulC,YAAa,EAClBvlC,KAAKuoC,OAASvoC,KAAKuoC,MAAMz+B,QAAQ+gC,IACjC7qC,KAAKqnC,cACT,CACA,oBAAAyD,GACI,MAAM,cAAEz3B,GAAkBrT,KAAK8F,QAC/B,OAAOuN,GAAiBA,EAAcQ,WAAWmY,iBACrD,CACA,UAAA2U,CAAWoK,GAAwB,GAE/B,GADA/qC,KAAKiO,KAAK+5B,iBAAkB,EACxBhoC,KAAKiO,KAAK08B,kBAEV,YADA3qC,KAAK8F,QAAQqtB,gBAAkBnzB,KAAK8F,QAAQqtB,kBAoBhD,GALInqB,OAAO89B,iCACN9mC,KAAK4mC,2BACNF,GAAuC1mC,OAE1CA,KAAKiO,KAAKs3B,YAAcvlC,KAAKiO,KAAK28B,cAC/B5qC,KAAKwlC,cACL,OACJxlC,KAAKwlC,eAAgB,EACrB,IAAK,IAAIhlC,EAAI,EAAGA,EAAIR,KAAKkpC,KAAK3oC,OAAQC,IAAK,CACvC,MAAM+xB,EAAOvyB,KAAKkpC,KAAK1oC,GACvB+xB,EAAKuV,sBAAuB,EAC5BvV,EAAKsL,aAAa,YACdtL,EAAKzsB,QAAQwkC,YACb/X,EAAKoO,YAAW,EAExB,CACA,MAAM,SAAET,EAAQ,OAAErJ,GAAW72B,KAAK8F,QAClC,QAAiBhE,IAAbo+B,IAA2BrJ,EAC3B,OACJ,MAAM7K,EAAoBhsB,KAAK8qC,uBAC/B9qC,KAAKgrC,2BAA6Bhf,EAC5BA,EAAkBhsB,KAAK0tB,aAAc,SACrC5rB,EACN9B,KAAKirC,iBACLF,GAAyB/qC,KAAKmpC,gBAAgB,aAClD,CACA,MAAA9gB,GACIroB,KAAKioC,iBAAkB,EAKvB,GAJyBjoC,KAAK2qC,kBAQ1B,OAHA3qC,KAAK0qC,gBACL1qC,KAAKqoC,yBACLroC,KAAKuoC,MAAMz+B,QAAQohC,IAGlBlrC,KAAKulC,YACNvlC,KAAKuoC,MAAMz+B,QAAQqhC,IAEvBnrC,KAAKulC,YAAa,EAIlBvlC,KAAKuoC,MAAMz+B,QAAQshC,IAKnBprC,KAAKuoC,MAAMz+B,QAAQg0B,IAKnB99B,KAAKuoC,MAAMz+B,QAAQuhC,IACnBrrC,KAAKqoC,oBAML,MAAMvjC,EAAM,KAAKA,MACjB,KAAU8C,OAAQ,EAAAjI,GAAA,GAAM,EAAG,IAAO,GAAImF,EAAM,KAAUM,WACtD,KAAUA,UAAYN,EACtB,KAAUI,cAAe,EACzB,KAAWmjB,OAAOijB,QAAQ,MAC1B,KAAWC,UAAUD,QAAQ,MAC7B,KAAWnlC,OAAOmlC,QAAQ,MAC1B,KAAUpmC,cAAe,CAC7B,CACA,SAAAo7B,GACStgC,KAAKioC,kBACNjoC,KAAKioC,iBAAkB,EACvBtI,GAAUv4B,KAAKpH,KAAKkoC,gBAE5B,CACA,iBAAAG,GACIroC,KAAKuoC,MAAMz+B,QAAQ0hC,IACnBxrC,KAAKipC,YAAYn/B,QAAQ2hC,GAC7B,CACA,wBAAAC,GACS1rC,KAAKmoC,4BACNnoC,KAAKmoC,2BAA4B,EACjC,KAAMoD,UAAUvrC,KAAKsoC,kBAAkB,GAAO,GAEtD,CACA,yBAAAhH,GAMI,KAAMxG,YAAW,KACT96B,KAAKwlC,cACLxlC,KAAKiO,KAAKqyB,YAGVtgC,KAAKiO,KAAKm6B,mBACd,GAER,CAIA,cAAA6C,IACQjrC,KAAKqlC,UAAarlC,KAAKg5B,WAE3Bh5B,KAAKqlC,SAAWrlC,KAAK67B,UACzB,CACA,YAAAiC,GACI,IAAK99B,KAAKg5B,SACN,OAGJ,GADAh5B,KAAK69B,iBACC79B,KAAK8F,QAAQ6lC,qBAAuB3rC,KAAKmhC,UAC1CnhC,KAAKwlC,eACN,OASJ,GAAIxlC,KAAKmlC,aAAenlC,KAAKmlC,WAAWnM,SACpC,IAAK,IAAIx4B,EAAI,EAAGA,EAAIR,KAAKkpC,KAAK3oC,OAAQC,IAAK,CAC1BR,KAAKkpC,KAAK1oC,GAClBq9B,cACT,CAEJ,MAAM+N,EAAa5rC,KAAK62B,OACxB72B,KAAK62B,OAAS72B,KAAK67B,SAAQ,GAC3B77B,KAAK6rC,gBzBngBO,CACpBp+B,EAFqB,CAAG7N,IAAK,EAAGC,IAAK,GAGrC6N,EAHqB,CAAG9N,IAAK,EAAGC,IAAK,IyBqgB7BG,KAAKwlC,eAAgB,EACrBxlC,KAAKm/B,qBAAkBr9B,EACvB9B,KAAKmpC,gBAAgB,UAAWnpC,KAAK62B,OAAOgE,WAC5C,MAAM,cAAExnB,GAAkBrT,KAAK8F,QAC/BuN,GACIA,EAAcjT,OAAO,gBAAiBJ,KAAK62B,OAAOgE,UAAW+Q,EAAaA,EAAW/Q,eAAY/4B,EACzG,CACA,YAAA+7B,CAAaiO,EAAQ,WACjB,IAAI9uB,EAAmB7b,QAAQnB,KAAK8F,QAAQimC,cAAgB/rC,KAAKg5B,UAMjE,GALIh5B,KAAKy8B,QACLz8B,KAAKy8B,OAAO4K,cAAgBrnC,KAAKiO,KAAKo5B,aACtCrnC,KAAKy8B,OAAOqP,QAAUA,IACtB9uB,GAAmB,GAEnBA,EAAkB,CAClB,MAAMgvB,EAAS7E,EAAkBnnC,KAAKg5B,UACtCh5B,KAAKy8B,OAAS,CACV4K,YAAarnC,KAAKiO,KAAKo5B,YACvByE,QACAE,SACAhqC,OAAQklC,EAAclnC,KAAKg5B,UAC3BiT,QAASjsC,KAAKy8B,OAASz8B,KAAKy8B,OAAOuP,OAASA,EAEpD,CACJ,CACA,cAAA5E,GACI,IAAKA,EACD,OACJ,MAAM8E,EAAmBlsC,KAAKwlC,eAC1BxlC,KAAK8nC,sBACL9nC,KAAK8F,QAAQ6lC,oBACXQ,EAAgBnsC,KAAKm/B,kBAAoBiF,GAAYpkC,KAAKm/B,iBAC1DnT,EAAoBhsB,KAAK8qC,uBACzBsB,EAAyBpgB,EACzBA,EAAkBhsB,KAAK0tB,aAAc,SACrC5rB,EACAuqC,EAA8BD,IAA2BpsC,KAAKgrC,2BAChEkB,IACCC,GACGpU,GAAa/3B,KAAK0tB,eAClB2e,KACJjF,EAAepnC,KAAKg5B,SAAUoT,GAC9BpsC,KAAK8nC,sBAAuB,EAC5B9nC,KAAK2kC,iBAEb,CACA,OAAA9I,CAAQyQ,GAAkB,GACtB,MAAMC,EAAUvsC,KAAK08B,iBACrB,IAAI7B,EAAY76B,KAAKwsC,oBAAoBD,GAi+BrD,IAAkBhU,EAv9BN,OAJI+T,IACAzR,EAAY76B,KAAKssC,gBAAgBzR,IA29B7C4R,IADclU,EAx9BGsC,GAy9BHptB,GACdg/B,GAAUlU,EAAI7qB,GAz9BC,CACH25B,YAAarnC,KAAKiO,KAAKo5B,YACvBqF,YAAaH,EACb1R,YACAnN,aAAc,CAAC,EACfzpB,OAAQjE,KAAKyyB,GAErB,CACA,cAAAiK,GACI,IAAIn4B,EACJ,MAAM,cAAE8O,GAAkBrT,KAAK8F,QAC/B,IAAKuN,EACD,MzB1kBQ,CACpB5F,EAFqB,CAAG7N,IAAK,EAAGC,IAAK,GAGrC6N,EAHqB,CAAG9N,IAAK,EAAGC,IAAK,IyB4kB7B,MAAM04B,EAAMllB,EAAcoN,qBAE1B,MADgD,QAAtBlc,EAAKvE,KAAKy8B,cAA2B,IAAPl4B,OAAgB,EAASA,EAAG0nC,UAAYjsC,KAAKkpC,KAAKxkB,KAAKioB,KACzF,CAElB,MAAM,OAAElQ,GAAWz8B,KAAKiO,KACpBwuB,IACA/D,GAAcH,EAAI9qB,EAAGgvB,EAAOz6B,OAAOyL,GACnCirB,GAAcH,EAAI7qB,EAAG+uB,EAAOz6B,OAAO0L,GAE3C,CACA,OAAO6qB,CACX,CACA,mBAAAiU,CAAoBjU,GAChB,IAAIh0B,EACJ,MAAMqoC,EzBzlBM,CACpBn/B,EAFqB,CAAG7N,IAAK,EAAGC,IAAK,GAGrC6N,EAHqB,CAAG9N,IAAK,EAAGC,IAAK,IyB4lB7B,GADAujC,GAAYwJ,EAAkBrU,GACH,QAAtBh0B,EAAKvE,KAAKy8B,cAA2B,IAAPl4B,OAAgB,EAASA,EAAG0nC,QAC3D,OAAOW,EAMX,IAAK,IAAIpsC,EAAI,EAAGA,EAAIR,KAAKkpC,KAAK3oC,OAAQC,IAAK,CACvC,MAAM+xB,EAAOvyB,KAAKkpC,KAAK1oC,IACjB,OAAEi8B,EAAM,QAAE32B,GAAYysB,EACxBA,IAASvyB,KAAKiO,MAAQwuB,GAAU32B,EAAQimC,eAKpCtP,EAAOwP,SACP7I,GAAYwJ,EAAkBrU,GAElCG,GAAckU,EAAiBn/B,EAAGgvB,EAAOz6B,OAAOyL,GAChDirB,GAAckU,EAAiBl/B,EAAG+uB,EAAOz6B,OAAO0L,GAExD,CACA,OAAOk/B,CACX,CACA,cAAAC,CAAetU,EAAKuU,GAAgB,GAChC,MAAMC,EzBpnBM,CACpBt/B,EAFqB,CAAG7N,IAAK,EAAGC,IAAK,GAGrC6N,EAHqB,CAAG9N,IAAK,EAAGC,IAAK,IyBsnB7BujC,GAAY2J,EAAgBxU,GAC5B,IAAK,IAAI/3B,EAAI,EAAGA,EAAIR,KAAKkpC,KAAK3oC,OAAQC,IAAK,CACvC,MAAM+xB,EAAOvyB,KAAKkpC,KAAK1oC,IAClBssC,GACDva,EAAKzsB,QAAQimC,cACbxZ,EAAKkK,QACLlK,IAASA,EAAKtkB,MACd8qB,GAAagU,EAAgB,CACzBt/B,GAAI8kB,EAAKkK,OAAOz6B,OAAOyL,EACvBC,GAAI6kB,EAAKkK,OAAOz6B,OAAO0L,IAG1BqqB,GAAaxF,EAAK7E,eAEvBqL,GAAagU,EAAgBxa,EAAK7E,aACtC,CAIA,OAHIqK,GAAa/3B,KAAK0tB,eAClBqL,GAAagU,EAAgB/sC,KAAK0tB,cAE/Bqf,CACX,CACA,eAAAT,CAAgB/T,GACZ,MAAMyU,EzB3oBM,CACpBv/B,EAFqB,CAAG7N,IAAK,EAAGC,IAAK,GAGrC6N,EAHqB,CAAG9N,IAAK,EAAGC,IAAK,IyB6oB7BujC,GAAY4J,EAAqBzU,GACjC,IAAK,IAAI/3B,EAAI,EAAGA,EAAIR,KAAKkpC,KAAK3oC,OAAQC,IAAK,CACvC,MAAM+xB,EAAOvyB,KAAKkpC,KAAK1oC,GACvB,IAAK+xB,EAAKyG,SACN,SACJ,IAAKjB,GAAaxF,EAAK7E,cACnB,SACJoK,GAASvF,EAAK7E,eAAiB6E,EAAK0Y,iBACpC,MAAM/G,EzBppBE,CACpBz2B,EAFqB,CAAG7N,IAAK,EAAGC,IAAK,GAGrC6N,EAHqB,CAAG9N,IAAK,EAAGC,IAAK,IyBupBzBujC,GAAYc,EADI3R,EAAKmK,kBAErBuH,GAAoB+I,EAAqBza,EAAK7E,aAAc6E,EAAK8S,SAAW9S,EAAK8S,SAASxK,eAAY/4B,EAAWoiC,EACrH,CAIA,OAHInM,GAAa/3B,KAAK0tB,eAClBuW,GAAoB+I,EAAqBhtC,KAAK0tB,cAE3Csf,CACX,CACA,cAAAC,CAAerlC,GACX5H,KAAKktC,YAActlC,EACnB5H,KAAKiO,KAAKy9B,2BACV1rC,KAAKunC,mBAAoB,CAC7B,CACA,UAAA/G,CAAW16B,GACP9F,KAAK8F,QAAU,IACR9F,KAAK8F,WACLA,EACH2/B,eAAiC3jC,IAAtBgE,EAAQ2/B,WAA0B3/B,EAAQ2/B,UAE7D,CACA,iBAAAyF,GACIlrC,KAAKy8B,YAAS36B,EACd9B,KAAK62B,YAAS/0B,EACd9B,KAAKqlC,cAAWvjC,EAChB9B,KAAKgrC,gCAA6BlpC,EAClC9B,KAAKktC,iBAAcprC,EACnB9B,KAAKmP,YAASrN,EACd9B,KAAKwlC,eAAgB,CACzB,CACA,kCAAA2H,GACSntC,KAAKotC,gBAQNptC,KAAKotC,eAAevE,2BACpB,KAAUzjC,WACVpF,KAAKotC,eAAe3E,oBAAmB,EAE/C,CACA,kBAAAA,CAAmB4E,GAAqB,GACpC,IAAI9oC,EAMJ,MAAMsgC,EAAO7kC,KAAKstC,UAClBttC,KAAKunC,oBAAsBvnC,KAAKunC,kBAAoB1C,EAAK0C,mBACzDvnC,KAAKynC,mBAAqBznC,KAAKynC,iBAAmB5C,EAAK4C,kBACvDznC,KAAKwnC,0BAA4BxnC,KAAKwnC,wBAA0B3C,EAAK2C,yBACrE,MAAM+F,EAAWpsC,QAAQnB,KAAK4lC,eAAiB5lC,OAAS6kC,EAWxD,KANkBwI,GACbE,GAAYvtC,KAAKwnC,yBAClBxnC,KAAKunC,oBACmB,QAAtBhjC,EAAKvE,KAAK2P,cAA2B,IAAPpL,OAAgB,EAASA,EAAGgjC,oBAC5DvnC,KAAKwtC,gCACLxtC,KAAKiO,KAAK05B,uBAEV,OACJ,MAAM,OAAE9Q,EAAM,SAAEqJ,GAAalgC,KAAK8F,QAIlC,GAAK9F,KAAK62B,SAAYA,GAAUqJ,GAAhC,CAQA,GANAlgC,KAAK6oC,yBAA2B,KAAUzjC,WAMrCpF,KAAKktC,cAAgBltC,KAAK8pC,eAAgB,CAC3C,MAAMsD,EAAiBptC,KAAKytC,6BACxBL,GACAA,EAAevW,QACY,IAA3B72B,KAAKgpC,mBACLhpC,KAAKotC,eAAiBA,EACtBptC,KAAKmtC,qCACLntC,KAAK8pC,ezB5uBD,CACpBr8B,EAFqB,CAAG7N,IAAK,EAAGC,IAAK,GAGrC6N,EAHqB,CAAG9N,IAAK,EAAGC,IAAK,IyB8uBrBG,KAAK0tC,qBzB7uBD,CACpBjgC,EAFqB,CAAG7N,IAAK,EAAGC,IAAK,GAGrC6N,EAHqB,CAAG9N,IAAK,EAAGC,IAAK,IyB+uBrBi3B,GAAqB92B,KAAK0tC,qBAAsB1tC,KAAK62B,OAAOgE,UAAWuS,EAAevW,OAAOgE,WAC7FuI,GAAYpjC,KAAK8pC,eAAgB9pC,KAAK0tC,uBAGtC1tC,KAAKotC,eAAiBptC,KAAK8pC,oBAAiBhoC,CAEpD,CAKA,GAAK9B,KAAK8pC,gBAAmB9pC,KAAKktC,YAAlC,C3B9tBZ,IAAyB/9B,EAAQwnB,EAAUhnB,E2BuwB/B,GApCK3P,KAAKmP,SACNnP,KAAKmP,OzB/vBG,CACpB1B,EAFqB,CAAG7N,IAAK,EAAGC,IAAK,GAGrC6N,EAHqB,CAAG9N,IAAK,EAAGC,IAAK,IyBiwBzBG,KAAK2tC,qBzBhwBG,CACpBlgC,EAFqB,CAAG7N,IAAK,EAAGC,IAAK,GAGrC6N,EAHqB,CAAG9N,IAAK,EAAGC,IAAK,KyBswBzBG,KAAK8pC,gBACL9pC,KAAK0tC,sBACL1tC,KAAKotC,gBACLptC,KAAKotC,eAAej+B,QACpBnP,KAAKmtC,qC3B9uBIh+B,E2B+uBOnP,KAAKmP,O3B/uBJwnB,E2B+uBY32B,KAAK8pC,e3B/uBPn6B,E2B+uBuB3P,KAAKotC,eAAej+B,O3B9uBlFunB,GAAiBvnB,EAAO1B,EAAGkpB,EAASlpB,EAAGkC,EAAOlC,GAC9CipB,GAAiBvnB,EAAOzB,EAAGipB,EAASjpB,EAAGiC,EAAOjC,I2BkvB7B1N,KAAKktC,aACN/rC,QAAQnB,KAAK4lC,cAEb5lC,KAAKmP,OAASnP,KAAK6sC,eAAe7sC,KAAK62B,OAAOgE,WAG9CuI,GAAYpjC,KAAKmP,OAAQnP,KAAK62B,OAAOgE,WAEzCvC,GAAct4B,KAAKmP,OAAQnP,KAAKktC,cAMhC9J,GAAYpjC,KAAKmP,OAAQnP,KAAK62B,OAAOgE,WAKrC76B,KAAKwtC,+BAAgC,CACrCxtC,KAAKwtC,gCAAiC,EACtC,MAAMJ,EAAiBptC,KAAKytC,6BACxBL,GACAjsC,QAAQisC,EAAexH,gBACnBzkC,QAAQnB,KAAK4lC,gBAChBwH,EAAetnC,QAAQimC,cACxBqB,EAAej+B,QACY,IAA3BnP,KAAKgpC,mBACLhpC,KAAKotC,eAAiBA,EACtBptC,KAAKmtC,qCACLntC,KAAK8pC,ezB7yBD,CACpBr8B,EAFqB,CAAG7N,IAAK,EAAGC,IAAK,GAGrC6N,EAHqB,CAAG9N,IAAK,EAAGC,IAAK,IyB+yBrBG,KAAK0tC,qBzB9yBD,CACpBjgC,EAFqB,CAAG7N,IAAK,EAAGC,IAAK,GAGrC6N,EAHqB,CAAG9N,IAAK,EAAGC,IAAK,IyBgzBrBi3B,GAAqB92B,KAAK0tC,qBAAsB1tC,KAAKmP,OAAQi+B,EAAej+B,QAC5Ei0B,GAAYpjC,KAAK8pC,eAAgB9pC,KAAK0tC,uBAGtC1tC,KAAKotC,eAAiBptC,KAAK8pC,oBAAiBhoC,CAEpD,CAIIokC,IACAJ,GAAQE,sBAhEF,CA5BA,CA8Fd,CACA,0BAAAyH,GACI,GAAKztC,KAAK2P,SACNmoB,GAAS93B,KAAK2P,OAAO+d,gBACrBsK,GAAeh4B,KAAK2P,OAAO+d,cAG/B,OAAI1tB,KAAK2P,OAAOi+B,eACL5tC,KAAK2P,OAGL3P,KAAK2P,OAAO89B,4BAE3B,CACA,YAAAG,GACI,OAAOzsC,SAASnB,KAAK8pC,gBACjB9pC,KAAKktC,aACLltC,KAAK8F,QAAQwkC,aACbtqC,KAAK62B,OACb,CACA,cAAA6R,GACI,IAAInkC,EACJ,MAAMsgC,EAAO7kC,KAAKstC,UACZC,EAAWpsC,QAAQnB,KAAK4lC,eAAiB5lC,OAAS6kC,EACxD,IAAIgJ,GAAU,EAuBd,IAlBI7tC,KAAKunC,oBAA6C,QAAtBhjC,EAAKvE,KAAK2P,cAA2B,IAAPpL,OAAgB,EAASA,EAAGgjC,sBACtFsG,GAAU,GAMVN,IACCvtC,KAAKwnC,yBAA2BxnC,KAAKynC,oBACtCoG,GAAU,GAMV7tC,KAAK6oC,2BAA6B,KAAUzjC,YAC5CyoC,GAAU,GAEVA,EACA,OACJ,MAAM,OAAEhX,EAAM,SAAEqJ,GAAalgC,KAAK8F,QAWlC,GANA9F,KAAKsnC,gBAAkBnmC,QAASnB,KAAK2P,QAAU3P,KAAK2P,OAAO23B,iBACvDtnC,KAAKkhC,kBACLlhC,KAAK8tC,kBACJ9tC,KAAKsnC,kBACNtnC,KAAKktC,YAAcltC,KAAK8pC,oBAAiBhoC,IAExC9B,KAAK62B,SAAYA,IAAUqJ,EAC5B,OAKJkD,GAAYpjC,KAAK6rC,gBAAiB7rC,KAAK62B,OAAOgE,WAI9C,MAAMkT,EAAiB/tC,KAAKk/B,UAAUzxB,EAChCugC,EAAiBhuC,KAAKk/B,UAAUxxB,GrBp2BlD,SAAyB6qB,EAAK2G,EAAW+O,EAAUC,GAAqB,GACpE,MAAMC,EAAaF,EAAS1tC,OAC5B,IAAK4tC,EACD,OAGJ,IAAI5b,EACA3qB,EAFJs3B,EAAUzxB,EAAIyxB,EAAUxxB,EAAI,EAG5B,IAAK,IAAIlN,EAAI,EAAGA,EAAI2tC,EAAY3tC,IAAK,CACjC+xB,EAAO0b,EAASztC,GAChBoH,EAAQ2qB,EAAK4M,gBAKb,MAAM,cAAE9rB,GAAkBkf,EAAKzsB,QAC3BuN,GACAA,EAAcE,MAAMqqB,OACkB,aAAtCvqB,EAAcE,MAAMqqB,MAAMwQ,UAG1BF,GACA3b,EAAKzsB,QAAQimC,cACbxZ,EAAKkK,QACLlK,IAASA,EAAKtkB,MACd8qB,GAAaR,EAAK,CACd9qB,GAAI8kB,EAAKkK,OAAOz6B,OAAOyL,EACvBC,GAAI6kB,EAAKkK,OAAOz6B,OAAO0L,IAG3B9F,IAEAs3B,EAAUzxB,GAAK7F,EAAM6F,EAAE5M,MACvBq+B,EAAUxxB,GAAK9F,EAAM8F,EAAE7M,MAEvBy3B,GAAcC,EAAK3wB,IAEnBsmC,GAAsBnW,GAAaxF,EAAK7E,eACxCqL,GAAaR,EAAKhG,EAAK7E,cAE/B,CAKIwR,EAAUzxB,EAAIgrB,IACdyG,EAAUzxB,EAAI+qB,KACd0G,EAAUzxB,EAAI,GAEdyxB,EAAUxxB,EAAI+qB,IACdyG,EAAUxxB,EAAI8qB,KACd0G,EAAUxxB,EAAI,EAEtB,CqBozBY2gC,CAAgBruC,KAAK6rC,gBAAiB7rC,KAAKk/B,UAAWl/B,KAAKkpC,KAAMqE,IAK7D1I,EAAKhO,QACJgO,EAAK11B,QACgB,IAArBnP,KAAKk/B,UAAUzxB,GAAgC,IAArBzN,KAAKk/B,UAAUxxB,IAC1Cm3B,EAAK11B,OAAS01B,EAAKhO,OAAOgE,UAC1BgK,EAAK8I,qBzBj5BG,CACpBlgC,EAFqB,CAAG7N,IAAK,EAAGC,IAAK,GAGrC6N,EAHqB,CAAG9N,IAAK,EAAGC,IAAK,KyBo5B7B,MAAM,OAAEsP,GAAW01B,EACd11B,GAYAnP,KAAKm/B,iBAAoBn/B,KAAKsuC,qBAI/BhL,GAAkBtjC,KAAKsuC,oBAAoB7gC,EAAGzN,KAAKm/B,gBAAgB1xB,GACnE61B,GAAkBtjC,KAAKsuC,oBAAoB5gC,EAAG1N,KAAKm/B,gBAAgBzxB,IAJnE1N,KAAKuuC,yBAeT9X,GAAaz2B,KAAKm/B,gBAAiBn/B,KAAK6rC,gBAAiB18B,EAAQnP,KAAK0tB,cAClE1tB,KAAKk/B,UAAUzxB,IAAMsgC,GACrB/tC,KAAKk/B,UAAUxxB,IAAMsgC,GACpBvJ,GAAgBzkC,KAAKm/B,gBAAgB1xB,EAAGzN,KAAKsuC,oBAAoB7gC,IACjEg3B,GAAgBzkC,KAAKm/B,gBAAgBzxB,EAAG1N,KAAKsuC,oBAAoB5gC,KAClE1N,KAAK8oC,cAAe,EACpB9oC,KAAK2kC,iBACL3kC,KAAKmpC,gBAAgB,mBAAoBh6B,IAKzC+2B,IACAJ,GAAQG,0BAnCJjmC,KAAKsuC,sBACLtuC,KAAKuuC,yBACLvuC,KAAK2kC,iBAmCjB,CACA,IAAAe,GACI1lC,KAAK+oC,WAAY,CAErB,CACA,IAAA7D,GACIllC,KAAK+oC,WAAY,CAErB,CACA,cAAApE,CAAe6J,GAAY,GACvB,IAAIjqC,EAEJ,GADsC,QAArCA,EAAKvE,KAAK8F,QAAQuN,qBAAkC,IAAP9O,GAAyBA,EAAGogC,iBACtE6J,EAAW,CACX,MAAM1N,EAAQ9gC,KAAK+gC,WACnBD,GAASA,EAAM6D,gBACnB,CACI3kC,KAAK4lC,eAAiB5lC,KAAK4lC,aAAa5M,WACxCh5B,KAAK4lC,kBAAe9jC,EAE5B,CACA,sBAAAysC,GACIvuC,KAAKsuC,oBzBz9BS,CACtB7gC,EAP0B,CAC1B+oB,UAAW,EACX31B,MAAO,EACPmf,OAAQ,EACRuW,YAAa,GAIb7oB,EAR0B,CAC1B8oB,UAAW,EACX31B,MAAO,EACPmf,OAAQ,EACRuW,YAAa,IyB49BLv2B,KAAKm/B,gBzB19BS,CACtB1xB,EAP0B,CAC1B+oB,UAAW,EACX31B,MAAO,EACPmf,OAAQ,EACRuW,YAAa,GAIb7oB,EAR0B,CAC1B8oB,UAAW,EACX31B,MAAO,EACPmf,OAAQ,EACRuW,YAAa,IyB69BLv2B,KAAKyuC,6BzB39BS,CACtBhhC,EAP0B,CAC1B+oB,UAAW,EACX31B,MAAO,EACPmf,OAAQ,EACRuW,YAAa,GAIb7oB,EAR0B,CAC1B8oB,UAAW,EACX31B,MAAO,EACPmf,OAAQ,EACRuW,YAAa,GyB89BT,CACA,kBAAAgU,CAAmB3iC,EAAOyiC,GAA+B,GACrD,MAAMhF,EAAWrlC,KAAKqlC,SAChBqJ,EAAuBrJ,EACvBA,EAAS3X,aACT,CAAC,EACDihB,EAAc,IAAK3uC,KAAK0tB,cACxBwf,EzBn+BQ,CACtBz/B,EAP0B,CAC1B+oB,UAAW,EACX31B,MAAO,EACPmf,OAAQ,EACRuW,YAAa,GAIb7oB,EAR0B,CAC1B8oB,UAAW,EACX31B,MAAO,EACPmf,OAAQ,EACRuW,YAAa,IyBs+BAv2B,KAAKotC,gBACLptC,KAAKotC,eAAetnC,QAAQwkC,aAC7BtqC,KAAK8pC,eAAiB9pC,KAAK0tC,0BAAuB5rC,GAEtD9B,KAAKwtC,gCAAkCnD,EACvC,MAAMuE,EzBp+BM,CACpBnhC,EAFqB,CAAG7N,IAAK,EAAGC,IAAK,GAGrC6N,EAHqB,CAAG9N,IAAK,EAAGC,IAAK,IyBw+BvBgvC,GAFiBxJ,EAAWA,EAASphC,YAASnC,MAC/B9B,KAAK62B,OAAS72B,KAAK62B,OAAO5yB,YAASnC,GAElDg/B,EAAQ9gC,KAAK+gC,WACb+N,GAAgBhO,GAASA,EAAME,QAAQzgC,QAAU,EACjDwuC,EAAyB5tC,QAAQ0tC,IAClCC,IAC0B,IAA3B9uC,KAAK8F,QAAQ2/B,YACZzlC,KAAKkpC,KAAKxkB,KAAKsqB,KAEpB,IAAIC,EADJjvC,KAAKgpC,kBAAoB,EAEzBhpC,KAAKkvC,eAAkBloB,IACnB,MAAM7kB,EAAW6kB,EAAS,IFj/B1C,IAAmB/oB,EAAGC,EE0/CNiG,EAAQiK,EAAM+gC,EAAIj5B,EAxgBlBk5B,GAAalC,EAAYz/B,EAAG7F,EAAM6F,EAAGtL,GACrCitC,GAAalC,EAAYx/B,EAAG9F,EAAM8F,EAAGvL,GACrCnC,KAAKitC,eAAeC,GAChBltC,KAAK8pC,gBACL9pC,KAAK0tC,sBACL1tC,KAAK62B,QACL72B,KAAKotC,gBACLptC,KAAKotC,eAAevW,SACpBC,GAAqB8X,EAAgB5uC,KAAK62B,OAAOgE,UAAW76B,KAAKotC,eAAevW,OAAOgE,WAggB3F12B,EA/fWnE,KAAK8pC,eA+fR17B,EA/fwBpO,KAAK0tC,qBA+fvByB,EA/f6CP,EA+fzC14B,EA/fyD/T,EAggBvFktC,GAAQlrC,EAAOsJ,EAAGW,EAAKX,EAAG0hC,EAAG1hC,EAAGyI,GAChCm5B,GAAQlrC,EAAOuJ,EAAGU,EAAKV,EAAGyhC,EAAGzhC,EAAGwI,GA5fZ+4B,IFhgCLhxC,EEigCe+B,KAAK8pC,eFjgCjB5rC,EEigCiC+wC,EFhgC5C5K,GAAWpmC,EAAEwP,EAAGvP,EAAEuP,IAAM42B,GAAWpmC,EAAEyP,EAAGxP,EAAEwP,MEigC7B1N,KAAKunC,mBAAoB,GAExB0H,IACDA,EzBrgCA,CACpBxhC,EAFqB,CAAG7N,IAAK,EAAGC,IAAK,GAGrC6N,EAHqB,CAAG9N,IAAK,EAAGC,IAAK,KyBugCrBujC,GAAY6L,EAAoBjvC,KAAK8pC,iBAErC+E,IACA7uC,KAAKslC,gBAAkBqJ,EL3gC3C,SAAmBx/B,EAAQmgC,EAAQzK,EAAM1iC,EAAU4sC,EAAwBD,GACnEC,GACA5/B,EAAOjD,SAAU,QAAU,OAEVpK,IAAjB+iC,EAAK34B,QAAwB24B,EAAK34B,QAAU,EAAG62B,GAAgB5gC,IAC/DgN,EAAOogC,aAAc,aAA6BztC,IAAnBwtC,EAAOpjC,QAAwBojC,EAAOpjC,QAAU,EAAG,EAAG+2B,GAAiB9gC,KAEjG2sC,IACL3/B,EAAOjD,SAAU,aAA6BpK,IAAnBwtC,EAAOpjC,QAAwBojC,EAAOpjC,QAAU,OAAoBpK,IAAjB+iC,EAAK34B,QAAwB24B,EAAK34B,QAAU,EAAG/J,IAKjI,IAAK,IAAI3B,EAAI,EAAGA,EAAIkiC,GAAYliC,IAAK,CACjC,MAAMgvC,EAAc,SAAS/M,GAAQjiC,WACrC,IAAIivC,EAAe5M,GAAUyM,EAAQE,GACjCE,EAAa7M,GAAUgC,EAAM2K,QACZ1tC,IAAjB2tC,QAA6C3tC,IAAf4tC,IAElCD,IAAiBA,EAAe,GAChCC,IAAeA,EAAa,GACI,IAAjBD,GACI,IAAfC,GACA9M,GAAK6M,KAAkB7M,GAAK8M,IAE5BvgC,EAAOqgC,GAAevwC,KAAKY,KAAI,QAAU8iC,GAAS8M,GAAe9M,GAAS+M,GAAavtC,GAAW,IAC9F,KAAQvE,KAAK8xC,IAAe,KAAQ9xC,KAAK6xC,MACzCtgC,EAAOqgC,IAAgB,MAI3BrgC,EAAOqgC,GAAeE,EAE9B,EAIIJ,EAAOh2B,QAAUurB,EAAKvrB,UACtBnK,EAAOmK,QAAS,QAAUg2B,EAAOh2B,QAAU,EAAGurB,EAAKvrB,QAAU,EAAGnX,GAExE,CKo+BoBwtC,CAAUhB,EAAaD,EAAsB1uC,KAAK0tB,aAAcvrB,EAAU4sC,EAAwBD,IAEtG9uC,KAAKiO,KAAKy9B,2BACV1rC,KAAK2kC,iBACL3kC,KAAKgpC,kBAAoB7mC,CAAQ,EAErCnC,KAAKkvC,eAAelvC,KAAK8F,QAAQwkC,WAAa,IAAO,EACzD,CACA,cAAAniC,CAAerC,GACX9F,KAAKmpC,gBAAgB,kBACrBnpC,KAAKkhC,kBAAoBlhC,KAAKkhC,iBAAiB75B,OAC3CrH,KAAK4lC,cAAgB5lC,KAAK4lC,aAAa1E,kBACvClhC,KAAK4lC,aAAa1E,iBAAiB75B,OAEnCrH,KAAK8tC,oBACL,QAAY9tC,KAAK8tC,kBACjB9tC,KAAK8tC,sBAAmBhsC,GAO5B9B,KAAK8tC,iBAAmB,KAAMzlB,QAAO,KACjCqW,GAAsBC,wBAAyB,EAC/C3+B,KAAKkhC,iBE1iCrB,SAA4BxjC,EAAOujB,EAAWnb,GAC1C,MAAM8pC,EAAgBr7B,EAAc7W,GAASA,GAAQ,QAAYA,GAEjE,OADAkyC,EAAc1nC,MAAMmkB,GAAmB,GAAIujB,EAAe3uB,EAAWnb,IAC9D8pC,EAActnC,SACzB,CFsiCwCunC,CAAmB,EArgCnC,IAqgCuD,IACxD/pC,EACHmc,SAAW+E,IACPhnB,KAAKkvC,eAAeloB,GACpBlhB,EAAQmc,UAAYnc,EAAQmc,SAAS+E,EAAO,EAEhDlJ,WAAY,KACRhY,EAAQgY,YAAchY,EAAQgY,aAC9B9d,KAAK8vC,mBAAmB,IAG5B9vC,KAAK4lC,eACL5lC,KAAK4lC,aAAa1E,iBAAmBlhC,KAAKkhC,kBAE9ClhC,KAAK8tC,sBAAmBhsC,CAAS,GAEzC,CACA,iBAAAguC,GACQ9vC,KAAK4lC,eACL5lC,KAAK4lC,aAAa1E,sBAAmBp/B,EACrC9B,KAAK4lC,aAAaR,qBAAkBtjC,GAExC,MAAMg/B,EAAQ9gC,KAAK+gC,WACnBD,GAASA,EAAM6E,wBACf3lC,KAAK4lC,aACD5lC,KAAKkhC,iBACDlhC,KAAKslC,qBACDxjC,EACZ9B,KAAKmpC,gBAAgB,oBACzB,CACA,eAAAM,GACQzpC,KAAKkhC,mBACLlhC,KAAKkvC,gBAAkBlvC,KAAKkvC,eAriCpB,KAsiCRlvC,KAAKkhC,iBAAiB75B,QAE1BrH,KAAK8vC,mBACT,CACA,uBAAAC,GACI,MAAMlL,EAAO7kC,KAAKstC,UAClB,IAAI,qBAAEK,EAAoB,OAAEx+B,EAAM,OAAE0nB,EAAM,aAAEnJ,GAAiBmX,EAC7D,GAAK8I,GAAyBx+B,GAAW0nB,EAAzC,CAOA,GAAI72B,OAAS6kC,GACT7kC,KAAK62B,QACLA,GACAmZ,GAA0BhwC,KAAK8F,QAAQmqC,cAAejwC,KAAK62B,OAAOgE,UAAWhE,EAAOgE,WAAY,CAChG1rB,EAASnP,KAAKmP,QzBtlCN,CACpB1B,EAFqB,CAAG7N,IAAK,EAAGC,IAAK,GAGrC6N,EAHqB,CAAG9N,IAAK,EAAGC,IAAK,IyBwlCzB,MAAMqwC,EAAU7Z,GAAWr2B,KAAK62B,OAAOgE,UAAUptB,GACjD0B,EAAO1B,EAAE7N,IAAMilC,EAAK11B,OAAO1B,EAAE7N,IAC7BuP,EAAO1B,EAAE5N,IAAMsP,EAAO1B,EAAE7N,IAAMswC,EAC9B,MAAMC,EAAU9Z,GAAWr2B,KAAK62B,OAAOgE,UAAUntB,GACjDyB,EAAOzB,EAAE9N,IAAMilC,EAAK11B,OAAOzB,EAAE9N,IAC7BuP,EAAOzB,EAAE7N,IAAMsP,EAAOzB,EAAE9N,IAAMuwC,CAClC,CACA/M,GAAYuK,EAAsBx+B,GAMlC4pB,GAAa4U,EAAsBjgB,GAOnC+I,GAAaz2B,KAAKyuC,6BAA8BzuC,KAAK6rC,gBAAiB8B,EAAsBjgB,EA/BlF,CAgCd,CACA,kBAAAgc,CAAmBxJ,EAAU3N,GACpBvyB,KAAKipC,YAAYp4B,IAAIqvB,IACtBlgC,KAAKipC,YAAYhkC,IAAIi7B,EAAU,IAAIwE,IAEzB1kC,KAAKipC,YAAYlhC,IAAIm4B,GAC7BhgC,IAAIqyB,GACV,MAAM6d,EAAS7d,EAAKzsB,QAAQuqC,uBAC5B9d,EAAKqO,QAAQ,CACTh2B,WAAYwlC,EAASA,EAAOxlC,gBAAa9I,EACzCmjC,sBAAuBmL,GAAUA,EAAOE,4BAClCF,EAAOE,4BAA4B/d,QACnCzwB,GAEd,CACA,MAAAq/B,GACI,MAAML,EAAQ9gC,KAAK+gC,WACnB,OAAOD,GAAQA,EAAM+D,OAAS7kC,IAClC,CACA,OAAAstC,GACI,IAAI/oC,EACJ,MAAM,SAAE27B,GAAalgC,KAAK8F,QAC1B,OAAOo6B,IAAuC,QAA1B37B,EAAKvE,KAAK+gC,kBAA+B,IAAPx8B,OAAgB,EAASA,EAAGsgC,OAAgB7kC,IACtG,CACA,WAAAuwC,GACI,IAAIhsC,EACJ,MAAM,SAAE27B,GAAalgC,KAAK8F,QAC1B,OAAOo6B,EAAsC,QAA1B37B,EAAKvE,KAAK+gC,kBAA+B,IAAPx8B,OAAgB,EAASA,EAAGqgC,cAAW9iC,CAChG,CACA,QAAAi/B,GACI,MAAM,SAAEb,GAAalgC,KAAK8F,QAC1B,GAAIo6B,EACA,OAAOlgC,KAAKiO,KAAKg7B,YAAYlhC,IAAIm4B,EACzC,CACA,OAAAU,EAAQ,WAAEiH,EAAU,WAAEj9B,EAAU,sBAAEq6B,GAA2B,CAAC,GAC1D,MAAMnE,EAAQ9gC,KAAK+gC,WACfD,GACAA,EAAMF,QAAQ5gC,KAAMilC,GACpB4C,IACA7nC,KAAKm/B,qBAAkBr9B,EACvB9B,KAAK6nC,YAAa,GAElBj9B,GACA5K,KAAKwgC,WAAW,CAAE51B,cAC1B,CACA,QAAAi2B,GACI,MAAMC,EAAQ9gC,KAAK+gC,WACnB,QAAID,GACOA,EAAMD,SAAS7gC,KAK9B,CACA,oBAAA6qC,GACI,MAAM,cAAEx3B,GAAkBrT,KAAK8F,QAC/B,IAAKuN,EACD,OAEJ,IAAIm9B,GAAyB,EAK7B,MAAM,aAAE9iB,GAAiBra,EAWzB,IAVIqa,EAAatT,GACbsT,EAAapU,QACboU,EAAanU,SACbmU,EAAalU,SACbkU,EAAajU,SACbiU,EAAa5T,OACb4T,EAAa3T,SACby2B,GAAyB,IAGxBA,EACD,OACJ,MAAMC,EAAc,CAAC,EACjB/iB,EAAatT,GACbmsB,GAAyB,IAAKlzB,EAAeo9B,EAAazwC,KAAKslC,iBAGnE,IAAK,IAAI9kC,EAAI,EAAGA,EAAI4lC,GAAc7lC,OAAQC,IACtC+lC,GAAyB,SAASH,GAAc5lC,KAAM6S,EAAeo9B,EAAazwC,KAAKslC,iBACvFiB,GAAyB,OAAOH,GAAc5lC,KAAM6S,EAAeo9B,EAAazwC,KAAKslC,iBAIzFjyB,EAAclN,SAEd,IAAK,MAAM9I,KAAOozC,EACdp9B,EAAcozB,eAAeppC,EAAKozC,EAAYpzC,IAC1C2C,KAAKslC,kBACLtlC,KAAKslC,gBAAgBjoC,GAAOozC,EAAYpzC,IAKhDgW,EAAcsxB,gBAClB,CACA,mBAAA+L,CAAoBC,GAChB,IAAIpsC,EAAIC,EACR,IAAKxE,KAAKg5B,UAAYh5B,KAAK4nC,MACvB,OACJ,IAAK5nC,KAAK+oC,UACN,OAAO1C,GAEX,MAAMuK,EAAS,CACXtK,WAAY,IAEVta,EAAoBhsB,KAAK8qC,uBAC/B,GAAI9qC,KAAK6nC,WAQL,OAPA7nC,KAAK6nC,YAAa,EAClB+I,EAAO1kC,QAAU,GACjB0kC,EAAOC,cACHvO,GAAmBqO,aAA6C,EAASA,EAAUE,gBAAkB,GACzGD,EAAOjyC,UAAYqtB,EACbA,EAAkBhsB,KAAK0tB,aAAc,IACrC,OACCkjB,EAEX,MAAM/L,EAAO7kC,KAAKstC,UAClB,IAAKttC,KAAKm/B,kBAAoBn/B,KAAK62B,SAAWgO,EAAK11B,OAAQ,CACvD,MAAM2hC,EAAc,CAAC,EAerB,OAdI9wC,KAAK8F,QAAQo6B,WACb4Q,EAAY5kC,aACsBpK,IAA9B9B,KAAK0tB,aAAaxhB,QACZlM,KAAK0tB,aAAaxhB,QAClB,EACV4kC,EAAYD,cACRvO,GAAmBqO,aAA6C,EAASA,EAAUE,gBAAkB,IAEzG7wC,KAAK8oC,eAAiB/Q,GAAa/3B,KAAK0tB,gBACxCojB,EAAYnyC,UAAYqtB,EAClBA,EAAkB,CAAC,EAAG,IACtB,OACNhsB,KAAK8oC,cAAe,GAEjBgI,CACX,CACA,MAAMC,EAAiBlM,EAAKS,iBAAmBT,EAAKnX,aACpD1tB,KAAK+vC,0BACLa,EAAOjyC,UGrwCnB,SAAkCiJ,EAAOs3B,EAAW8R,GAChD,IAAIryC,EAAY,GAOhB,MAAMsyC,EAAarpC,EAAM6F,EAAE+oB,UAAY0I,EAAUzxB,EAC3CyjC,EAAatpC,EAAM8F,EAAE8oB,UAAY0I,EAAUxxB,EAC3CyjC,GAAcH,aAAyD,EAASA,EAAgB52B,IAAM,EAW5G,IAVI62B,GAAcC,GAAcC,KAC5BxyC,EAAY,eAAesyC,QAAiBC,QAAiBC,SAM7C,IAAhBjS,EAAUzxB,GAA2B,IAAhByxB,EAAUxxB,IAC/B/O,GAAa,SAAS,EAAIugC,EAAUzxB,MAAM,EAAIyxB,EAAUxxB,OAExDsjC,EAAiB,CACjB,MAAM,qBAAE12B,EAAoB,OAAEhB,EAAM,QAAEC,EAAO,QAAEC,EAAO,MAAEM,EAAK,MAAEC,GAAUi3B,EACrE12B,IACA3b,EAAY,eAAe2b,QAA2B3b,KACtD2a,IACA3a,GAAa,UAAU2a,UACvBC,IACA5a,GAAa,WAAW4a,UACxBC,IACA7a,GAAa,WAAW6a,UACxBM,IACAnb,GAAa,SAASmb,UACtBC,IACApb,GAAa,SAASob,SAC9B,CAKA,MAAMq3B,EAAgBxpC,EAAM6F,EAAE5M,MAAQq+B,EAAUzxB,EAC1C4jC,EAAgBzpC,EAAM8F,EAAE7M,MAAQq+B,EAAUxxB,EAIhD,OAHsB,IAAlB0jC,GAAyC,IAAlBC,IACvB1yC,GAAa,SAASyyC,MAAkBC,MAErC1yC,GAAa,MACxB,CHutC+B2yC,CAAyBtxC,KAAKyuC,6BAA8BzuC,KAAKk/B,UAAW6R,GAC3F/kB,IACA4kB,EAAOjyC,UAAYqtB,EAAkB+kB,EAAgBH,EAAOjyC,YAEhE,MAAM,EAAE8O,EAAC,EAAEC,GAAM1N,KAAKm/B,gBACtByR,EAAOW,gBAAkB,GAAc,IAAX9jC,EAAEuS,WAA4B,IAAXtS,EAAEsS,YAC7C6kB,EAAKS,gBAKLsL,EAAO1kC,QACH24B,IAAS7kC,KACiG,QAAnGwE,EAAuC,QAAjCD,EAAKwsC,EAAe7kC,eAA4B,IAAP3H,EAAgBA,EAAKvE,KAAK0tB,aAAaxhB,eAA4B,IAAP1H,EAAgBA,EAAK,EACjIxE,KAAKolC,gBACDplC,KAAK0tB,aAAaxhB,QAClB6kC,EAAexB,YAO7BqB,EAAO1kC,QACH24B,IAAS7kC,UACwB8B,IAA3BivC,EAAe7kC,QACX6kC,EAAe7kC,QACf,QAC2BpK,IAA/BivC,EAAexB,YACXwB,EAAexB,YACf,EAKlB,IAAK,MAAMlyC,KAAOqiC,GAAiB,CAC/B,QAA4B59B,IAAxBivC,EAAe1zC,GACf,SACJ,MAAM,QAAE2hC,EAAO,QAAE8C,GAAYpC,GAAgBriC,GAOvCm0C,EAAiC,SAArBZ,EAAOjyC,UACnBoyC,EAAe1zC,GACf2hC,EAAQ+R,EAAe1zC,GAAMwnC,GACnC,GAAI/C,EAAS,CACT,MAAM2P,EAAM3P,EAAQvhC,OACpB,IAAK,IAAIC,EAAI,EAAGA,EAAIixC,EAAKjxC,IACrBowC,EAAO9O,EAAQthC,IAAMgxC,CAE7B,MAEIZ,EAAOvzC,GAAOm0C,CAEtB,CAYA,OANIxxC,KAAK8F,QAAQo6B,WACb0Q,EAAOC,cACHhM,IAAS7kC,KACHsiC,GAAmBqO,aAA6C,EAASA,EAAUE,gBAAkB,GACrG,QAEPD,CACX,CACA,aAAApF,GACIxrC,KAAKmlC,WAAanlC,KAAKqlC,cAAWvjC,CACtC,CAEA,SAAA4vC,GACI1xC,KAAKiO,KAAKs6B,MAAMz+B,SAASyoB,IAAW,IAAIhuB,EAAI,OAAwC,QAAhCA,EAAKguB,EAAK2O,wBAAqC,IAAP38B,OAAgB,EAASA,EAAG8C,MAAM,IAC9HrH,KAAKiO,KAAKs6B,MAAMz+B,QAAQohC,IACxBlrC,KAAKiO,KAAKg7B,YAAYvoC,OAC1B,EAER,CACA,SAASo9B,GAAavL,GAClBA,EAAKuL,cACT,CACA,SAASuN,GAAmB9Y,GACxB,IAAIhuB,EACJ,MAAM8gC,GAAuC,QAA1B9gC,EAAKguB,EAAK4S,kBAA+B,IAAP5gC,OAAgB,EAASA,EAAG8gC,WAAa9S,EAAK8S,SACnG,GAAI9S,EAAK4O,UACL5O,EAAKsE,QACLwO,GACA9S,EAAK8W,aAAa,aAAc,CAChC,MAAQxO,UAAWhE,EAAQ6V,YAAaiF,GAAmBpf,EAAKsE,QAC1D,cAAEoZ,GAAkB1d,EAAKzsB,QACzBynC,EAAWlI,EAASphC,SAAWsuB,EAAKsE,OAAO5yB,OAG3B,SAAlBgsC,EACAtY,IAAUvlB,IACN,MAAMw/B,EAAerE,EACflI,EAASqH,YAAYt6B,GACrBizB,EAASxK,UAAUzoB,GACnB7R,EAAS81B,GAAWub,GAC1BA,EAAahyC,IAAMi3B,EAAOzkB,GAAMxS,IAChCgyC,EAAa/xC,IAAM+xC,EAAahyC,IAAMW,CAAM,IAG3CyvC,GAA0BC,EAAe5K,EAASxK,UAAWhE,IAClEc,IAAUvlB,IACN,MAAMw/B,EAAerE,EACflI,EAASqH,YAAYt6B,GACrBizB,EAASxK,UAAUzoB,GACnB7R,EAAS81B,GAAWQ,EAAOzkB,IACjCw/B,EAAa/xC,IAAM+xC,EAAahyC,IAAMW,EAIlCgyB,EAAKuX,iBAAmBvX,EAAK2O,mBAC7B3O,EAAKgV,mBAAoB,EACzBhV,EAAKuX,eAAe13B,GAAMvS,IACtB0yB,EAAKuX,eAAe13B,GAAMxS,IAAMW,EACxC,IAGR,MAAMsxC,EzB33CY,CACtBpkC,EAP0B,CAC1B+oB,UAAW,EACX31B,MAAO,EACPmf,OAAQ,EACRuW,YAAa,GAIb7oB,EAR0B,CAC1B8oB,UAAW,EACX31B,MAAO,EACPmf,OAAQ,EACRuW,YAAa,IyB83CTE,GAAaob,EAAahb,EAAQwO,EAASxK,WAC3C,MAAMiX,EzB73CY,CACtBrkC,EAP0B,CAC1B+oB,UAAW,EACX31B,MAAO,EACPmf,OAAQ,EACRuW,YAAa,GAIb7oB,EAR0B,CAC1B8oB,UAAW,EACX31B,MAAO,EACPmf,OAAQ,EACRuW,YAAa,IyBg4CLgX,EACA9W,GAAaqb,EAAavf,EAAKsa,eAAe8E,GAAgB,GAAOtM,EAASqH,aAG9EjW,GAAaqb,EAAajb,EAAQwO,EAASxK,WAE/C,MAAMyD,GAAoB8F,GAAYyN,GACtC,IAAIlI,GAA2B,EAC/B,IAAKpX,EAAK4S,WAAY,CAClB,MAAMiI,EAAiB7a,EAAKkb,6BAK5B,GAAIL,IAAmBA,EAAejI,WAAY,CAC9C,MAAQE,SAAU0M,EAAgBlb,OAAQmb,GAAiB5E,EAC3D,GAAI2E,GAAkBC,EAAc,CAChC,MAAMC,EzB14CF,CACpBxkC,EAFqB,CAAG7N,IAAK,EAAGC,IAAK,GAGrC6N,EAHqB,CAAG9N,IAAK,EAAGC,IAAK,IyB44CrBi3B,GAAqBmb,EAAkB5M,EAASxK,UAAWkX,EAAelX,WAC1E,MAAM+T,EzB54CF,CACpBnhC,EAFqB,CAAG7N,IAAK,EAAGC,IAAK,GAGrC6N,EAHqB,CAAG9N,IAAK,EAAGC,IAAK,IyB84CrBi3B,GAAqB8X,EAAgB/X,EAAQmb,EAAanX,WACrD0J,GAAiB0N,EAAkBrD,KACpCjF,GAA2B,GAE3ByD,EAAetnC,QAAQwkC,aACvB/X,EAAKuX,eAAiB8E,EACtBrc,EAAKmb,qBAAuBuE,EAC5B1f,EAAK6a,eAAiBA,EAE9B,CACJ,CACJ,CACA7a,EAAK4W,gBAAgB,YAAa,CAC9BtS,SACAwO,WACAz9B,MAAOkqC,EACPD,cACAvT,mBACAqL,4BAER,MACK,GAAIpX,EAAK4O,SAAU,CACpB,MAAM,eAAEhO,GAAmBZ,EAAKzsB,QAChCqtB,GAAkBA,GACtB,CAMAZ,EAAKzsB,QAAQ8E,gBAAa9I,CAC9B,CACA,SAAS0mC,GAAoBjW,GAIrB2T,IACAJ,GAAQC,aAEPxT,EAAK5iB,SAQL4iB,EAAKqb,iBACNrb,EAAKgV,kBAAoBhV,EAAK5iB,OAAO43B,mBAOzChV,EAAKiV,0BAA4BjV,EAAKiV,wBAA0BrmC,QAAQoxB,EAAKgV,mBACzEhV,EAAK5iB,OAAO43B,mBACZhV,EAAK5iB,OAAO63B,0BAChBjV,EAAKkV,mBAAqBlV,EAAKkV,iBAAmBlV,EAAK5iB,OAAO83B,kBAClE,CACA,SAASkB,GAAgBpW,GACrBA,EAAKgV,kBACDhV,EAAKiV,wBACDjV,EAAKkV,kBACD,CAChB,CACA,SAAS+D,GAAcjZ,GACnBA,EAAKiZ,eACT,CACA,SAASN,GAAkB3Y,GACvBA,EAAK2Y,mBACT,CACA,SAASC,GAAmB5Y,GACxBA,EAAKiT,eAAgB,CACzB,CACA,SAAS4F,GAAoB7Y,GACzB,MAAM,cAAElf,GAAkBkf,EAAKzsB,QAC3BuN,GAAiBA,EAAcQ,WAAWq+B,uBAC1C7+B,EAAcjT,OAAO,uBAEzBmyB,EAAK6U,gBACT,CACA,SAASqC,GAAgBlX,GACrBA,EAAKkX,kBACLlX,EAAK2a,YAAc3a,EAAKuX,eAAiBvX,EAAKpjB,YAASrN,EACvDywB,EAAKgV,mBAAoB,CAC7B,CACA,SAASkB,GAAmBlW,GACxBA,EAAKkW,oBACT,CACA,SAASC,GAAenW,GACpBA,EAAKmW,gBACT,CACA,SAASmC,GAAqBtY,GAC1BA,EAAKsY,sBACT,CACA,SAASY,GAAoB3K,GACzBA,EAAM+E,oBACV,CACA,SAASuJ,GAAajrC,EAAQyD,EAAOsO,GACjC/R,EAAOqyB,WAAY,QAAU5uB,EAAM4uB,UAAW,EAAGtgB,GACjD/R,EAAOtD,OAAQ,QAAU+G,EAAM/G,MAAO,EAAGqV,GACzC/R,EAAO6b,OAASpY,EAAMoY,OACtB7b,EAAOoyB,YAAc3uB,EAAM2uB,WAC/B,CACA,SAAS8Y,GAAQlrC,EAAQiK,EAAM+gC,EAAIj5B,GAC/B/R,EAAOvE,KAAM,QAAUwO,EAAKxO,IAAKuvC,EAAGvvC,IAAKsW,GACzC/R,EAAOtE,KAAM,QAAUuO,EAAKvO,IAAKsvC,EAAGtvC,IAAKqW,EAC7C,CAKA,SAAS84B,GAAoBzc,GACzB,OAAQA,EAAK+S,sBAAwDxjC,IAArCywB,EAAK+S,gBAAgBiK,WACzD,CACA,MAAMvF,GAA0B,CAC5B//B,SAAU,IACV8C,KAAM,CAAC,GAAK,EAAG,GAAK,IAElBolC,GAAqBC,GAAgC,oBAAdC,WACzCA,UAAUC,WACVD,UAAUC,UAAU19B,cAAc29B,SAASH,GAMzCI,GAAaL,GAAkB,kBAAoBA,GAAkB,WACrElzC,KAAKC,MACLX,EAAA,EACN,SAASkuC,GAAUr6B,GAEfA,EAAKxS,IAAM4yC,GAAWpgC,EAAKxS,KAC3BwS,EAAKvS,IAAM2yC,GAAWpgC,EAAKvS,IAC/B,CAKA,SAASmwC,GAA0BC,EAAe5K,EAAUxO,GACxD,MAA0B,aAAlBoZ,GACe,oBAAlBA,I3B3hDOvyC,E2B4hDI8mC,GAAYa,G3B5hDTl2B,E2B4hDoBq1B,GAAY3N,G3B5hDxB4b,E2B4hDiC,K3B3hDrDxzC,KAAK8W,IAAIrY,EAAQyR,IAAWsjC,IADvC,IAAgB/0C,EAAOyR,EAAQsjC,C2B6hD/B,CACA,SAAS9F,GAAuBpa,GAC5B,IAAIhuB,EACJ,OAAOguB,IAASA,EAAKtkB,OAAgC,QAAtB1J,EAAKguB,EAAKkK,cAA2B,IAAPl4B,OAAgB,EAASA,EAAG0nC,QAC7F,CIziDA,MAAMyG,GAAyB3L,GAAqB,CAChDC,qBAAsB,CAAC5Q,EAAKh2B,IAAWozB,GAAY4C,EAAK,SAAUh2B,GAClE8mC,cAAe,KAAM,CACjBz5B,EAAG1B,SAAS4mC,gBAAgBC,YAAc7mC,SAAS8mC,KAAKD,WACxDllC,EAAG3B,SAAS4mC,gBAAgBG,WAAa/mC,SAAS8mC,KAAKC,YAE3D3L,kBAAmB,KAAM,ICNvB5K,GAAqB,CACvB52B,aAAS7D,GAEPixC,GAAqBhM,GAAqB,CAC5CG,cAAgBlO,IAAa,CACzBvrB,EAAGurB,EAAS4Z,WACZllC,EAAGsrB,EAAS8Z,YAEhB7L,cAAe,KACX,IAAK1K,GAAmB52B,QAAS,CAC7B,MAAMqtC,EAAe,IAAIN,GAAuB,CAAC,GACjDM,EAAangB,MAAM7pB,QACnBgqC,EAAaxS,WAAW,CAAEuL,cAAc,IACxCxP,GAAmB52B,QAAUqtC,CACjC,CACA,OAAOzW,GAAmB52B,OAAO,EAErCyhC,eAAgB,CAACpO,EAAUt7B,KACvBs7B,EAAS4E,MAAMj/B,eAAsBmD,IAAVpE,EAAsBA,EAAQ,MAAM,EAEnEypC,kBAAoBnO,GAAa73B,QAAuD,UAA/C6H,OAAOmW,iBAAiB6Z,GAAUia,YClBzE5Y,GAAO,CACT6Y,IAAK,CACD5gB,QvBKR,cAAyBA,GACrB,WAAAvyB,GACI8f,SAASoT,WACTjzB,KAAKmzC,0BAA4B50C,EAAA,CACrC,CACA,aAAA60C,CAAcC,GACVrzC,KAAKszC,QAAU,IAAIvf,GAAWsf,EAAkBrzC,KAAKuzC,oBAAqB,CACtEtf,mBAAoBj0B,KAAKuyB,KAAK+I,wBAC9BpH,cAAemF,GAAiBr5B,KAAKuyB,OAE7C,CACA,iBAAAghB,GACI,MAAM,kBAAEC,EAAiB,WAAEC,EAAU,MAAEC,EAAK,SAAEC,GAAa3zC,KAAKuyB,KAAK1e,WACrE,MAAO,CACH6hB,eAAgB6I,GAAaiV,GAC7Bze,QAASwJ,GAAakV,GACtBze,OAAQ0e,EACRre,MAAO,CAACzmB,EAAO2lB,YACJv0B,KAAKszC,QACRK,GACA,KAAM7Y,YAAW,IAAM6Y,EAAS/kC,EAAO2lB,IAC3C,EAGZ,CACA,KAAA1B,GACI7yB,KAAKmzC,0BAA4Btf,GAAgB7zB,KAAKuyB,KAAK5sB,QAAS,eAAgBiJ,GAAU5O,KAAKozC,cAAcxkC,IACrH,CACA,MAAAyZ,GACIroB,KAAKszC,SAAWtzC,KAAKszC,QAAQ1d,eAAe51B,KAAKuzC,oBACrD,CACA,OAAAvgB,GACIhzB,KAAKmzC,4BACLnzC,KAAKszC,SAAWtzC,KAAKszC,QAAQle,KACjC,IuBrCAiF,KAAM,CACF/H,QCNR,cAA0BA,GACtB,WAAAvyB,CAAYwyB,GACR1S,MAAM0S,GACNvyB,KAAK4zC,oBAAsBr1C,EAAA,EAC3ByB,KAAK21B,gBAAkBp3B,EAAA,EACvByB,KAAKmK,SAAW,IAAIuvB,GAA0BnH,EAClD,CACA,KAAAM,GAGI,MAAM,aAAEghB,GAAiB7zC,KAAKuyB,KAAK1e,WAC/BggC,IACA7zC,KAAK4zC,oBAAsBC,EAAajhB,UAAU5yB,KAAKmK,WAE3DnK,KAAK21B,gBAAkB31B,KAAKmK,SAAS4zB,gBAAkBx/B,EAAA,CAC3D,CACA,OAAAy0B,GACIhzB,KAAK4zC,sBACL5zC,KAAK21B,iBACT,GDZIme,eAAgBf,GAChBtR,cAAa,KEPrB,SAASsS,GAAiBxhB,EAAM3jB,EAAOolC,GACnC,MAAM,MAAEzgC,GAAUgf,EACdA,EAAK/E,gBAAkBja,EAAM0e,YAC7BM,EAAK/E,eAAemE,UAAU,aAA4B,UAAdqiB,GAEhD,MACMpxC,EAAW2Q,EADE,UAAYygC,GAE3BpxC,GACA,KAAMk4B,YAAW,IAAMl4B,EAASgM,EAAO6kB,GAAiB7kB,KAEhE,CCVA,SAASqlC,GAAiB1hB,EAAM3jB,EAAOolC,GACnC,MAAM,MAAEzgC,GAAUgf,EACdA,EAAK/E,gBAAkBja,EAAM2e,UAC7BK,EAAK/E,eAAemE,UAAU,WAA0B,UAAdqiB,GAE9C,MACMpxC,EAAW2Q,EADE,SAAyB,QAAdygC,EAAsB,GAAKA,IAErDpxC,GACA,KAAMk4B,YAAW,IAAMl4B,EAASgM,EAAO6kB,GAAiB7kB,KAEhE,CCVA,MAAMslC,GAAoB,IAAIza,QAMxB0a,GAAY,IAAI1a,QAChB2a,GAAwBC,IAC1B,MAAMzxC,EAAWsxC,GAAkBnsC,IAAIssC,EAAMllC,QAC7CvM,GAAYA,EAASyxC,EAAM,EAEzBC,GAA4BC,IAC9BA,EAAQzqC,QAAQsqC,GAAqB,EAqBzC,SAASI,GAAoB/kC,EAAS3J,EAASlD,GAC3C,MAAM6xC,EApBV,UAAkC,KAAExmC,KAASnI,IACzC,MAAM4uC,EAAazmC,GAAQlC,SAItBooC,GAAUtjC,IAAI6jC,IACfP,GAAUlvC,IAAIyvC,EAAY,CAAC,GAE/B,MAAMC,EAAgBR,GAAUpsC,IAAI2sC,GAC9Br3C,EAAMu3C,KAAKC,UAAU/uC,GAQ3B,OAHK6uC,EAAct3C,KACfs3C,EAAct3C,GAAO,IAAIy3C,qBAAqBR,GAA0B,CAAErmC,UAASnI,KAEhF6uC,EAAct3C,EACzB,CAEsC03C,CAAyBjvC,GAG3D,OAFAouC,GAAkBjvC,IAAIwK,EAAS7M,GAC/B6xC,EAA0BO,QAAQvlC,GAC3B,KACHykC,GAAkBviC,OAAOlC,GACzBglC,EAA0BQ,UAAUxlC,EAAQ,CAEpD,CC3CA,MAAMylC,GAAiB,CACnBxwB,KAAM,EACNpb,IAAK,GCAT,MAAM6rC,GAAoB,CACtBC,OAAQ,CACJ9iB,QDAR,cAA4BA,GACxB,WAAAvyB,GACI8f,SAASoT,WACTjzB,KAAKq1C,gBAAiB,EACtBr1C,KAAKs1C,UAAW,CACpB,CACA,aAAAC,GACIv1C,KAAKgzB,UACL,MAAM,SAAEwiB,EAAW,CAAC,GAAMx1C,KAAKuyB,KAAK1e,YAC9B,KAAE5F,EAAM6K,OAAQ28B,EAAU,OAAEC,EAAS,OAAM,KAAEC,GAASH,EACtD1vC,EAAU,CACZmI,KAAMA,EAAOA,EAAKtI,aAAU7D,EAC5B2zC,aACAG,UAA6B,iBAAXF,EAAsBA,EAASR,GAAeQ,IA+BpE,OAAOlB,GAAoBx0C,KAAKuyB,KAAK5sB,QAASG,GA7BhBuuC,IAC1B,MAAM,eAAEwB,GAAmBxB,EAI3B,GAAIr0C,KAAKs1C,WAAaO,EAClB,OAMJ,GALA71C,KAAKs1C,SAAWO,EAKZF,IAASE,GAAkB71C,KAAKq1C,eAChC,OAEKQ,IACL71C,KAAKq1C,gBAAiB,GAEtBr1C,KAAKuyB,KAAK/E,gBACVxtB,KAAKuyB,KAAK/E,eAAemE,UAAU,cAAekkB,GAMtD,MAAM,gBAAEC,EAAe,gBAAEC,GAAoB/1C,KAAKuyB,KAAK1e,WACjDjR,EAAWizC,EAAiBC,EAAkBC,EACpDnzC,GAAYA,EAASyxC,EAAM,GAGnC,CACA,KAAAxhB,GACI7yB,KAAKu1C,eACT,CACA,MAAAltB,GACI,GAAoC,oBAAzBysB,qBACP,OACJ,MAAM,MAAEvhC,EAAK,UAAEwf,GAAc/yB,KAAKuyB,KACR,CAAC,SAAU,SAAU,QAAQ7N,KAO/D,UAAkC,SAAE8wB,EAAW,CAAC,IAAOA,SAAUQ,EAAe,CAAC,GAAM,CAAC,GACpF,OAAQn/B,GAAS2+B,EAAS3+B,KAAUm/B,EAAan/B,EACrD,CAToEo/B,CAAyB1iC,EAAOwf,KAExF/yB,KAAKu1C,eAEb,CACA,OAAAviB,GAAY,ICxDZkjB,IAAK,CACD5jB,QHMR,cAA2BA,GACvB,KAAAO,GACI,MAAM,QAAEltB,GAAY3F,KAAKuyB,KACpB5sB,IAEL3F,KAAKgzB,SAAU,QAAMrtB,GAAUyL,IAC3B6iC,GAAiBj0C,KAAKuyB,KAAMnhB,EAAY,SACjC,CAACG,GAAYC,aAAcyiC,GAAiBj0C,KAAKuyB,KAAMhhB,EAAUC,EAAU,MAAQ,YAC3F,CAAEK,gBAAiB7R,KAAKuyB,KAAKhf,MAAM4iC,kBAC1C,CACA,OAAAnjB,GAAY,IGdZojB,MAAO,CACH9jB,QCTR,cAA2BA,GACvB,WAAAvyB,GACI8f,SAASoT,WACTjzB,KAAKuwB,UAAW,CACpB,CACA,OAAA8lB,GACI,IAAIC,GAAiB,EAOrB,IACIA,EAAiBt2C,KAAKuyB,KAAK5sB,QAAQ4wC,QAAQ,iBAC/C,CACA,MAAOpqC,GACHmqC,GAAiB,CACrB,CACKA,GAAmBt2C,KAAKuyB,KAAK/E,iBAElCxtB,KAAKuyB,KAAK/E,eAAemE,UAAU,cAAc,GACjD3xB,KAAKuwB,UAAW,EACpB,CACA,MAAAimB,GACSx2C,KAAKuwB,UAAavwB,KAAKuyB,KAAK/E,iBAEjCxtB,KAAKuyB,KAAK/E,eAAemE,UAAU,cAAc,GACjD3xB,KAAKuwB,UAAW,EACpB,CACA,KAAAsC,GACI7yB,KAAKgzB,SAAU,EAAA50B,GAAA,GAAKo1B,GAAYxzB,KAAKuyB,KAAK5sB,QAAS,SAAS,IAAM3F,KAAKq2C,YAAY7iB,GAAYxzB,KAAKuyB,KAAK5sB,QAAS,QAAQ,IAAM3F,KAAKw2C,WACzI,CACA,OAAAxjB,GAAY,IDtBZlkB,MAAO,CACHwjB,QJAR,cAA2BA,GACvB,KAAAO,GACI,MAAM,QAAEltB,GAAY3F,KAAKuyB,KACpB5sB,IAEL3F,KAAKgzB,SAAU,QAAMrtB,GAAUyL,IAC3B2iC,GAAiB/zC,KAAKuyB,KAAMnhB,EAAY,SAChCG,GAAawiC,GAAiB/zC,KAAKuyB,KAAMhhB,EAAU,UAEnE,CACA,OAAAyhB,GAAY,KMvBV6D,GAAS,CACXA,OAAQ,CACJid,eAAgBf,GAChBtR,cAAa,KCHfgV,IAAc,KAAAhY,eAAc,CAAEiY,QAAQ,I,eCA5C,MAAMC,IAAgB,KAAAlY,eAAc,CAAC,GCCrC,SAASxP,GAAsB1b,GAC3B,OAAQR,EAAoBQ,EAAMtH,UAC9B8H,EAAa2Q,MAAM7N,GAAS1D,EAAeI,EAAMsD,KACzD,CACA,SAAS+/B,GAAcrjC,GACnB,OAAOpS,QAAQ8tB,GAAsB1b,IAAUA,EAAMI,SACzD,CCNA,SAASkjC,GAAuBtjC,GAC5B,MAAM,QAAE4b,EAAO,QAAEljB,GCFrB,SAAgCsH,EAAO2b,GACnC,GAAID,GAAsB1b,GAAQ,CAC9B,MAAM,QAAE4b,EAAO,QAAEljB,GAAYsH,EAC7B,MAAO,CACH4b,SAAqB,IAAZA,GAAqBhc,EAAegc,GACvCA,OACArtB,EACNmK,QAASkH,EAAelH,GAAWA,OAAUnK,EAErD,CACA,OAAyB,IAAlByR,EAAMujC,QAAoB5nB,EAAU,CAAC,CAChD,CDTiC6nB,CAAuBxjC,GAAO,KAAAmuB,YAAWiV,KACtE,OAAO,KAAAK,UAAQ,KAAM,CAAG7nB,UAASljB,aAAY,CAACgrC,GAA0B9nB,GAAU8nB,GAA0BhrC,IAChH,CACA,SAASgrC,GAA0B7nB,GAC/B,OAAO7jB,MAAMC,QAAQ4jB,GAAQA,EAAKjY,KAAK,KAAOiY,CAClD,C,eEVA,MAAM8nB,GAAe,CACjB5uC,UAAW,CACP,UACA,WACA,aACA,WACA,OACA,cACA,aACA,aAEJ+pB,KAAM,CAAC,QACPgI,KAAM,CAAC,OAAQ,gBACf+b,MAAO,CAAC,cACRtnC,MAAO,CAAC,aAAc,eAAgB,cACtConC,IAAK,CAAC,WAAY,QAAS,aAAc,eACzChD,IAAK,CAAC,QAAS,aAAc,oBAAqB,YAClDkC,OAAQ,CAAC,cAAe,kBAAmB,mBAC3Cve,OAAQ,CAAC,SAAU,aAEjBsgB,GAAqB,CAAC,EAC5B,IAAK,MAAM95C,MAAO65C,GACdC,GAAmB95C,IAAO,CACtB+5C,UAAY7jC,GAAU2jC,GAAa75C,IAAKqnB,MAAM7N,KAAWtD,EAAMsD,MCvBvE,MAAMwgC,GAAwBC,OAAOC,IAAI,yBCOzC,SAASC,GAAaC,EAAapkC,EAAeqkC,GAC9C,OAAO,KAAAC,cAAa3e,IACZA,GACAye,EAAYG,SAAWH,EAAYG,QAAQ5e,GAE3C3lB,IACI2lB,EACA3lB,EAAcwf,MAAMmG,GAGpB3lB,EAAc2f,WAGlB0kB,IAC2B,mBAAhBA,EACPA,EAAY1e,GAEP7C,GAAYuhB,KACjBA,EAAY/xC,QAAUqzB,GAE9B,GAOJ,CAAC3lB,GACL,C,0BCxBA,SAASwkC,GAAiB/X,EAAW2X,EAAalkC,EAAOukC,EAAqBC,GAC1E,IAAIxzC,EAAIC,EACR,MAAQ6O,cAAe1D,IAAW,KAAA+xB,YAAWiV,IACvCqB,GAAc,KAAAtW,YAAW+U,IACzBvoB,GAAkB,KAAAwT,YAAWuW,GAAA,GAC7BC,GAAsB,KAAAxW,YAAWyW,GAAA,GAAqBC,cACtDC,GAAmB,KAAAC,QAAO,MAIhCR,EAAsBA,GAAuBE,EAAYO,UACpDF,EAAiB1yC,SAAWmyC,IAC7BO,EAAiB1yC,QAAUmyC,EAAoBhY,EAAW,CACtD2X,cACA9nC,SACA4D,QACA2a,kBACAoD,wBAAuBpD,IACW,IAA5BA,EAAgBiB,QAEtB+oB,yBAGR,MAAM7kC,EAAgBglC,EAAiB1yC,QAKjC6yC,GAA2B,KAAA9W,YAAWlD,KACxCnrB,GACCA,EAAconB,aACfsd,GACwB,SAAvB1kC,EAAcpS,MAA0C,QAAvBoS,EAAcpS,MA2DxD,SAA8BoS,EAAeE,EAAOwkC,EAA2B1H,GAC3E,MAAM,SAAEnQ,EAAQ,OAAErJ,EAAM,KAAEwD,EAAI,gBAAEuB,EAAe,aAAEmQ,EAAY,WAAEzB,GAAgB/2B,EAC/EF,EAAconB,WAAa,IAAIsd,EAA0B1kC,EAAcqa,aAAcna,EAAM,8BACrFzR,EACA22C,GAAyBplC,EAAc1D,SAC7C0D,EAAconB,WAAW+F,WAAW,CAChCN,WACArJ,SACA8U,oBAAqBxqC,QAAQk5B,IAAUuB,GAAmBzF,GAAYyF,GACtEvoB,gBAQA48B,cAAiC,iBAAXpZ,EAAsBA,EAAS,OACrDwZ,yBACAtE,eACAzB,cAER,CAhFQ,CAAqB+N,EAAiB1yC,QAAS4N,EAAOwkC,EAA2BS,GAErF,MAAMhmB,GAAY,KAAA8lB,SAAO,IACzB,KAAAI,qBAAmB,KAKXrlC,GAAiBmf,EAAU7sB,SAC3B0N,EAAcgV,OAAO9U,EAAO2a,EAChC,IAMJ,MAAMyqB,EAAoBplC,EAAMsB,GAC1B+jC,GAAe,KAAAN,QAAOn3C,QAAQw3C,MACY,QAAzCp0C,EAAKyE,OAAO6vC,+BAA4C,IAAPt0C,OAAgB,EAASA,EAAG/C,KAAKwH,OAAQ2vC,MAC9C,QAA7Cn0C,EAAKwE,OAAO69B,mCAAgD,IAAPriC,OAAgB,EAASA,EAAGhD,KAAKwH,OAAQ2vC,KAqCpG,OApCA,SAA0B,KACjBtlC,IAELmf,EAAU7sB,SAAU,EACpBqD,OAAO8vC,iBAAkB,EACzBzlC,EAAc0lC,iBACdpZ,GAAUx5B,OAAOkN,EAAclN,QAW3ByyC,EAAajzC,SAAW0N,EAAcma,gBACtCna,EAAcma,eAAeuC,iBACjC,KAEJ,KAAAxd,YAAU,KACDc,KAEAulC,EAAajzC,SAAW0N,EAAcma,gBACvCna,EAAcma,eAAeuC,iBAE7B6oB,EAAajzC,UAEbJ,gBAAe,KACX,IAAIhB,EAC0C,QAA7CA,EAAKyE,OAAOgwC,mCAAgD,IAAPz0C,GAAyBA,EAAG/C,KAAKwH,OAAQ2vC,EAAkB,IAErHC,EAAajzC,SAAU,GAC3B,IAEG0N,CACX,CAwBA,SAASolC,GAAyBplC,GAC9B,GAAKA,EAEL,OAAiD,IAA1CA,EAAcvN,QAAQmzC,gBACvB5lC,EAAconB,WACdge,GAAyBplC,EAAc1D,OACjD,CC1GA,SAASupC,IAA8B,kBAAEC,EAAiB,oBAAErB,EAAmB,UAAEsB,EAAS,eAAEC,EAAc,UAAEvZ,IACxG,IAAIv7B,EAAIC,EAER,SAAS80C,EAAgB/lC,EAAOmkC,GAK5B,IAAIjW,EACJ,MAAM8X,EAAiB,KAChB,KAAA7X,YAAWyW,GAAA,MACX5kC,EACH2sB,SAAUsZ,GAAYjmC,KAEpB,SAAEkmC,GAAaF,EACfrqB,EAAU2nB,GAAuBtjC,GACjCkkC,EAAc4B,EAAe9lC,EAAOkmC,GAC1C,IAAKA,GAAY,KAAW,EA+BpC,YACqB,KAAA/X,YAAW+U,IAAaC,OAKrC,CAQR,CA5CYgD,GACA,MAAMC,EA4ClB,SAAoCpmC,GAChC,MAAM,KAAE8mB,EAAI,OAAExD,GAAWsgB,GACzB,IAAK9c,IAASxD,EACV,MAAO,CAAC,EACZ,MAAM+iB,EAAW,IAAKvf,KAASxD,GAC/B,MAAO,CACH4K,eAAgBpH,aAAmC,EAASA,EAAK+c,UAAU7jC,MAAYsjB,aAAuC,EAASA,EAAOugB,UAAU7jC,IAClJqmC,EAASnY,mBACT3/B,EACNgyC,eAAgB8F,EAAS9F,eAEjC,CAvDqC+F,CAA2BN,GACpD9X,EAAgBkY,EAAiBlY,cAOjCvS,EAAQ7b,cAAgBwkC,GAAiB/X,EAAW2X,EAAa8B,EAAgBzB,EAAqB6B,EAAiB7F,eAC3H,CAKA,OAAQ,KAAAgG,MAAKnD,GAAcoD,SAAU,CAAEr8C,MAAOwxB,EAASgT,SAAU,CAACT,GAAiBvS,EAAQ7b,eAAiB,KAAAwuB,KAAIJ,EAAe,CAAEpuB,cAAe6b,EAAQ7b,iBAAkBkmC,IAAqB,KAAMH,EAAUtZ,EAAWvsB,EAAOikC,GAAaC,EAAavoB,EAAQ7b,cAAeqkC,GAAcD,EAAagC,EAAUvqB,EAAQ7b,iBACnU,CAhCA8lC,GCzBJ,SAAsBa,GAClB,IAAK,MAAM38C,KAAO28C,EACd7C,GAAmB95C,GAAO,IACnB85C,GAAmB95C,MACnB28C,EAAS38C,GAGxB,CDkByB48C,CAAad,GAiClCG,EAAgBY,YAAc,UAA+B,iBAAdpa,EACzCA,EACA,UAAkG,QAAvFt7B,EAAsC,QAAhCD,EAAKu7B,EAAUoa,mBAAgC,IAAP31C,EAAgBA,EAAKu7B,EAAUjpB,YAAyB,IAAPrS,EAAgBA,EAAK,QACrI,MAAM21C,GAA4B,KAAAC,YAAWd,GAE7C,OADAa,EAA0B9C,IAAyBvX,EAC5Cqa,CACX,CACA,SAASX,IAAY,SAAEtZ,IACnB,MAAMma,GAAgB,KAAA3Y,YAAWC,GAAAC,GAAoBnP,GACrD,OAAO4nB,QAA8Bv4C,IAAbo+B,EAClBma,EAAgB,IAAMna,EACtBA,CACV,CEpEA,MAAMoa,GAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,QC3BJ,SAASC,GAAeza,GACpB,MAKqB,iBAAdA,IAIHA,EAAUyS,SAAS,SAOvB+H,GAAqBh7C,QAAQwgC,IAAc,GAIvC,SAASliC,KAAKkiC,GAItB,C,eCFA,MAAM0a,GAAsBpK,GAAW,CAAC78B,EAAOkmC,KAC3C,MAAMvqB,GAAU,KAAAwS,YAAWiV,IACrBzoB,GAAkB,KAAAwT,YAAWuW,GAAA,GAC7BwC,EAAO,IAnBjB,UAAmB,4BAAEC,EAA2B,kBAAEC,EAAiB,SAAE14B,GAAa1O,EAAO2b,EAAShB,GAC9F,MAAMpxB,EAAQ,CACV4wB,aAAcktB,GAAiBrnC,EAAO2b,EAAShB,EAAiBwsB,GAChEG,YAAaF,KAWjB,OATI14B,IAMAnlB,EAAM86C,QAAW5e,GAAa/W,EAAS,CAAE1O,QAAO5N,QAASqzB,KAAal8B,IACtEA,EAAMmlB,SAAY5O,GAAkB4O,EAAS5O,IAE1CvW,CACX,CAIuBg+C,CAAU1K,EAAQ78B,EAAO2b,EAAShB,GACrD,OAAOurB,EAAWgB,KAAS,QAAYA,EAAK,EAEhD,SAASG,GAAiBrnC,EAAO2b,EAAShB,EAAiB6sB,GACvD,MAAMv3C,EAAS,CAAC,EACVw3C,EAAeD,EAAmBxnC,EAAO,CAAC,GAChD,IAAK,MAAMlW,KAAO29C,EACdx3C,EAAOnG,GAAOilC,GAAmB0Y,EAAa39C,IAElD,IAAI,QAAE8xB,EAAO,QAAEljB,GAAYsH,EAC3B,MAAM0nC,EAA0BhsB,GAAsB1b,GAChD2nC,EAAkBtE,GAAcrjC,GAClC2b,GACAgsB,IACCD,IACiB,IAAlB1nC,EAAMujC,eACUh1C,IAAZqtB,IACAA,EAAUD,EAAQC,cACNrtB,IAAZmK,IACAA,EAAUijB,EAAQjjB,UAE1B,IAAIkvC,IAA4BjtB,IACE,IAA5BA,EAAgBiB,QAEtBgsB,EAA4BA,IAAyC,IAAZhsB,EACzD,MAAMisB,EAAeD,EAA4BlvC,EAAUkjB,EAC3D,GAAIisB,GACwB,kBAAjBA,IACNroC,EAAoBqoC,GAAe,CACpC,MAAMC,EAAO9vC,MAAMC,QAAQ4vC,GAAgBA,EAAe,CAACA,GAC3D,IAAK,IAAI56C,EAAI,EAAGA,EAAI66C,EAAK96C,OAAQC,IAAK,CAClC,MAAM0e,EAAW5L,EAAwBC,EAAO8nC,EAAK76C,IACrD,GAAI0e,EAAU,CACV,MAAM,cAAEoO,EAAa,WAAE1iB,KAAeuE,GAAW+P,EACjD,IAAK,MAAM7hB,KAAO8R,EAAQ,CACtB,IAAIwe,EAAcxe,EAAO9R,GACzB,GAAIkO,MAAMC,QAAQmiB,GAAc,CAQ5BA,EAAcA,EAHAwtB,EACRxtB,EAAYptB,OAAS,EACrB,EAEV,CACoB,OAAhBotB,IACAnqB,EAAOnG,GAAOswB,EAEtB,CACA,IAAK,MAAMtwB,KAAOiwB,EACd9pB,EAAOnG,GAAOiwB,EAAcjwB,EAEpC,CACJ,CACJ,CACA,OAAOmG,CACX,CClFA,MAAM83C,GAAiB,CAAC59C,EAAOuD,IACpBA,GAAyB,iBAAVvD,EAChBuD,EAAKtC,UAAUjB,GACfA,ECFJ69C,GAAiB,CACnB9tC,EAAG,aACHC,EAAG,aACH0M,EAAG,aACHE,qBAAsB,eAEpBkhC,GAAgBxnC,EAAmBzT,OCJzC,SAASk7C,GAAgB3+C,EAAO4wB,EAAc1B,GAC1C,MAAM,MAAE4R,EAAK,KAAE8d,EAAI,gBAAEnK,GAAoBz0C,EAEzC,IAAIi7B,GAAe,EACf4jB,GAAqB,EAOzB,IAAK,MAAMt+C,KAAOqwB,EAAc,CAC5B,MAAMhwB,EAAQgwB,EAAarwB,GAC3B,GAAI4W,EAAepD,IAAIxT,GAEnB06B,GAAe,OAGd,IAAI,QAAkB16B,GACvBq+C,EAAKr+C,GAAOK,MAGX,CAED,MAAMk+C,EAAcN,GAAe59C,EAAOgd,EAAiBrd,IACvDA,EAAIC,WAAW,WAEfq+C,GAAqB,EACrBpK,EAAgBl0C,GACZu+C,GAGJhe,EAAMvgC,GAAOu+C,CAErB,CACJ,CAiBA,GAhBKluB,EAAa/uB,YACVo5B,GAAgB/L,EAChB4R,EAAMj/B,UD3BlB,SAAwB+uB,EAAc/uB,EAAWqtB,GAE7C,IAAI6vB,EAAkB,GAClBC,GAAqB,EAKzB,IAAK,IAAIt7C,EAAI,EAAGA,EAAIg7C,GAAeh7C,IAAK,CACpC,MAAMnD,EAAM2W,EAAmBxT,GACzB9C,EAAQgwB,EAAarwB,GAC3B,QAAcyE,IAAVpE,EACA,SACJ,IAAIq+C,GAAiB,EAOrB,GALIA,EADiB,iBAAVr+C,EACUA,KAAWL,EAAIC,WAAW,SAAW,EAAI,GAGnB,IAAtBsD,WAAWlD,IAE3Bq+C,GAAkB/vB,EAAmB,CACtC,MAAM4vB,EAAcN,GAAe59C,EAAOgd,EAAiBrd,IACtD0+C,IACDD,GAAqB,EAErBD,GAAmB,GADGN,GAAel+C,IAAQA,KACNu+C,OAEvC5vB,IACArtB,EAAUtB,GAAOu+C,EAEzB,CACJ,CAUA,OATAC,EAAkBA,EAAgB/9C,OAG9BkuB,EACA6vB,EAAkB7vB,EAAkBrtB,EAAWm9C,EAAqB,GAAKD,GAEpEC,IACLD,EAAkB,QAEfA,CACX,CCf8BG,CAAetuB,EAAc5wB,EAAM6B,UAAWqtB,GAE3D4R,EAAMj/B,YAKXi/B,EAAMj/B,UAAY,SAOtBg9C,EAAoB,CACpB,MAAM,QAAEphC,EAAU,MAAK,QAAEC,EAAU,MAAK,QAAEC,EAAU,GAAO82B,EAC3D3T,EAAM2T,gBAAkB,GAAGh3B,KAAWC,KAAWC,GACrD,CACJ,CC5DA,MAAMwhC,GAAW,CACbj6C,OAAQ,oBACRk6C,MAAO,oBAELC,GAAY,CACdn6C,OAAQ,mBACRk6C,MAAO,mBCNX,SAAS,GAAWl8B,EAAQhe,EAAQ4Y,GAChC,MAAyB,iBAAXoF,EACRA,EACA,EAAA1I,GAAG3Y,UAAUqD,EAAS4Y,EAAOoF,EACvC,CCCA,SAASo8B,GAAct/C,GAAO,MAAEu/C,EAAK,MAAEC,EAAK,UAAEC,EAAS,QAAEhiC,EAAO,QAAEC,EAAO,WAAEgiC,EAAU,YAAEC,EAAc,EAAC,WAAEC,EAAa,KAElH11B,GAAU21B,EAAU3wB,GAMnB,GALAyvB,GAAgB3+C,EAAOkqB,EAAQgF,GAK3B2wB,EAIA,YAHI7/C,EAAM8gC,MAAMgf,UACZ9/C,EAAM+/C,MAAMD,QAAU9/C,EAAM8gC,MAAMgf,UAI1C9/C,EAAM+/C,MAAQ//C,EAAM8gC,MACpB9gC,EAAM8gC,MAAQ,CAAC,EACf,MAAM,MAAEif,EAAK,MAAEjf,EAAK,WAAEkf,GAAehgD,EAKjC+/C,EAAMl+C,YACFm+C,IACAlf,EAAMj/B,UAAYk+C,EAAMl+C,kBACrBk+C,EAAMl+C,WAGbm+C,SACah7C,IAAZyY,QAAqCzY,IAAZ0Y,GAAyBojB,EAAMj/B,aACzDi/B,EAAM2T,gBDzBd,SAAgCuL,EAAYviC,EAASC,GAGjD,MAAO,GAFW,GAAWD,EAASuiC,EAAWrvC,EAAGqvC,EAAW7kC,UAC7C,GAAWuC,EAASsiC,EAAWpvC,EAAGovC,EAAW3kC,SAEnE,CCqBgC4kC,CAAuBD,OAAwBh7C,IAAZyY,EAAwBA,EAAU,QAAiBzY,IAAZ0Y,EAAwBA,EAAU,UAG1H1Y,IAAVu6C,IACAQ,EAAMpvC,EAAI4uC,QACAv6C,IAAVw6C,IACAO,EAAMnvC,EAAI4uC,QACIx6C,IAAdy6C,IACAM,EAAMh8C,MAAQ07C,QAECz6C,IAAf06C,GF7BR,SAAsBK,EAAOt8C,EAAQy8C,EAAU,EAAGh7C,EAAS,EAAGi7C,GAAc,GAExEJ,EAAML,WAAa,EAGnB,MAAM/3B,EAAOw4B,EAAchB,GAAWE,GAEtCU,EAAMp4B,EAAKziB,QAAU,EAAAsV,GAAG3Y,WAAWqD,GAEnC,MAAMw6C,EAAa,EAAAllC,GAAG3Y,UAAU4B,GAC1Bk8C,EAAc,EAAAnlC,GAAG3Y,UAAUq+C,GACjCH,EAAMp4B,EAAKy3B,OAAS,GAAGM,KAAcC,GACzC,CEkBQS,CAAaL,EAAOL,EAAYC,EAAaC,GAAY,EAEjE,CCjDA,MAAMS,GAAwB,KAAM,CAChCvf,MAAO,CAAC,EACRj/B,UAAW,CAAC,EACZ4yC,gBAAiB,CAAC,EAClBmK,KAAM,CAAC,ICFL0B,GAAuB,KAAM,CDD/Bxf,MAAO,CAAC,EACRj/B,UAAW,CAAC,EACZ4yC,gBAAiB,CAAC,EAClBmK,KAAM,CAAC,ECAPmB,MAAO,CAAC,ICJNF,GAAYU,GAAuB,iBAARA,GAA0C,QAAtBA,EAAIzoC,cCAzD,SAAS0oC,GAAW7tC,GAAS,MAAEmuB,EAAK,KAAE8d,GAAQ/K,EAAWlW,GACrDp5B,OAAO+nB,OAAO3Z,EAAQmuB,MAAOA,EAAOnD,GAAcA,EAAWiW,oBAAoBC,IAEjF,IAAK,MAAMtzC,KAAOq+C,EACdjsC,EAAQmuB,MAAM2f,YAAYlgD,EAAKq+C,EAAKr+C,GAE5C,CCHA,MAAMmgD,GAAsB,IAAIttC,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,aACA,cACA,aACA,iBCtBJ,SAASutC,GAAUhuC,EAASorC,EAAa6C,EAAYjjB,GACjD6iB,GAAW7tC,EAASorC,OAAa/4C,EAAW24B,GAC5C,IAAK,MAAMp9B,KAAOw9C,EAAYgC,MAC1BptC,EAAQkuC,aAAcH,GAAoB3sC,IAAIxT,GAA0BA,EAAnBqX,EAAYrX,GAAYw9C,EAAYgC,MAAMx/C,GAEvG,CCNA,SAASugD,GAAoBvgD,GAAK,OAAEw5B,EAAM,SAAEqJ,IACxC,OAAQjsB,EAAepD,IAAIxT,IACvBA,EAAIC,WAAW,YACbu5B,QAAuB/0B,IAAbo+B,OACLR,GAAgBriC,IAAgB,YAARA,EACvC,CCLA,SAASq9C,GAA4BnnC,EAAOwf,EAAW1f,GACnD,IAAI9O,EACJ,MAAM,MAAEq5B,GAAUrqB,EACZsqC,EAAY,CAAC,EACnB,IAAK,MAAMxgD,KAAOugC,GACVrpB,EAAcqpB,EAAMvgC,KACnB01B,EAAU6K,OACPrpB,EAAcwe,EAAU6K,MAAMvgC,KAClCugD,GAAoBvgD,EAAKkW,SACgIzR,KAAnD,QAApGyC,EAAK8O,aAAqD,EAASA,EAAcgB,SAAShX,UAAyB,IAAPkH,OAAgB,EAASA,EAAG6sB,cAC1IysB,EAAUxgD,GAAOugC,EAAMvgC,IAG/B,OAAOwgD,CACX,CCbA,SAAS,GAA4BtqC,EAAOwf,EAAW1f,GACnD,MAAMwqC,EAAYnD,GAA8BnnC,EAAOwf,EAAW1f,GAClE,IAAK,MAAMhW,KAAOkW,EACd,GAAIgB,EAAchB,EAAMlW,KACpBkX,EAAcwe,EAAU11B,IAAO,CAI/BwgD,GAHuD,IAArC7pC,EAAmB1U,QAAQjC,GACvC,OAASA,EAAIygD,OAAO,GAAGzgB,cAAgBhgC,EAAImP,UAAU,GACrDnP,GACiBkW,EAAMlW,EACjC,CAEJ,OAAOwgD,CACX,CCUA,MAAME,GAAc,CAAC,IAAK,IAAK,QAAS,SAAU,KAAM,KAAM,KACxDC,GAAkB,CACpB3E,eAAgBmB,GAAmB,CAC/BE,4BAA6B,GAC7BC,kBAAmByC,GACnBn7B,SAAU,EAAG1O,QAAOwf,YAAWptB,UAASk1C,cAAantB,mBACjD,IAAK/nB,EACD,OACJ,IAAIoyB,IAAiBxkB,EAAM8mB,KAC3B,IAAKtC,EACD,IAAK,MAAM16B,KAAOqwB,EACd,GAAIzZ,EAAepD,IAAIxT,GAAM,CACzB06B,GAAe,EACf,KACJ,CAGR,IAAKA,EACD,OACJ,IAAIkmB,GAAgBlrB,EACpB,GAAIA,EAKA,IAAK,IAAIvyB,EAAI,EAAGA,EAAIu9C,GAAYx9C,OAAQC,IAAK,CACzC,MAAMnD,EAAM0gD,GAAYv9C,GACpB+S,EAAMlW,KACN01B,EAAU11B,KACV4gD,GAAe,EAEvB,CAECA,GAEL,KAAM72C,MAAK,MApDvB,SAA6B4xB,EAAU6hB,GACnC,IACIA,EAAYiC,WACoB,mBAArB9jB,EAASklB,QACVllB,EAASklB,UACTllB,EAASI,uBACvB,CACA,MAAOjtB,GAEH0uC,EAAYiC,WAAa,CACrBrvC,EAAG,EACHC,EAAG,EACHuK,MAAO,EACPE,OAAQ,EAEhB,CACJ,CAqCgBgmC,CAAoBx4C,EAASk1C,GAC7B,KAAM10C,QAAO,KACTi2C,GAAcvB,EAAantB,EAAcivB,GAASh3C,EAAQoM,SAAUwB,EAAMyY,mBAC1EyxB,GAAU93C,EAASk1C,EAAY,GACjC,GACJ,KC/DRuD,GAAmB,CACrB/E,eAAgBmB,GAAmB,CAC/BE,4BAA2B,GAC3BC,kBAAmBwC,MCD3B,SAASkB,GAAkBlvC,EAAQlL,EAAQsP,GACvC,IAAK,MAAMlW,KAAO4G,EACTsQ,EAActQ,EAAO5G,KAAUugD,GAAoBvgD,EAAKkW,KACzDpE,EAAO9R,GAAO4G,EAAO5G,GAGjC,CAQA,SAASihD,GAAS/qC,EAAOkkC,GACrB,MACM7Z,EAAQ,CAAC,EAMf,OAFAygB,GAAkBzgB,EALArqB,EAAMqqB,OAAS,CAAC,EAKErqB,GACpClS,OAAO+nB,OAAOwU,EAdlB,UAAgC,kBAAE5R,GAAqByrB,GACnD,OAAO,KAAAT,UAAQ,KACX,MAAMl6C,EXfsB,CAChC8gC,MAAO,CAAC,EACRj/B,UAAW,CAAC,EACZ4yC,gBAAiB,CAAC,EAClBmK,KAAM,CAAC,GWaH,OADAD,GAAgB3+C,EAAO26C,EAAazrB,GAC7B3qB,OAAO+nB,OAAO,CAAC,EAAGtsB,EAAM4+C,KAAM5+C,EAAM8gC,MAAM,GAClD,CAAC6Z,GACR,CAQyB8G,CAAuBhrC,EAAOkkC,IAC5C7Z,CACX,CACA,SAAS4gB,GAAajrC,EAAOkkC,GAEzB,MAAMgH,EAAY,CAAC,EACb7gB,EAAQ0gB,GAAS/qC,EAAOkkC,GAoB9B,OAnBIlkC,EAAM8mB,OAA+B,IAAvB9mB,EAAM0qB,eAEpBwgB,EAAUC,WAAY,EAEtB9gB,EAAM+gB,WACF/gB,EAAMghB,iBACFhhB,EAAMihB,mBACF,OAEZjhB,EAAMkhB,aACa,IAAfvrC,EAAM8mB,KACA,OACA,QAAsB,MAAf9mB,EAAM8mB,KAAe,IAAM,WAEzBv4B,IAAnByR,EAAMvB,WACLuB,EAAMwrC,OAASxrC,EAAMyrC,YAAczrC,EAAM2e,YAC1CusB,EAAUzsC,SAAW,GAEzBysC,EAAU7gB,MAAQA,EACX6gB,CACX,CChDA,MAAMQ,GAAmB,IAAI/uC,IAAI,CAC7B,UACA,OACA,WACA,UACA,QACA,SACA,WACA,aACA,oBACA,SACA,UACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,SACA,SACA,eACA,aACA,kBACA,kBACA,kBACA,eACA,aAUJ,SAASgvC,GAAkB7hD,GACvB,OAAQA,EAAIC,WAAW,UAClBD,EAAIC,WAAW,SAAmB,cAARD,GAC3BA,EAAIC,WAAW,WACfD,EAAIC,WAAW,UACfD,EAAIC,WAAW,UACfD,EAAIC,WAAW,aACf2hD,GAAiBpuC,IAAIxT,EAC7B,CCpDA,IAAI8hD,GAAiB9hD,IAAS6hD,GAAkB7hD,GAoBhD,KAnBiC+hD,GAyBLC,QAAQ,0BAA0Bv+C,WArB1Dq+C,GAAiB9hD,GAAQA,EAAIC,WAAW,OAAS4hD,GAAkB7hD,GAAO+hD,GAAY/hD,GAsB1F,CACA,MAAOkH,IAEP,CA7BA,IAAiC66C,GCGjC,SAASE,GAAY/rC,EAAOkkC,EAAa8H,EAAWzf,GAChD,MAAM0f,GAAc,KAAAxI,UAAQ,KACxB,MAAMl6C,EbNqB,CDD/B8gC,MAAO,CAAC,EACRj/B,UAAW,CAAC,EACZ4yC,gBAAiB,CAAC,EAClBmK,KAAM,CAAC,ECAPmB,MAAO,CAAC,GaMJ,OADAT,GAAct/C,EAAO26C,EAAakF,GAAS7c,GAAYvsB,EAAMyY,mBACtD,IACAlvB,EAAM+/C,MACTjf,MAAO,IAAK9gC,EAAM8gC,OACrB,GACF,CAAC6Z,IACJ,GAAIlkC,EAAMqqB,MAAO,CACb,MAAM6hB,EAAY,CAAC,EACnBpB,GAAkBoB,EAAWlsC,EAAMqqB,MAAOrqB,GAC1CisC,EAAY5hB,MAAQ,IAAK6hB,KAAcD,EAAY5hB,MACvD,CACA,OAAO4hB,CACX,CCdA,SAASE,GAAgBC,GAAqB,GAsB1C,MArBkB,CAAC7f,EAAWvsB,EAAO6iB,GAAO1I,gBAAgB+rB,KACxD,MAGM+F,GAHiBjF,GAAeza,GAChCwf,GACAd,IAC6BjrC,EAAOma,EAAc+rB,EAAU3Z,GAC5D8f,EFoBd,SAAqBrsC,EAAOssC,EAAOF,GAC/B,MAAMC,EAAgB,CAAC,EACvB,IAAK,MAAMviD,KAAOkW,EAQF,WAARlW,GAA4C,iBAAjBkW,EAAM/P,SAEjC27C,GAAc9hD,KACU,IAAvBsiD,GAA+BT,GAAkB7hD,KAChDwiD,IAAUX,GAAkB7hD,IAE7BkW,EAAiB,WACdlW,EAAIC,WAAW,aACnBsiD,EAAcviD,GACVkW,EAAMlW,IAGlB,OAAOuiD,CACX,CE3C8BE,CAAYvsC,EAA4B,iBAAdusB,EAAwB6f,GAClEI,EAAejgB,IAAc,GAAAkgB,SAC7B,IAAKJ,KAAkBJ,EAAappB,OACpC,CAAC,GAMD,SAAE8L,GAAa3uB,EACf0sC,GAAmB,KAAAjJ,UAAQ,IAAOziC,EAAc2tB,GAAYA,EAASn6B,MAAQm6B,GAAW,CAACA,IAC/F,OAAO,KAAAl2B,eAAc8zB,EAAW,IACzBigB,EACH7d,SAAU+d,GACZ,CAGV,CCxBA,SAASC,GAA6B/G,EAAmBrB,GACrD,OAAO,SAA+BhY,GAAW,mBAAE6f,GAAuB,CAAEA,oBAAoB,IAW5F,OAAOzG,GAPQ,IAHIqB,GAAeza,GAC5Bke,GACAI,GAGFjF,oBACAC,UAAWsG,GAAgBC,GAC3B7H,sBACAhY,aAGR,CACJ,CCnBA,MAAMqgB,GAAuB,CAAEx6C,QAAS,MAClCy6C,GAA2B,CAAEz6C,SAAS,GCM5C,MAAM06C,GAAa,IAAI9gC,GAAqB7b,EAAA,EAAOY,EAAA,GCR7Cg8C,GAAqB,IAAI7mB,QCsB/B,MAAM8mB,GAAoB,CACtB,iBACA,oBACA,SACA,sBACA,gBACA,uBACA,2BAMJ,MAAMC,GAQF,2BAAA9F,CAA4B+F,EAAQC,EAAYC,GAC5C,MAAO,CAAC,CACZ,CACA,WAAA5gD,EAAY,OAAE4P,EAAM,MAAE4D,EAAK,gBAAE2a,EAAe,oBAAEgqB,EAAmB,sBAAE5mB,EAAqB,YAAEmmB,GAAgB3xC,EAAU,CAAC,GAKjH9F,KAAK2F,QAAU,KAIf3F,KAAKkiC,SAAW,IAAIhyB,IAIpBlQ,KAAK42C,eAAgB,EACrB52C,KAAKivB,uBAAwB,EAQ7BjvB,KAAK8tB,mBAAqB,KAM1B9tB,KAAKwD,OAAS,IAAIoP,IAClB5S,KAAK4d,iBAAmBA,GAIxB5d,KAAKg6C,SAAW,CAAC,EAKjBh6C,KAAK4gD,mBAAqB,IAAIhuC,IAM9B5S,KAAK6gD,iBAAmB,CAAC,EAIzB7gD,KAAKiG,OAAS,CAAC,EAMfjG,KAAK8gD,uBAAyB,CAAC,EAC/B9gD,KAAK+gD,aAAe,IAAM/gD,KAAKI,OAAO,SAAUJ,KAAK0tB,cACrD1tB,KAAKmG,OAAS,KACLnG,KAAK2F,UAEV3F,KAAKghD,eACLhhD,KAAKihD,eAAejhD,KAAK2F,QAAS3F,KAAK66C,YAAa76C,KAAKuT,MAAMqqB,MAAO59B,KAAKy6B,YAAW,EAE1Fz6B,KAAKkhD,kBAAoB,EACzBlhD,KAAK2kC,eAAiB,KAClB,MAAM7/B,EAAM,KAAKA,MACb9E,KAAKkhD,kBAAoBp8C,IACzB9E,KAAKkhD,kBAAoBp8C,EACzB,KAAMqB,OAAOnG,KAAKmG,QAAQ,GAAO,GACrC,EAEJ,MAAM,aAAEunB,EAAY,YAAEmtB,EAAW,SAAE54B,GAAaw1B,EAChDz3C,KAAKiiB,SAAWA,EAChBjiB,KAAK0tB,aAAeA,EACpB1tB,KAAKmhD,WAAa,IAAKzzB,GACvB1tB,KAAKohD,cAAgB7tC,EAAM4b,QAAU,IAAKzB,GAAiB,CAAC,EAC5D1tB,KAAK66C,YAAcA,EACnB76C,KAAK2P,OAASA,EACd3P,KAAKuT,MAAQA,EACbvT,KAAKkuB,gBAAkBA,EACvBluB,KAAK6e,MAAQlP,EAASA,EAAOkP,MAAQ,EAAI,EACzC7e,KAAKk4C,oBAAsBA,EAC3Bl4C,KAAK8F,QAAUA,EACf9F,KAAKsxB,sBAAwBnwB,QAAQmwB,GACrCtxB,KAAKivB,sBAAwBA,GAAsB1b,GACnDvT,KAAK42C,cAAgBA,GAAcrjC,GAC/BvT,KAAK42C,gBACL52C,KAAKquB,gBAAkB,IAAIne,KAE/BlQ,KAAKywB,uBAAyBtvB,QAAQwO,GAAUA,EAAOhK,SAWvD,MAAM,WAAE8O,KAAe4sC,GAAwBrhD,KAAK06C,4BAA4BnnC,EAAO,CAAC,EAAGvT,MAC3F,IAAK,MAAM3C,KAAOgkD,EAAqB,CACnC,MAAM3jD,EAAQ2jD,EAAoBhkD,QACRyE,IAAtB4rB,EAAarwB,IAAsBkX,EAAc7W,IACjDA,EAAMuH,IAAIyoB,EAAarwB,IAAM,EAErC,CACJ,CACA,KAAAw1B,CAAMmG,GACFh5B,KAAK2F,QAAUqzB,EACfsnB,GAAmBr7C,IAAI+zB,EAAUh5B,MAC7BA,KAAKy6B,aAAez6B,KAAKy6B,WAAWzB,UACpCh5B,KAAKy6B,WAAW5H,MAAMmG,GAEtBh5B,KAAK2P,QAAU3P,KAAK42C,gBAAkB52C,KAAKivB,wBAC3CjvB,KAAKshD,sBAAwBthD,KAAK2P,OAAO4xC,gBAAgBvhD,OAE7DA,KAAKwD,OAAOsG,SAAQ,CAACpM,EAAOL,IAAQ2C,KAAKwhD,kBAAkBnkD,EAAKK,KAC3D0iD,GAAyBz6C,SChKtC,WAEI,GADAy6C,GAAyBz6C,SAAU,EAC9B,KAEL,GAAIqD,OAAOy4C,WAAY,CACnB,MAAMC,EAAmB14C,OAAOy4C,WAAW,4BACrCE,EAA8B,IAAOxB,GAAqBx6C,QAAU+7C,EAAiBnL,QAC3FmL,EAAiBE,YAAYD,GAC7BA,GACJ,MAEIxB,GAAqBx6C,SAAU,CAEvC,CDoJYk8C,GAEJ7hD,KAAK8tB,mBAC4B,UAA7B9tB,KAAKk4C,sBAE8B,WAA7Bl4C,KAAKk4C,qBAEDiI,GAAqBx6C,SAI/B3F,KAAK2P,QACL3P,KAAK2P,OAAOuyB,SAAShiC,IAAIF,MAC7BA,KAAKqoB,OAAOroB,KAAKuT,MAAOvT,KAAKkuB,gBACjC,CACA,OAAA8E,GACIstB,GAAmB3uC,OAAO3R,KAAK2F,SAC/B3F,KAAKy6B,YAAcz6B,KAAKy6B,WAAWzH,WACnC,QAAYhzB,KAAK+gD,eACjB,QAAY/gD,KAAKmG,QACjBnG,KAAK4gD,mBAAmB92C,SAASy3B,GAAWA,MAC5CvhC,KAAK4gD,mBAAmBlgD,QACxBV,KAAKshD,uBAAyBthD,KAAKshD,wBACnCthD,KAAK2P,QAAU3P,KAAK2P,OAAOuyB,SAASvwB,OAAO3R,MAC3C,IAAK,MAAM3C,KAAO2C,KAAKiG,OACnBjG,KAAKiG,OAAO5I,GAAKqD,QAErB,IAAK,MAAMrD,KAAO2C,KAAKg6C,SAAU,CAC7B,MAAM8H,EAAU9hD,KAAKg6C,SAAS38C,GAC1BykD,IACAA,EAAQ9uB,UACR8uB,EAAQtvB,WAAY,EAE5B,CACAxyB,KAAK2F,QAAU,IACnB,CACA,iBAAA67C,CAAkBnkD,EAAKK,GACfsC,KAAK4gD,mBAAmB/vC,IAAIxT,IAC5B2C,KAAK4gD,mBAAmB74C,IAAI1K,EAA5B2C,GAEJ,MAAM+hD,EAAmB9tC,EAAepD,IAAIxT,GACtC2kD,EAAiBtkD,EAAMuJ,GAAG,UAAWg7C,IACvCjiD,KAAK0tB,aAAarwB,GAAO4kD,EACzBjiD,KAAKuT,MAAM0O,UAAY,KAAMspB,UAAUvrC,KAAK+gD,cACxCgB,GAAoB/hD,KAAKy6B,aACzBz6B,KAAKy6B,WAAWgN,kBAAmB,EACvC,IAEEya,EAAwBxkD,EAAMuJ,GAAG,gBAAiBjH,KAAK2kC,gBAC7D,IAAIwd,EACAn5C,OAAOo5C,wBACPD,EAAkBn5C,OAAOo5C,sBAAsBpiD,KAAM3C,EAAKK,IAE9DsC,KAAK4gD,mBAAmB37C,IAAI5H,GAAK,KAC7B2kD,IACAE,IACIC,GACAA,IACAzkD,EAAMkJ,OACNlJ,EAAM2J,MAAM,GAExB,CACA,gBAAAynB,CAAiBuzB,GAIb,OAAKriD,KAAK2F,SACL3F,KAAKsiD,0BACNtiD,KAAKiB,OAASohD,EAAMphD,KAGjBjB,KAAKsiD,yBAAyBtiD,KAAK2F,QAAS08C,EAAM18C,SAF9C,CAGf,CACA,cAAAozC,GACI,IAAI17C,EAAM,YACV,IAAKA,KAAO85C,GAAoB,CAC5B,MAAMoL,EAAoBpL,GAAmB95C,GAC7C,IAAKklD,EACD,SACJ,MAAM,UAAEnL,EAAW9kB,QAASkwB,GAAuBD,EAYnD,IARKviD,KAAKg6C,SAAS38C,IACfmlD,GACApL,EAAUp3C,KAAKuT,SACfvT,KAAKg6C,SAAS38C,GAAO,IAAImlD,EAAmBxiD,OAK5CA,KAAKg6C,SAAS38C,GAAM,CACpB,MAAMykD,EAAU9hD,KAAKg6C,SAAS38C,GAC1BykD,EAAQtvB,UACRsvB,EAAQz5B,UAGRy5B,EAAQjvB,QACRivB,EAAQtvB,WAAY,EAE5B,CACJ,CACJ,CACA,YAAAwuB,GACIhhD,KAAKyiD,MAAMziD,KAAK66C,YAAa76C,KAAK0tB,aAAc1tB,KAAKuT,MACzD,CAMA,kBAAAkN,GACI,OAAOzgB,KAAK2F,QACN3F,KAAK0iD,2BAA2B1iD,KAAK2F,QAAS3F,KAAKuT,OhF1QzC,CACpB9F,EAFqB,CAAG7N,IAAK,EAAGC,IAAK,GAGrC6N,EAHqB,CAAG9N,IAAK,EAAGC,IAAK,GgF6QrC,CACA,cAAA8iD,CAAetlD,GACX,OAAO2C,KAAK0tB,aAAarwB,EAC7B,CACA,cAAAopC,CAAeppC,EAAKK,GAChBsC,KAAK0tB,aAAarwB,GAAOK,CAC7B,CAKA,MAAA2qB,CAAO9U,EAAO2a,IACN3a,EAAMyY,mBAAqBhsB,KAAKuT,MAAMyY,oBACtChsB,KAAK2kC,iBAET3kC,KAAK+yB,UAAY/yB,KAAKuT,MACtBvT,KAAKuT,MAAQA,EACbvT,KAAKqzB,oBAAsBrzB,KAAKkuB,gBAChCluB,KAAKkuB,gBAAkBA,EAIvB,IAAK,IAAI1tB,EAAI,EAAGA,EAAI+/C,GAAkBhgD,OAAQC,IAAK,CAC/C,MAAMnD,EAAMkjD,GAAkB//C,GAC1BR,KAAK8gD,uBAAuBzjD,KAC5B2C,KAAK8gD,uBAAuBzjD,YACrB2C,KAAK8gD,uBAAuBzjD,IAEvC,MACMulD,EAAWrvC,EADK,KAAOlW,GAEzBulD,IACA5iD,KAAK8gD,uBAAuBzjD,GAAO2C,KAAKiH,GAAG5J,EAAKulD,GAExD,CACA5iD,KAAK6gD,iBErTb,SAAqCpxC,EAASzE,EAAMzE,GAChD,IAAK,MAAMlJ,KAAO2N,EAAM,CACpB,MAAM63C,EAAY73C,EAAK3N,GACjBylD,EAAYv8C,EAAKlJ,GACvB,GAAIkX,EAAcsuC,GAKdpzC,EAAQ6E,SAASjX,EAAKwlD,QASrB,GAAItuC,EAAcuuC,GAKnBrzC,EAAQ6E,SAASjX,GAAK,QAAYwlD,EAAW,CAAEj8C,MAAO6I,UAErD,GAAIqzC,IAAcD,EAMnB,GAAIpzC,EAAQ2E,SAAS/W,GAAM,CACvB,MAAM0lD,EAAgBtzC,EAAQ4E,SAAShX,IACP,IAA5B0lD,EAAc3xB,UACd2xB,EAAcl7C,KAAKg7C,GAEbE,EAAcp8C,aACpBo8C,EAAc99C,IAAI49C,EAE1B,KACK,CACD,MAAMZ,EAAcxyC,EAAQkzC,eAAetlD,GAC3CoS,EAAQ6E,SAASjX,GAAK,aAA4ByE,IAAhBmgD,EAA4BA,EAAcY,EAAW,CAAEj8C,MAAO6I,IACpG,CAER,CAEA,IAAK,MAAMpS,KAAOkJ,OACIzE,IAAdkJ,EAAK3N,IACLoS,EAAQuzC,YAAY3lD,GAE5B,OAAO2N,CACX,CFiQgCi4C,CAA4BjjD,KAAMA,KAAK06C,4BAA4BnnC,EAAOvT,KAAK+yB,UAAW/yB,MAAOA,KAAK6gD,kBAC1H7gD,KAAKkjD,wBACLljD,KAAKkjD,yBAETljD,KAAKiiB,UAAYjiB,KAAKiiB,SAASjiB,KACnC,CACA,QAAA6T,GACI,OAAO7T,KAAKuT,KAChB,CAIA,UAAA4vC,CAAWtsC,GACP,OAAO7W,KAAKuT,MAAMI,SAAW3T,KAAKuT,MAAMI,SAASkD,QAAQ/U,CAC7D,CAIA,oBAAAqqB,GACI,OAAOnsB,KAAKuT,MAAM3I,UACtB,CACA,qBAAA0wB,GACI,OAAOt7B,KAAKuT,MAAM0gB,kBACtB,CACA,qBAAAmvB,GACI,OAAOpjD,KAAK42C,cACN52C,KACAA,KAAK2P,OACD3P,KAAK2P,OAAOyzC,6BACZthD,CACd,CAIA,eAAAy/C,CAAgB3xC,GACZ,MAAMyzC,EAAqBrjD,KAAKojD,wBAChC,GAAIC,EAGA,OAFAA,EAAmBh1B,iBACfg1B,EAAmBh1B,gBAAgBnuB,IAAI0P,GACpC,IAAMyzC,EAAmBh1B,gBAAgB1c,OAAO/B,EAE/D,CAIA,QAAA0E,CAASjX,EAAKK,GAEV,MAAMqlD,EAAgB/iD,KAAKwD,OAAOuE,IAAI1K,GAClCK,IAAUqlD,IACNA,GACA/iD,KAAKgjD,YAAY3lD,GACrB2C,KAAKwhD,kBAAkBnkD,EAAKK,GAC5BsC,KAAKwD,OAAOyB,IAAI5H,EAAKK,GACrBsC,KAAK0tB,aAAarwB,GAAOK,EAAMqK,MAEvC,CAIA,WAAAi7C,CAAY3lD,GACR2C,KAAKwD,OAAOmO,OAAOtU,GACnB,MAAM8J,EAAcnH,KAAK4gD,mBAAmB74C,IAAI1K,GAC5C8J,IACAA,IACAnH,KAAK4gD,mBAAmBjvC,OAAOtU,WAE5B2C,KAAK0tB,aAAarwB,GACzB2C,KAAKsjD,2BAA2BjmD,EAAK2C,KAAK66C,YAC9C,CAIA,QAAAzmC,CAAS/W,GACL,OAAO2C,KAAKwD,OAAOqN,IAAIxT,EAC3B,CACA,QAAAgX,CAAShX,EAAK2Z,GACV,GAAIhX,KAAKuT,MAAM/P,QAAUxD,KAAKuT,MAAM/P,OAAOnG,GACvC,OAAO2C,KAAKuT,MAAM/P,OAAOnG,GAE7B,IAAIK,EAAQsC,KAAKwD,OAAOuE,IAAI1K,GAK5B,YAJcyE,IAAVpE,QAAwCoE,IAAjBkV,IACvBtZ,GAAQ,QAA6B,OAAjBsZ,OAAwBlV,EAAYkV,EAAc,CAAEpQ,MAAO5G,OAC/EA,KAAKsU,SAASjX,EAAKK,IAEhBA,CACX,CAMA,SAAA4gB,CAAUjhB,EAAK8R,GACX,IAAI5K,EACJ,IAAI7G,OAAmCoE,IAA3B9B,KAAK0tB,aAAarwB,IAAuB2C,KAAK2F,QAEI,QAAvDpB,EAAKvE,KAAKujD,uBAAuBvjD,KAAKuT,MAAOlW,UAAyB,IAAPkH,EAAgBA,EAAKvE,KAAKwjD,sBAAsBxjD,KAAK2F,QAAStI,EAAK2C,KAAK8F,SADxI9F,KAAK0tB,aAAarwB,GF3YV,IAACc,EEwZf,OAXIT,UACqB,iBAAVA,IACNghB,GAAkBhhB,IAAUgZ,EAAkBhZ,IAE/CA,EAAQkD,WAAWlD,IFjZZS,EEmZaT,GFnZP2iD,GAAW1gC,KAAKL,GAAcnhB,KEmZbmG,EAAA,EAAQ1G,KAAKuR,KAC3CzR,EAAQgH,GAAkBrH,EAAK8R,KAEnCnP,KAAKyjD,cAAcpmD,EAAKkX,EAAc7W,GAASA,EAAMqK,MAAQrK,IAE1D6W,EAAc7W,GAASA,EAAMqK,MAAQrK,CAChD,CAKA,aAAA+lD,CAAcpmD,EAAKK,GACfsC,KAAKmhD,WAAW9jD,GAAOK,CAC3B,CAKA,aAAA+zB,CAAcp0B,GACV,IAAIkH,EACJ,MAAM,QAAE4qB,GAAYnvB,KAAKuT,MACzB,IAAImwC,EACJ,GAAuB,iBAAZv0B,GAA2C,iBAAZA,EAAsB,CAC5D,MAAMlB,EAAU3a,EAAwBtT,KAAKuT,MAAO4b,EAAyC,QAA/B5qB,EAAKvE,KAAKkuB,uBAAoC,IAAP3pB,OAAgB,EAASA,EAAGkP,QAC7Hwa,IACAy1B,EAAmBz1B,EAAQ5wB,GAEnC,CAIA,GAAI8xB,QAAgCrtB,IAArB4hD,EACX,OAAOA,EAMX,MAAMv0C,EAASnP,KAAKujD,uBAAuBvjD,KAAKuT,MAAOlW,GACvD,YAAeyE,IAAXqN,GAAyBoF,EAAcpF,QAMRrN,IAA5B9B,KAAKohD,cAAc/jD,SACDyE,IAArB4hD,OACE5hD,EACA9B,KAAKmhD,WAAW9jD,GARX8R,CASf,CACA,EAAAlI,CAAGC,EAAWtE,GAIV,OAHK5C,KAAKiG,OAAOiB,KACblH,KAAKiG,OAAOiB,GAAa,IAAI,MAE1BlH,KAAKiG,OAAOiB,GAAWhH,IAAI0C,EACtC,CACA,MAAAxC,CAAO8G,KAAc2L,GACb7S,KAAKiG,OAAOiB,IACZlH,KAAKiG,OAAOiB,GAAW9G,UAAUyS,EAEzC,EGvdJ,MAAM8wC,WAAyBnD,GAC3B,WAAAzgD,GACI8f,SAASoT,WACTjzB,KAAK4d,iBAAmBgC,EAC5B,CACA,wBAAA0iC,CAAyBrkD,EAAGC,GAMxB,OAAsC,EAA/BD,EAAE2lD,wBAAwB1lD,GAAS,GAAK,CACnD,CACA,sBAAAqlD,CAAuBhwC,EAAOlW,GAC1B,OAAOkW,EAAMqqB,MACPrqB,EAAMqqB,MAAMvgC,QACZyE,CACV,CACA,0BAAAwhD,CAA2BjmD,GAAK,KAAEq+C,EAAI,MAAE9d,WAC7B8d,EAAKr+C,UACLugC,EAAMvgC,EACjB,CACA,sBAAA6lD,GACQljD,KAAK6jD,oBACL7jD,KAAK6jD,2BACE7jD,KAAK6jD,mBAEhB,MAAM,SAAE3hB,GAAaliC,KAAKuT,MACtBgB,EAAc2tB,KACdliC,KAAK6jD,kBAAoB3hB,EAASj7B,GAAG,UAAW+f,IACxChnB,KAAK2F,UACL3F,KAAK2F,QAAQm+C,YAAc,GAAG98B,IAClC,IAGZ,EC3BJ,MAAM+8B,WAA0BJ,GAC5B,WAAA5jD,GACI8f,SAASoT,WACTjzB,KAAKiB,KAAO,OACZjB,KAAKihD,eAAiB3D,EAC1B,CACA,qBAAAkG,CAAsBxqB,EAAU37B,GAC5B,GAAI4W,EAAepD,IAAIxT,GAAM,CACzB,MAAM2mD,EAAcroC,GAAoBte,GACxC,OAAO2mD,GAAcA,EAAYljD,SAAe,CACpD,CACK,CACD,MAAMmjD,GAfQx0C,EAeyBupB,EAdxChwB,OAAOmW,iBAAiB1P,IAejB/R,IAAS,QAAkBL,GAC3B4mD,EAAc7kC,iBAAiB/hB,GAC/B4mD,EAAc5mD,KAAS,EAC7B,MAAwB,iBAAVK,EAAqBA,EAAMI,OAASJ,CACtD,CApBR,IAA0B+R,CAqBtB,CACA,0BAAAizC,CAA2B1pB,GAAU,mBAAE/E,IACnC,OAAOxT,GAAmBuY,EAAU/E,EACxC,CACA,KAAAwuB,CAAM5H,EAAantB,EAAcna,GAC7BkoC,GAAgBZ,EAAantB,EAAcna,EAAMyY,kBACrD,CACA,2BAAA0uB,CAA4BnnC,EAAOwf,EAAW1f,GAC1C,OAAOqnC,GAA4BnnC,EAAOwf,EAAW1f,EACzD,EC5BJ,MAAM6wC,WAAyBP,GAC3B,WAAA5jD,GACI8f,SAASoT,WACTjzB,KAAKiB,KAAO,MACZjB,KAAK28C,UAAW,EAChB38C,KAAK0iD,2BAA6BhrB,EACtC,CACA,sBAAA6rB,CAAuBhwC,EAAOlW,GAC1B,OAAOkW,EAAMlW,EACjB,CACA,qBAAAmmD,CAAsBxqB,EAAU37B,GAC5B,GAAI4W,EAAepD,IAAIxT,GAAM,CACzB,MAAM2mD,EAAcroC,GAAoBte,GACxC,OAAO2mD,GAAcA,EAAYljD,SAAe,CACpD,CAEA,OADAzD,EAAOmgD,GAAoB3sC,IAAIxT,GAA0BA,EAAnBqX,EAAYrX,GAC3C27B,EAAS9mB,aAAa7U,EACjC,CACA,2BAAAq9C,CAA4BnnC,EAAOwf,EAAW1f,GAC1C,OAAO,GAA4BE,EAAOwf,EAAW1f,EACzD,CACA,KAAAovC,CAAM5H,EAAantB,EAAcna,GAC7B6oC,GAAcvB,EAAantB,EAAc1tB,KAAK28C,SAAUppC,EAAMyY,kBAClE,CACA,cAAAi1B,CAAejoB,EAAU6hB,EAAalK,EAAWlW,GAC7CgjB,GAAUzkB,EAAU6hB,EAAalK,EAAWlW,EAChD,CACA,KAAA5H,CAAMmG,GACFh5B,KAAK28C,SAAWA,GAAS3jB,EAASjnB,SAClC8N,MAAMgT,MAAMmG,EAChB,ECpCJ,MCFMmrB,GAAuB3xC,ECIe0tC,GAA6B,IAClEh3C,MACAisC,MACA9a,MACAxD,KFNwB,CAACiJ,EAAWh6B,IAChCy0C,GAAeza,GAChB,IAAIokB,GAAiBp+C,GACrB,IAAIi+C,GAAkBj+C,EAAS,CAC7BmzC,gBAAiBnZ,IAAc,GAAAkgB,a,qEGwB3C,MAAMoE,EAAM,CACRxmD,MAAoB,E,QAAA,GAAc,KAClCc,MAhCJ,SAAkBP,GACd,IAAIkmD,EAAI,GACJtgC,EAAI,GACJ7lB,EAAI,GACJD,EAAI,GAmBR,OAjBIE,EAAEoC,OAAS,GACX8jD,EAAIlmD,EAAEqO,UAAU,EAAG,GACnBuX,EAAI5lB,EAAEqO,UAAU,EAAG,GACnBtO,EAAIC,EAAEqO,UAAU,EAAG,GACnBvO,EAAIE,EAAEqO,UAAU,EAAG,KAInB63C,EAAIlmD,EAAEqO,UAAU,EAAG,GACnBuX,EAAI5lB,EAAEqO,UAAU,EAAG,GACnBtO,EAAIC,EAAEqO,UAAU,EAAG,GACnBvO,EAAIE,EAAEqO,UAAU,EAAG,GACnB63C,GAAKA,EACLtgC,GAAKA,EACL7lB,GAAKA,EACLD,GAAKA,GAEF,CACHuE,IAAK8hD,SAASD,EAAG,IACjB5hD,MAAO6hD,SAASvgC,EAAG,IACnBrhB,KAAM4hD,SAASpmD,EAAG,IAClBa,MAAOd,EAAIqmD,SAASrmD,EAAG,IAAM,IAAM,EAE3C,EAIIU,UAAW,IAAKA,U,gLCpCpB,MAAM4lD,EAAkBxtC,IAAS,CAC7BnZ,KAAOO,GAAmB,iBAANA,GAAkBA,EAAEqmD,SAASztC,IAAiC,IAAxB5Y,EAAEN,MAAM,KAAK0C,OACvE7B,MAAOkC,WACPjC,UAAYR,GAAM,GAAGA,IAAI4Y,MAEvB0tC,EAAwBF,EAAe,OACvC57B,EAAwB47B,EAAe,KACvCjtC,EAAmBitC,EAAe,MAClC9kC,EAAmB8kC,EAAe,MAClC/kC,EAAmB+kC,EAAe,MAClCG,EAAqB,IACpB/7B,EACHjqB,MAAQP,GAAMwqB,EAAQjqB,MAAMP,GAAK,IACjCQ,UAAYR,GAAMwqB,EAAQhqB,UAAc,IAAJR,G,uDCPxC,MAAMg6C,GAAsB,E,QAAA1Z,eAAc,CACtCxK,mBAAqB/d,GAAMA,EAC3BujC,UAAU,EACVrB,cAAe,S,uDCPnB,MAAMh0C,EAAYjG,GAAMc,KAAKC,MAAU,IAAJf,GAAc,G,uDCIjD,MAAM85C,GAAkB,E,QAAAxZ,eAAc,K,uDCOtC,MAAMt8B,EAAW,CAACiM,EAAM+gC,EAAIzxC,KACxB,MAAMinD,EAAmBxV,EAAK/gC,EAC9B,OAA4B,IAArBu2C,EAAyB,GAAKjnD,EAAQ0Q,GAAQu2C,CAAgB,C,uBCTzE,SAASC,EAAkBlxC,EAAUmxC,GACjC,OAAOA,EAAgBnxC,GAAY,IAAOmxC,GAAiB,CAC/D,C,6GCDA,MAAMC,EAAyBC,GAAsB,IAAVA,EAErCC,EAAyBC,GAAiBA,EAAe,G,yFCL/D,MAAMvhD,EAAQ,CACV9F,KAAOO,GAAM,IAAKP,KAAKO,IAAM,IAAIP,KAAKO,IAAM,IAAKP,KAAKO,GACtDO,MAAQP,GACA,IAAKP,KAAKO,GACH,IAAKO,MAAMP,GAEb,IAAKP,KAAKO,GACR,IAAKO,MAAMP,GAGX,IAAIO,MAAMP,GAGzBQ,UAAYR,GACY,iBAANA,EACRA,EACAA,EAAEoD,eAAe,OACb,IAAK5C,UAAUR,GACf,IAAKQ,UAAUR,G,4FCpBjC,IAAI+mD,EAAU,IACVC,EAAY,G,uDCHhB,MAAMC,EAA8B,oBAAXp8C,M,qECGzB,MAAMq8C,EAAa,CACf,OACA,mBACA,SACA,YACA,SACA,cAEEC,EAAa,GACnB,SAASC,EAAoBC,EAAmBC,GAC5C,IAAIC,GAAe,EACfC,GAAoB,EACxB,MAAM7oD,EAAQ,CACV8K,MAAO,EACPxC,UAAW,EACXF,cAAc,GAEZ0gD,EAAmB,IAAOF,GAAe,EACzC1oD,EAAQqoD,EAAW/mD,QAAO,CAACwxB,EAAKzyB,KAClCyyB,EAAIzyB,GCtBZ,SAA0BqoD,GAKtB,IAAIG,EAAY,IAAI31C,IAChB41C,EAAY,IAAI51C,IAKhBhL,GAAe,EACf6gD,GAAiB,EAIrB,MAAMC,EAAc,IAAI51C,QACxB,IAAI61C,EAAkB,CAClBr+C,MAAO,EACPxC,UAAW,EACXF,cAAc,GAElB,SAASghD,EAAgBtjD,GACjBojD,EAAYn1C,IAAIjO,KAChBujD,EAAKzpD,SAASkG,GACd8iD,KAEJ9iD,EAASqjD,EACb,CACA,MAAME,EAAO,CAITzpD,SAAU,CAACkG,EAAUwjD,GAAY,EAAOC,GAAY,KAChD,MACMC,EADoBD,GAAanhD,EACL2gD,EAAYC,EAK9C,OAJIM,GACAJ,EAAY9lD,IAAI0C,GACf0jD,EAAMz1C,IAAIjO,IACX0jD,EAAMpmD,IAAI0C,GACPA,CAAQ,EAKnBhG,OAASgG,IACLkjD,EAAUn0C,OAAO/O,GACjBojD,EAAYr0C,OAAO/O,EAAS,EAKhC0oC,QAAUvuC,IACNkpD,EAAkBlpD,EAMdmI,EACA6gD,GAAiB,GAGrB7gD,GAAe,GACd2gD,EAAWC,GAAa,CAACA,EAAWD,GAErCA,EAAU/7C,QAAQo8C,GAGlBL,EAAUnlD,QACVwE,GAAe,EACX6gD,IACAA,GAAiB,EACjBI,EAAK7a,QAAQvuC,IACjB,GAGR,OAAOopD,CACX,CDxDmBI,CAAiBX,GACrB91B,IACR,CAAC,IACE,KAAE1oB,EAAI,iBAAE8W,EAAgB,OAAEmK,EAAM,UAAEkjB,EAAS,OAAEplC,EAAM,WAAE20B,GAAe99B,EACpEwpD,EAAe,KACjB,MAAMphD,EAAY,IAAmBD,gBAC/BrI,EAAMsI,UACNC,YAAYP,MAClB4gD,GAAe,EACf5oD,EAAM8K,MAAQ+9C,EACR,IAAO,GACP1mD,KAAKY,IAAIZ,KAAKW,IAAIwF,EAAYtI,EAAMsI,UAAWkgD,GAAa,GAClExoD,EAAMsI,UAAYA,EAClBtI,EAAMoI,cAAe,EAErBkC,EAAKkkC,QAAQxuC,GACbohB,EAAiBotB,QAAQxuC,GACzBurB,EAAOijB,QAAQxuC,GACfyuC,EAAUD,QAAQxuC,GAClBqJ,EAAOmlC,QAAQxuC,GACfg+B,EAAWwQ,QAAQxuC,GACnBA,EAAMoI,cAAe,EACjBwgD,GAAgBD,IAChBE,GAAoB,EACpBH,EAAkBgB,GACtB,EAuBJ,MAAO,CAAE9pD,SAdQ2oD,EAAW/mD,QAAO,CAACwxB,EAAKzyB,KACrC,MAAM8oD,EAAOnpD,EAAMK,GAMnB,OALAyyB,EAAIzyB,GAAO,CAACiuC,EAAS8a,GAAY,EAAOC,GAAY,KAC3CX,IATTA,GAAe,EACfC,GAAoB,EACf7oD,EAAMoI,cACPsgD,EAAkBgB,IAQXL,EAAKzpD,SAAS4uC,EAAS8a,EAAWC,IAEtCv2B,CAAG,GACX,CAAC,GAMelzB,OALH0uC,IACZ,IAAK,IAAI9qC,EAAI,EAAGA,EAAI6kD,EAAW9kD,OAAQC,IACnCxD,EAAMqoD,EAAW7kD,IAAI5D,OAAO0uC,EAChC,EAEuBxuC,QAAOE,QACtC,C,qEE9DA,SAASypD,EAAY5gD,GACjB,MAAMuwB,GAAM,IAAAkiB,QAAO,MAInB,OAHoB,OAAhBliB,EAAIzwB,UACJywB,EAAIzwB,QAAUE,KAEXuwB,EAAIzwB,OACf,C,+ECdA,SAAS+gD,EAASxwC,EAAGywC,EAAG1xC,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACDiB,EAAc,GAATywC,EAAIzwC,GAASjB,EACzBA,EAAI,GACG0xC,EACP1xC,EAAI,EAAI,EACDiB,GAAKywC,EAAIzwC,IAAM,EAAI,EAAIjB,GAAK,EAChCiB,CACX,C,kCCbA,SAAS0wC,EAAa3oD,EAAGC,GACrB,OAAQgY,GAAOA,EAAI,EAAIhY,EAAID,CAC/B,CCSA,MAAM4oD,EAAiB,CAACz4C,EAAM+gC,EAAIhxC,KAC9B,MAAM2oD,EAAW14C,EAAOA,EAClB24C,EAAO5oD,GAAKgxC,EAAKA,EAAK2X,GAAYA,EACxC,OAAOC,EAAO,EAAI,EAAI9nD,KAAKolB,KAAK0iC,EAAK,EAEnCC,EAAa,CAAC5C,EAAA,EAAK7hD,EAAA,EAAM9D,EAAA,GAE/B,SAASwoD,EAAOvjD,GACZ,MAAMzC,GAFY9C,EAEQuF,EAFFsjD,EAAWrnC,MAAM1e,GAASA,EAAKrD,KAAKO,MAA3C,IAACA,EAIlB,IADA,OAAQgD,QAAQF,GAAO,IAAIyC,0EACtBvC,QAAQF,GACT,OAAO,EACX,IAAIimD,EAAQjmD,EAAKvC,MAAMgF,GAKvB,OAJIzC,IAASxC,EAAA,IAETyoD,EFZR,UAAoB,IAAEtoD,EAAG,WAAEC,EAAU,UAAEC,EAAS,MAAEC,IAC9CH,GAAO,IAEPE,GAAa,IACb,IAAI0D,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GALA7D,GAAc,IAQT,CACD,MAAM8nD,EAAI7nD,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrCqX,EAAI,EAAIpX,EAAY6nD,EAC1BnkD,EAAMkkD,EAASxwC,EAAGywC,EAAG/nD,EAAM,EAAI,GAC/B6D,EAAQikD,EAASxwC,EAAGywC,EAAG/nD,GACvB8D,EAAOgkD,EAASxwC,EAAGywC,EAAG/nD,EAAM,EAAI,EACpC,MAVI4D,EAAMC,EAAQC,EAAO5D,EAWzB,MAAO,CACH0D,IAAKvD,KAAKC,MAAY,IAANsD,GAChBC,MAAOxD,KAAKC,MAAc,IAARuD,GAClBC,KAAMzD,KAAKC,MAAa,IAAPwD,GACjB3D,QAER,CEbgBooD,CAAWD,IAEhBA,CACX,CACA,MAAME,EAAW,CAACh5C,EAAM+gC,KACpB,MAAMkY,EAAWJ,EAAO74C,GAClBk5C,EAASL,EAAO9X,GACtB,IAAKkY,IAAaC,EACd,OAAOV,EAAax4C,EAAM+gC,GAE9B,MAAMoY,EAAU,IAAKF,GACrB,OAAQlpD,IACJopD,EAAQ/kD,IAAMqkD,EAAeQ,EAAS7kD,IAAK8kD,EAAO9kD,IAAKrE,GACvDopD,EAAQ9kD,MAAQokD,EAAeQ,EAAS5kD,MAAO6kD,EAAO7kD,MAAOtE,GAC7DopD,EAAQ7kD,KAAOmkD,EAAeQ,EAAS3kD,KAAM4kD,EAAO5kD,KAAMvE,GAC1DopD,EAAQxoD,OAAQ,OAAUsoD,EAAStoD,MAAOuoD,EAAOvoD,MAAOZ,GACjDoE,EAAA,EAAK5D,UAAU4oD,GACzB,E,2CC3CL,MAAMC,EAAkB,IAAIt3C,IAAI,CAAC,OAAQ,WCUzC,SAASu3C,EAAUxpD,EAAGC,GAClB,OAAQgY,IAAM,OAAYjY,EAAGC,EAAGgY,EACpC,CACA,SAASwxC,EAASzpD,GACd,MAAiB,iBAANA,EACAwpD,EAEW,iBAANxpD,GACL,OAAmBA,GACpB2oD,EACAljD,EAAA,EAAM9F,KAAKK,GACPmpD,EACAO,EAELp8C,MAAMC,QAAQvN,GACZ2pD,EAEW,iBAAN3pD,EACLyF,EAAA,EAAM9F,KAAKK,GAAKmpD,EAAWS,EAE/BjB,CACX,CACA,SAASgB,EAAS3pD,EAAGC,GACjB,MAAMiG,EAAS,IAAIlG,GACb6pD,EAAY3jD,EAAO5D,OACnBwnD,EAAa9pD,EAAE4G,KAAI,CAAC1G,EAAGqC,IAAMknD,EAASvpD,EAATupD,CAAYvpD,EAAGD,EAAEsC,MACpD,OAAQ0V,IACJ,IAAK,IAAI1V,EAAI,EAAGA,EAAIsnD,EAAWtnD,IAC3B2D,EAAO3D,GAAKunD,EAAWvnD,GAAG0V,GAE9B,OAAO/R,CAAM,CAErB,CACA,SAAS0jD,EAAU5pD,EAAGC,GAClB,MAAMiG,EAAS,IAAKlG,KAAMC,GACpB6pD,EAAa,CAAC,EACpB,IAAK,MAAM1qD,KAAO8G,OACCrC,IAAX7D,EAAEZ,SAAiCyE,IAAX5D,EAAEb,KAC1B0qD,EAAW1qD,GAAOqqD,EAASzpD,EAAEZ,GAAXqqD,CAAiBzpD,EAAEZ,GAAMa,EAAEb,KAGrD,OAAQc,IACJ,IAAK,MAAMd,KAAO0qD,EACd5jD,EAAO9G,GAAO0qD,EAAW1qD,GAAKc,GAElC,OAAOgG,CAAM,CAErB,CAcA,MAAMwjD,EAAa,CAAC3nC,EAAQ7Q,KACxB,MAAMmwB,EAAWh7B,EAAA,EAAQN,kBAAkBmL,GACrC64C,GAAc,OAAoBhoC,GAClCioC,GAAc,OAAoB94C,GAIxC,OAHuB64C,EAAYvkD,QAAQE,IAAIpD,SAAW0nD,EAAYxkD,QAAQE,IAAIpD,QAC9EynD,EAAYvkD,QAAQC,MAAMnD,SAAW0nD,EAAYxkD,QAAQC,MAAMnD,QAC/DynD,EAAYvkD,QAAQ9C,OAAOJ,QAAU0nD,EAAYxkD,QAAQ9C,OAAOJ,OAE3DinD,EAAgB32C,IAAImP,KACpBioC,EAAYzkD,OAAOjD,QACnBinD,EAAgB32C,IAAI1B,KAChB64C,EAAYxkD,OAAOjD,OD5EpC,SAAuByf,EAAQ7Q,GAC3B,OAAIq4C,EAAgB32C,IAAImP,GACZ9J,GAAOA,GAAK,EAAI8J,EAAS7Q,EAGzB+G,GAAOA,GAAK,EAAI/G,EAAS6Q,CAEzC,CCsEmBkoC,CAAcloC,EAAQ7Q,IAE1B,EAAA/Q,EAAA,GAAKwpD,EA3BpB,SAAoB5nC,EAAQ7Q,GACxB,IAAI5K,EACJ,MAAM4jD,EAAgB,GAChBC,EAAW,CAAE1kD,MAAO,EAAGC,IAAK,EAAGhD,OAAQ,GAC7C,IAAK,IAAIH,EAAI,EAAGA,EAAI2O,EAAO3L,OAAOjD,OAAQC,IAAK,CAC3C,MAAMS,EAAOkO,EAAOvL,MAAMpD,GACpB6nD,EAAcroC,EAAOvc,QAAQxC,GAAMmnD,EAASnnD,IAC5CqnD,EAAoD,QAArC/jD,EAAKyb,EAAOxc,OAAO6kD,UAAiC,IAAP9jD,EAAgBA,EAAK,EACvF4jD,EAAc3nD,GAAK8nD,EACnBF,EAASnnD,IACb,CACA,OAAOknD,CACX,CAe6BI,CAAWP,EAAaC,GAAcA,EAAYzkD,QAAS87B,KAGhF,QAAQ,EAAM,mBAAmBtf,WAAgB7Q,6KAC1Cy3C,EAAa5mC,EAAQ7Q,GAChC,ECvFJ,SAASsa,EAAIrb,EAAM+gC,EAAIj5B,GACnB,GAAoB,iBAAT9H,GACO,iBAAP+gC,GACM,iBAANj5B,EACP,OAAO,OAAU9H,EAAM+gC,EAAIj5B,GAG/B,OADcwxC,EAASt5C,EAChBo6C,CAAMp6C,EAAM+gC,EACvB,C,uHC2BA,SAAShnB,EAAYsgC,EAAOtkD,GAAUxE,MAAO+oD,GAAU,EAAI,KAAE37C,EAAI,MAAEy7C,GAAU,CAAC,GAC1E,MAAMG,EAAcF,EAAMloD,OAM1B,IALA,OAAUooD,IAAgBxkD,EAAO5D,OAAQ,wDAKrB,IAAhBooD,EACA,MAAO,IAAMxkD,EAAO,GACxB,GAAoB,IAAhBwkD,GAAqBxkD,EAAO,KAAOA,EAAO,GAC1C,MAAO,IAAMA,EAAO,GACxB,MAAMykD,EAAmBH,EAAM,KAAOA,EAAM,GAExCA,EAAM,GAAKA,EAAME,EAAc,KAC/BF,EAAQ,IAAIA,GAAO/+B,UACnBvlB,EAAS,IAAIA,GAAQulB,WAEzB,MAAMm/B,EAlDV,SAAsB1kD,EAAQ4I,EAAM+7C,GAChC,MAAMD,EAAS,GACTE,EAAeD,GAAe,IAC9BE,EAAY7kD,EAAO5D,OAAS,EAClC,IAAK,IAAIC,EAAI,EAAGA,EAAIwoD,EAAWxoD,IAAK,CAChC,IAAIgoD,EAAQO,EAAa5kD,EAAO3D,GAAI2D,EAAO3D,EAAI,IAC/C,GAAIuM,EAAM,CACN,MAAMk8C,EAAiB19C,MAAMC,QAAQuB,GAAQA,EAAKvM,IAAM,IAAOuM,EAC/Dy7C,GAAQ,OAAKS,EAAgBT,EACjC,CACAK,EAAOtpD,KAAKipD,EAChB,CACA,OAAOK,CACX,CAqCmBK,CAAa/kD,EAAQ4I,EAAMy7C,GACpCQ,EAAYH,EAAOtoD,OACnB4oD,EAAgBhrD,IAClB,GAAIyqD,GAAoBzqD,EAAIsqD,EAAM,GAC9B,OAAOtkD,EAAO,GAClB,IAAI3D,EAAI,EACR,GAAIwoD,EAAY,EACZ,KAAOxoD,EAAIioD,EAAMloD,OAAS,KAClBpC,EAAIsqD,EAAMjoD,EAAI,IADOA,KAKjC,MAAM4oD,GAAkB,OAASX,EAAMjoD,GAAIioD,EAAMjoD,EAAI,GAAIrC,GACzD,OAAO0qD,EAAOroD,GAAG4oD,EAAgB,EAErC,OAAOV,EACAvqD,GAAMgrD,GAAa,OAAMV,EAAM,GAAIA,EAAME,EAAc,GAAIxqD,IAC5DgrD,CACV,C,gFC/CA,SAASE,EAAYz2B,GAAY,GAC7B,MAAM1D,GAAU,IAAAwS,YAAW,KAC3B,GAAgB,OAAZxS,EACA,MAAO,EAAC,EAAM,MAClB,MAAM,UAAEgE,EAAS,eAAEC,EAAc,SAAEI,GAAarE,EAG1CuD,GAAK,IAAA62B,UACX,IAAA/2C,YAAU,KACFqgB,GACAW,EAASd,EAAG,GACjB,CAACG,IACJ,MAAM2N,GAAe,IAAAoX,cAAY,IAAM/kB,GAAaO,GAAkBA,EAAeV,IAAK,CAACA,EAAIU,EAAgBP,IAC/G,OAAQM,GAAaC,EAAiB,EAAC,EAAOoN,GAAgB,EAAC,EACnE,C,uDCrCA,MAAMoB,GAAqB,E,QAAAlD,eAAc,CAAC,E,uDCkB1C,MAAMgpB,EAAY,CAACr5C,EAAM+gC,EAAIhtC,IAClBiM,GAAQ+gC,EAAK/gC,GAAQjM,C","sources":["webpack://react/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://react/./node_modules/motion-utils/dist/es/noop.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://react/./node_modules/motion-utils/dist/es/memo.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://react/./node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://react/./node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","webpack://react/./node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","webpack://react/./node_modules/motion-dom/dist/es/animation/controls/Group.mjs","webpack://react/./node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","webpack://react/./node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","webpack://react/./node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","webpack://react/./node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","webpack://react/./node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","webpack://react/./node_modules/motion-dom/dist/es/utils/supports/flags.mjs","webpack://react/./node_modules/motion-dom/dist/es/utils/supports/memo.mjs","webpack://react/./node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","webpack://react/./node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","webpack://react/./node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","webpack://react/./node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","webpack://react/./node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","webpack://react/./node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","webpack://react/./node_modules/motion-dom/dist/es/gestures/hover.mjs","webpack://react/./node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","webpack://react/./node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","webpack://react/./node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","webpack://react/./node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","webpack://react/./node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","webpack://react/./node_modules/motion-dom/dist/es/gestures/press/index.mjs","webpack://react/./node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://react/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://react/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://react/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://react/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://react/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://react/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://react/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://react/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://react/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://react/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://react/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://react/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://react/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://react/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://react/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://react/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://react/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://react/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://react/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://react/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://react/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://react/./node_modules/framer-motion/dist/es/frameloop/microtask.mjs","webpack://react/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://react/./node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://react/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://react/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://react/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://react/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://react/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://react/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://react/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://react/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://react/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://react/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://react/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://react/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://react/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://react/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://react/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://react/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://react/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://react/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://react/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://react/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://react/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://react/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://react/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/components/create-factory.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","webpack://react/./node_modules/framer-motion/dist/es/render/components/motion/create.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://react/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","webpack://react/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://react/./node_modules/motion-utils/dist/es/progress.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://react/./node_modules/motion-utils/dist/es/time-conversion.mjs","webpack://react/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://react/./node_modules/motion-utils/dist/es/errors.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://react/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://react/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/mix/color.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/mix/complex.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/mix/index.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://react/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://react/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://react/./node_modules/framer-motion/dist/es/utils/mix/number.mjs"],"sourcesContent":["import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.18.2\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { progress } from 'motion-utils';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\n/**\n * Filter out events that are not pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        callback(event);\n    };\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = filterEvents((enterEvent) => {\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = filterEvents((leaveEvent) => {\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        });\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    });\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(elementOrSelector, onPressStart, options = {}) {\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = (startEvent) => {\n        const element = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\n            return;\n        isPressing.add(element);\n        const onPressEnd = onPressStart(startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n                return;\n            }\n            isPressing.delete(element);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, options.useGlobalTarget ||\n                isNodeOrChild(element, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach((element) => {\n        if (!isElementKeyboardAccessible(element) &&\n            element.getAttribute(\"tabindex\") === null) {\n            element.tabIndex = 0;\n        }\n        const target = options.useGlobalTarget ? window : element;\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !transformTemplate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from 'motion-dom';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from 'motion-utils';\nimport { setDragLock } from 'motion-dom';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { getValueTransition } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.18.2\", `Attempting to mix Motion versions ${nextValue.version} with 11.18.2 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe)\n            register(id);\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n"],"names":["schedule","frame","cancel","cancelFrame","state","frameData","steps","frameSteps","requestAnimationFrame","checkStringStartsWith","token","key","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","value","singleCssVariableRegex","test","split","trim","floatRegex","combineFunctions","a","b","v","pipe","transformers","reduce","noop","any","hsla","parse","transform","hue","saturation","lightness","alpha","alpha$1","Math","round","addUniqueItem","arr","item","indexOf","push","removeItem","index","splice","clamp","min","max","SubscriptionManager","constructor","this","subscriptions","add","handler","notify","c","numSubscriptions","length","i","getSize","clear","number","parseFloat","scale","default","singleColorRegex","isColorString","type","testProp","Boolean","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","undefined","defaultOffset","offset","remaining","offsetProgress","progress","fillOffset","rgbUnit","clampRgbUnit","rgba","red","green","blue","memo","callback","result","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","values","indexes","color","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","sanitize","convertNumbersToZero","complex","_a","_b","isNaN","getAnimatableNone","parsed","transformer","map","now","clearTime","time","set","isProcessing","useManualTiming","timestamp","performance","newTime","queueMicrotask","MotionGlobalConfig","skipAnimations","collectMotionValues","current","MotionValue","init","options","version","canTrackVelocity","events","updateAndNotify","render","currentTime","updatedAt","setPrevFrameValue","prev","setCurrent","change","renderRequest","hasAnimated","owner","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","read","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","delta","jump","endAnimation","get","getPrevious","getVelocity","start","startAnimation","Promise","resolve","animation","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","supportsScrollTimeline","window","ScrollTimeline","animations","runAll","filter","finished","all","getAll","propName","setAll","newValue","attachTimeline","timeline","fallback","forEach","speed","startTime","duration","methodName","controls","flatten","play","pause","complete","GroupPlaybackControls","onResolve","onReject","catch","transition","maxGeneratorDuration","calcGeneratorDuration","generator","next","done","Infinity","isGenerator","onfinish","isBezierDefinition","easing","Array","isArray","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","createElement","animate","opacity","e","generateLinearEasing","resolution","points","numPoints","substring","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","segmentEasing","isDragging","x","y","isDragActive","resolveElements","elementOrSelector","scope","selectorCache","Element","root","elements","querySelectorAll","from","setupGesture","gestureAbortController","AbortController","passive","signal","abort","filterEvents","event","pointerType","hover","onHoverStart","eventOptions","onPointerEnter","enterEvent","target","onHoverEnd","onPointerLeave","leaveEvent","removeEventListener","addEventListener","element","isNodeOrChild","parent","child","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","Set","isPressing","WeakSet","firePointerEvent","dispatchEvent","PointerEvent","bubbles","enableKeyboardPress","focusEvent","currentTarget","handleKeydown","has","handleKeyup","isValidPressEvent","press","onPressStart","cancelEvents","startPress","startEvent","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","delete","upEvent","useGlobalTarget","cancelEvent","tagName","tabIndex","isElementKeyboardAccessible","getAttribute","setDragLock","axis","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","args","_target","isAnimationControls","isKeyframesTarget","shallowCompare","prevLength","isVariantLabel","getValueState","visualElement","resolveVariantFromProps","props","definition","custom","velocity","variants","resolveVariant","getProps","variantPriorityOrder","variantProps","transformPropOrder","transformProps","positionalKeys","setMotionValue","hasValue","getValue","addValue","isMotionValue","addValueToWillChange","willChange","camelToDash","str","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","instantAnimationState","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","p","reverseEasing","backInOut","anticipate","pow","sin","acos","circInOut","isZeroValueString","maxDefaults","applyDefaultFilter","name","slice","unit","defaultValue","functionRegex","functions","join","browserNumberValueTypes","borderWidth","px","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","z","perspective","transformPerspective","originX","originY","originZ","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","isComplete","scheduleResolve","resolveKeyframes","currentValue","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","testValueType","dimensionValueTypes","vw","vh","findDimensionValueType","find","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","isNotNull","getFinalKeyframe","keyframes","repeat","repeatType","resolvedKeyframes","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","reject","currentFinishedPromise","calcGeneratorVelocity","resolveValue","prevT","springDefaults","granular","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","g","initialGuess","rootIterations","approximateRoot","stiffness","damping","sqrt","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","visualDuration","restSpeed","restDelta","isResolvedFromDuration","springOptions","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","interpolate","frameloopDriver","update","passTimestamp","generators","decay","tween","percentToProgress","percent","MainThreadAnimation","holdTime","cancelTime","playbackSpeed","pendingPlayState","teardown","onStop","KeyframeResolver$1","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","mix","reverse","resolvedDuration","totalDuration","tick","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","supportsWaapi","unsupportedEasingFunctions","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","startWaapiAnimation","pendingTimeline","playbackRate","playState","sampleTime","supports","HTMLElement","transformTemplate","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","isControllingVariants","context","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","acc","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","arguments","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","addDomEvent","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","isRefObject","ref","calcLength","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","postRender","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","SwitchLayoutGroupContext","createContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","template","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","LayoutGroupContext","L","jsx","applyTo","boxShadow","compareByDepth","FlatTree","children","isDirty","timeout","checkElapsed","resolveMotionValue","unwrappedValue","toValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","process","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","to","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","includes","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","handleHoverEvent","lifecycle","handlePressEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","tap","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","LazyContext","strict","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","useCallback","onMount","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","PresenceContext","reducedMotionConfig","MotionConfigContext","reducedMotion","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","isStatic","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","lowercaseSVGElements","isSVGComponent","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","renderState","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","vars","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createHtmlRenderState","createSvgRenderState","tag","renderHTML","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","isForcedMotionValue","newValues","charAt","layoutProps","svgMotionConfig","needsMeasure","getBBox","updateSVGDimensions","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","motion","hex","r","parseInt","createUnitType","endsWith","degrees","progressPercentage","toFromDifference","velocityPerSecond","frameDuration","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","warning","invariant","isBrowser","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","flagRunNextFrame","thisFrame","nextFrame","flushNextFrame","toKeepAlive","latestFrameData","triggerCallback","step","keepAlive","immediate","queue","createRenderStep","processBatch","useConstant","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","input","isClamp","inputLength","isZeroDeltaRange","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","usePresence","useId"],"sourceRoot":""}